/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function t(t, e, i, o) { var r, s = arguments.length, n = s < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o; if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(t, e, i, o); else for (var a = t.length - 1; a >= 0; a--)(r = t[a]) && (n = (s < 3 ? r(n) : s > 3 ? r(e, i, n) : r(e, i)) || n); return s > 3 && n && Object.defineProperty(e, i, n), n; } const e = function () { if ("undefined" != typeof globalThis) return globalThis; if ("undefined" != typeof global) return global; if ("undefined" != typeof self) return self; if ("undefined" != typeof window) return window; try { return new Function("return this")(); } catch (t) { return {}; } }(); void 0 === e.trustedTypes && (e.trustedTypes = { createPolicy: (t, e) => e }); const i = [], o = e.trustedTypes.createPolicy("fast-html", { createHTML: t => t }); let r = o; function s() { let t = 0; for (; t < i.length;) { if (i[t].call(), t++, t > 1024) { for (let e = 0, o = i.length - t; e < o; e++)i[e] = i[e + t]; i.length -= t, t = 0; } } i.length = 0; } const n = "fast-" + Math.random().toString(36).substring(2, 8), a = n + "{", l = "}" + n, d = Object.freeze({ supportsAdoptedStyleSheets: Array.isArray(document.adoptedStyleSheets) && "replace" in CSSStyleSheet.prototype, setHTMLPolicy(t) { if (r !== o) throw new Error("The HTML policy can only be set once."); r = t; }, createHTML: t => r.createHTML(t), isMarker: t => t && 8 === t.nodeType && t.data.startsWith(n), extractDirectiveIndexFromMarker: t => parseInt(t.data.replace(n + ":", "")), createInterpolationPlaceholder: t => `${a}${t}${l}`, createCustomAttributePlaceholder(t, e) { return `${t}="${this.createInterpolationPlaceholder(e)}"`; }, createBlockPlaceholder: t => `\x3c!--${n}:${t}--\x3e`, queueUpdate(t) { i.length < 1 && window.requestAnimationFrame(s), i.push(t); }, nextUpdate: () => new Promise(t => { d.queueUpdate(t); }), setAttribute(t, e, i) { null == i ? t.removeAttribute(e) : t.setAttribute(e, i); }, setBooleanAttribute(t, e, i) { i ? t.setAttribute(e, "") : t.removeAttribute(e); }, removeChildNodes(t) { for (let e = t.firstChild; null !== e; e = t.firstChild)t.removeChild(e); }, createTemplateWalker: t => document.createTreeWalker(t, 133, null, !1) }); function c(t) { const e = this.spillover; -1 === e.indexOf(t) && e.push(t); } function h(t) { const e = this.spillover, i = e.indexOf(t); -1 !== i && e.splice(i, 1); } function u(t) { const e = this.spillover, i = this.source; for (let o = 0, r = e.length; o < r; ++o)e[o].handleChange(i, t); } function p(t) { return -1 !== this.spillover.indexOf(t); } class v { constructor(t, e) { this.sub1 = void 0, this.sub2 = void 0, this.spillover = void 0, this.source = t, this.sub1 = e; } has(t) { return this.sub1 === t || this.sub2 === t; } subscribe(t) { this.has(t) || (void 0 !== this.sub1 ? void 0 !== this.sub2 ? (this.spillover = [this.sub1, this.sub2, t], this.subscribe = c, this.unsubscribe = h, this.notify = u, this.has = p, this.sub1 = void 0, this.sub2 = void 0) : this.sub2 = t : this.sub1 = t); } unsubscribe(t) { this.sub1 === t ? this.sub1 = void 0 : this.sub2 === t && (this.sub2 = void 0); } notify(t) { const e = this.sub1, i = this.sub2, o = this.source; void 0 !== e && e.handleChange(o, t), void 0 !== i && i.handleChange(o, t); } } class g { constructor(t) { this.subscribers = {}, this.source = t; } notify(t) { const e = this.subscribers[t]; void 0 !== e && e.notify(t); } subscribe(t, e) { let i = this.subscribers[e]; void 0 === i && (this.subscribers[e] = i = new v(this.source)), i.subscribe(t); } unsubscribe(t, e) { const i = this.subscribers[e]; void 0 !== i && i.unsubscribe(t); } } const b = /(\:|\&\&|\|\||if)/, f = new WeakMap, m = new WeakMap; let y = void 0, x = t => { throw new Error("Must call enableArrayObservation before observing arrays."); }; class $ { constructor(t) { this.name = t, this.field = "_" + t, this.callback = t + "Changed"; } getValue(t) { return void 0 !== y && y.watch(t, this.name), t[this.field]; } setValue(t, e) { const i = this.field, o = t[i]; if (o !== e) { t[i] = e; const r = t[this.callback]; "function" == typeof r && r.call(t, o, e), w(t).notify(this.name); } } } const k = Object.freeze({ setArrayObserverFactory(t) { x = t; }, getNotifier(t) { let e = t.$fastController || f.get(t); return void 0 === e && (Array.isArray(t) ? e = x(t) : f.set(t, e = new g(t))), e; }, track(t, e) { void 0 !== y && y.watch(t, e); }, trackVolatile() { void 0 !== y && (y.needsRefresh = !0); }, notify(t, e) { w(t).notify(e); }, defineProperty(t, e) { "string" == typeof e && (e = new $(e)), this.getAccessors(t).push(e), Reflect.defineProperty(t, e.name, { enumerable: !0, get: function () { return e.getValue(this); }, set: function (t) { e.setValue(this, t); } }); }, getAccessors(t) { let e = m.get(t); if (void 0 === e) { let i = Reflect.getPrototypeOf(t); for (; void 0 === e && null !== i;)e = m.get(i), i = Reflect.getPrototypeOf(i); e = void 0 === e ? [] : e.slice(0), m.set(t, e); } return e; }, binding(t, e, i = this.isVolatileBinding(t)) { return new E(t, e, i); }, isVolatileBinding: t => b.test(t.toString()) }), w = k.getNotifier, C = k.trackVolatile, F = d.queueUpdate; function D(t, e) { k.defineProperty(t, e); } function T(t, e, i) { return Object.assign({}, i, { get: function () { return C(), i.get.apply(this); } }); } let P = null; function S(t) { P = t; } class I { constructor() { this.index = 0, this.length = 0, this.parent = null, this.parentContext = null; } get event() { return P; } get isEven() { return this.index % 2 == 0; } get isOdd() { return this.index % 2 != 0; } get isFirst() { return 0 === this.index; } get isInMiddle() { return !this.isFirst && !this.isLast; } get isLast() { return this.index === this.length - 1; } } k.defineProperty(I.prototype, "index"), k.defineProperty(I.prototype, "length"); const A = Object.seal(new I); class E extends v { constructor(t, e, i = !1) { super(t, e), this.binding = t, this.isVolatileBinding = i, this.needsRefresh = !0, this.needsQueue = !0, this.first = this, this.last = null, this.propertySource = void 0, this.propertyName = void 0, this.notifier = void 0, this.next = void 0; } observe(t, e) { this.needsRefresh && null !== this.last && this.disconnect(); const i = y; y = this.needsRefresh ? this : void 0, this.needsRefresh = this.isVolatileBinding; const o = this.binding(t, e); return y = i, o; } disconnect() { if (null !== this.last) { let t = this.first; for (; void 0 !== t;)t.notifier.unsubscribe(this, t.propertyName), t = t.next; this.last = null, this.needsRefresh = !0; } } watch(t, e) { const i = this.last, o = w(t), r = null === i ? this.first : {}; if (r.propertySource = t, r.propertyName = e, r.notifier = o, o.subscribe(this, e), null !== i) { if (!this.needsRefresh) { y = void 0; const e = i.propertySource[i.propertyName]; y = this, t === e && (this.needsRefresh = !0); } i.next = r; } this.last = r; } handleChange() { this.needsQueue && (this.needsQueue = !1, F(this)); } call() { null !== this.last && (this.needsQueue = !0, this.notify(this)); } } class O { constructor() { this.targetIndex = 0; } } class B extends O { constructor(t, e, i) { super(), this.name = t, this.behavior = e, this.options = i; } createPlaceholder(t) { return d.createCustomAttributePlaceholder(this.name, t); } createBehavior(t) { return new this.behavior(t, this.options); } } function L(t, e) { this.source = t, this.context = e, null === this.bindingObserver && (this.bindingObserver = k.binding(this.binding, this, this.isBindingVolatile)), this.updateTarget(this.bindingObserver.observe(t, e)); } function H(t, e) { this.source = t, this.context = e, this.target.addEventListener(this.targetName, this); } function R() { this.bindingObserver.disconnect(), this.source = null, this.context = null; } function M() { this.bindingObserver.disconnect(), this.source = null, this.context = null; const t = this.target.$fastView; void 0 !== t && t.isComposed && (t.unbind(), t.needsBindOnly = !0); } function N() { this.target.removeEventListener(this.targetName, this), this.source = null, this.context = null; } function z(t) { d.setAttribute(this.target, this.targetName, t); } function j(t) { d.setBooleanAttribute(this.target, this.targetName, t); } function V(t) { if (null == t && (t = ""), t.create) { this.target.textContent = ""; let e = this.target.$fastView; void 0 === e ? e = t.create() : this.target.$fastTemplate !== t && (e.isComposed && (e.remove(), e.unbind()), e = t.create()), e.isComposed ? e.needsBindOnly && (e.needsBindOnly = !1, e.bind(this.source, this.context)) : (e.isComposed = !0, e.bind(this.source, this.context), e.insertBefore(this.target), this.target.$fastView = e, this.target.$fastTemplate = t); } else { const e = this.target.$fastView; void 0 !== e && e.isComposed && (e.isComposed = !1, e.remove(), e.needsBindOnly ? e.needsBindOnly = !1 : e.unbind()), this.target.textContent = t; } } function _(t) { this.target[this.targetName] = t; } function G(t) { const e = this.classVersions || Object.create(null), i = this.target; let o = this.version || 0; if (null != t && t.length) { const r = t.split(/\s+/); for (let t = 0, s = r.length; t < s; ++t) { const s = r[t]; "" !== s && (e[s] = o, i.classList.add(s)); } } if (this.classVersions = e, this.version = o + 1, 0 !== o) { o -= 1; for (const t in e) e[t] === o && i.classList.remove(t); } } class q extends O { constructor(t) { super(), this.binding = t, this.bind = L, this.unbind = R, this.updateTarget = z, this.createPlaceholder = d.createInterpolationPlaceholder, this.isBindingVolatile = k.isVolatileBinding(this.bind); } get targetName() { return this.originalTargetName; } set targetName(t) { if (this.originalTargetName = t, void 0 !== t) switch (t[0]) { case ":": if (this.cleanedTargetName = t.substr(1), this.updateTarget = _, "innerHTML" === this.cleanedTargetName) { const t = this.binding; this.binding = (e, i) => d.createHTML(t(e, i)); } break; case "?": this.cleanedTargetName = t.substr(1), this.updateTarget = j; break; case "@": this.cleanedTargetName = t.substr(1), this.bind = H, this.unbind = N; break; default: this.cleanedTargetName = t, "class" === t && (this.updateTarget = G); } } targetAtContent() { this.updateTarget = V, this.unbind = M; } createBehavior(t) { return new W(t, this.binding, this.isBindingVolatile, this.bind, this.unbind, this.updateTarget, this.cleanedTargetName); } } class W { constructor(t, e, i, o, r, s, n) { this.source = null, this.context = null, this.bindingObserver = null, this.target = t, this.binding = e, this.isBindingVolatile = i, this.bind = o, this.unbind = r, this.updateTarget = s, this.targetName = n; } handleChange() { this.updateTarget(this.bindingObserver.observe(this.source, this.context)); } handleEvent(t) { S(t); const e = this.binding(this.source, this.context); S(null), !0 !== e && t.preventDefault(); } } class U { addFactory(t) { t.targetIndex = this.targetIndex, this.behaviorFactories.push(t); } captureContentBinding(t) { t.targetAtContent(), this.addFactory(t); } reset() { this.behaviorFactories = [], this.targetIndex = -1; } release() { K = this; } static borrow(t) { const e = K || new U; return e.directives = t, e.reset(), K = null, e; } } let K = null; function X(t) { if (1 === t.length) return t[0]; let e; const i = t.length, o = t.map(t => "string" == typeof t ? () => t : (e = t.targetName || e, t.binding)), r = new q((t, e) => { let r = ""; for (let s = 0; s < i; ++s)r += o[s](t, e); return r; }); return r.targetName = e, r; } const Q = l.length; function Y(t, e) { const i = e.split(a); if (1 === i.length) return null; const o = []; for (let e = 0, r = i.length; e < r; ++e) { const r = i[e], s = r.indexOf(l); let n; if (-1 === s) n = r; else { const e = parseInt(r.substring(0, s)); o.push(t.directives[e]), n = r.substring(s + Q); } "" !== n && o.push(n); } return o; } function Z(t, e, i = !1) { const o = e.attributes; for (let r = 0, s = o.length; r < s; ++r) { const n = o[r], a = n.value, l = Y(t, a); let d = null; null === l ? i && (d = new q(() => a), d.targetName = n.name) : d = X(l), null !== d && (e.removeAttributeNode(n), r--, s--, t.addFactory(d)); } } function J(t, e, i) { const o = Y(t, e.textContent); if (null !== o) { let r = e; for (let s = 0, n = o.length; s < n; ++s) { const n = o[s], a = 0 === s ? e : r.parentNode.insertBefore(document.createTextNode(""), r.nextSibling); "string" == typeof n ? a.textContent = n : (a.textContent = " ", t.captureContentBinding(n)), r = a, t.targetIndex++, a !== e && i.nextNode(); } t.targetIndex--; } } function tt(t, e) { const i = t.content; document.adoptNode(i); const o = U.borrow(e); Z(o, t, !0); const r = o.behaviorFactories; o.reset(); const s = d.createTemplateWalker(i); let n; for (; n = s.nextNode();)switch (o.targetIndex++, n.nodeType) { case 1: Z(o, n); break; case 3: J(o, n, s); break; case 8: d.isMarker(n) && o.addFactory(e[d.extractDirectiveIndexFromMarker(n)]); }let a = 0; d.isMarker(i.firstChild) && (i.insertBefore(document.createComment(""), i.firstChild), a = -1); const l = o.behaviorFactories; return o.release(), { fragment: i, viewBehaviorFactories: l, hostBehaviorFactories: r, targetOffset: a }; } const et = document.createRange(); class it { constructor(t, e) { this.fragment = t, this.behaviors = e, this.source = null, this.context = null, this.firstChild = t.firstChild, this.lastChild = t.lastChild; } appendTo(t) { t.appendChild(this.fragment); } insertBefore(t) { if (this.fragment.hasChildNodes()) t.parentNode.insertBefore(this.fragment, t); else { const e = t.parentNode, i = this.lastChild; let o, r = this.firstChild; for (; r !== i;)o = r.nextSibling, e.insertBefore(r, t), r = o; e.insertBefore(i, t); } } remove() { const t = this.fragment, e = this.lastChild; let i, o = this.firstChild; for (; o !== e;)i = o.nextSibling, t.appendChild(o), o = i; t.appendChild(e); } dispose() { const t = this.firstChild.parentNode, e = this.lastChild; let i, o = this.firstChild; for (; o !== e;)i = o.nextSibling, t.removeChild(o), o = i; t.removeChild(e); const r = this.behaviors, s = this.source; for (let t = 0, e = r.length; t < e; ++t)r[t].unbind(s); } bind(t, e) { const i = this.behaviors; if (this.source !== t) if (null !== this.source) { const o = this.source; this.source = t, this.context = e; for (let r = 0, s = i.length; r < s; ++r) { const s = i[r]; s.unbind(o), s.bind(t, e); } } else { this.source = t, this.context = e; for (let o = 0, r = i.length; o < r; ++o)i[o].bind(t, e); } } unbind() { if (null === this.source) return; const t = this.behaviors, e = this.source; for (let i = 0, o = t.length; i < o; ++i)t[i].unbind(e); this.source = null; } static disposeContiguousBatch(t) { if (0 !== t.length) { et.setStart(t[0].firstChild, 0), et.setEnd(t[t.length - 1].lastChild.nextSibling, 0), et.deleteContents(); for (let e = 0, i = t.length; e < i; ++e) { const i = t[e], o = i.behaviors, r = i.source; for (let t = 0, e = o.length; t < e; ++t)o[t].unbind(r); } } } } class ot { constructor(t, e) { this.behaviorCount = 0, this.hasHostBehaviors = !1, this.fragment = null, this.targetOffset = 0, this.viewBehaviorFactories = null, this.hostBehaviorFactories = null, this.html = t, this.directives = e; } create(t) { if (null === this.fragment) { let t; const e = this.html; if ("string" == typeof e) { t = document.createElement("template"), t.innerHTML = d.createHTML(e); const i = t.content.firstElementChild; null !== i && "TEMPLATE" === i.tagName && (t = i); } else t = e; const i = tt(t, this.directives); this.fragment = i.fragment, this.viewBehaviorFactories = i.viewBehaviorFactories, this.hostBehaviorFactories = i.hostBehaviorFactories, this.targetOffset = i.targetOffset, this.behaviorCount = this.viewBehaviorFactories.length + this.hostBehaviorFactories.length, this.hasHostBehaviors = this.hostBehaviorFactories.length > 0; } const e = this.fragment.cloneNode(!0), i = this.viewBehaviorFactories, o = new Array(this.behaviorCount), r = d.createTemplateWalker(e); let s = 0, n = this.targetOffset, a = r.nextNode(); for (let t = i.length; s < t; ++s) { const t = i[s], e = t.targetIndex; for (; null !== a;) { if (n === e) { o[s] = t.createBehavior(a); break; } a = r.nextNode(), n++; } } if (this.hasHostBehaviors) { const e = this.hostBehaviorFactories; for (let i = 0, r = e.length; i < r; ++i, ++s)o[s] = e[i].createBehavior(t); } return new it(e, o); } render(t, e, i) { "string" == typeof e && (e = document.getElementById(e)), void 0 === i && (i = e); const o = this.create(i); return o.bind(t, A), o.appendTo(e), o; } } const rt = /([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/; function st(t, ...e) { const i = []; let o = ""; for (let r = 0, s = t.length - 1; r < s; ++r) { const s = t[r]; let n = e[r]; if (o += s, n instanceof ot) { const t = n; n = () => t; } if ("function" == typeof n) { n = new q(n); const t = rt.exec(s); null !== t && (n.targetName = t[2]); } n instanceof O ? (o += n.createPlaceholder(i.length), i.push(n)) : o += n; } return o += t[t.length - 1], new ot(o, i); } const nt = new Map; class at { constructor() { this.behaviors = null; } withBehaviors(...t) { return this.behaviors = null === this.behaviors ? t : this.behaviors.concat(t), this; } withKey(t) { return nt.set(t, this), this; } static find(t) { return nt.get(t) || null; } } function lt(t) { return t.map(t => t instanceof at ? lt(t.styles) : [t]).reduce((t, e) => t.concat(e), []); } function dt(t) { return t.map(t => t instanceof at ? t.behaviors : null).reduce((t, e) => null === e ? t : (null === t && (t = []), t.concat(e)), null); } at.create = (() => { if (d.supportsAdoptedStyleSheets) { const t = new Map; return e => new ct(e, t); } return t => new ut(t); })(); class ct extends at { constructor(t, e) { super(), this.styles = t, this.behaviors = null, this.behaviors = dt(t), this.styleSheets = lt(t).map(t => { if (t instanceof CSSStyleSheet) return t; let i = e.get(t); return void 0 === i && (i = new CSSStyleSheet, i.replaceSync(t), e.set(t, i)), i; }); } addStylesTo(t) { t.adoptedStyleSheets = [...t.adoptedStyleSheets, ...this.styleSheets]; } removeStylesFrom(t) { const e = this.styleSheets; t.adoptedStyleSheets = t.adoptedStyleSheets.filter(t => -1 === e.indexOf(t)); } } let ht = 0; class ut extends at { constructor(t) { super(), this.styles = t, this.behaviors = null, this.behaviors = dt(t), this.styleSheets = lt(t), this.styleClass = "fast-style-class-" + ++ht; } addStylesTo(t) { const e = this.styleSheets, i = this.styleClass; t === document && (t = document.body); for (let o = e.length - 1; o > -1; --o) { const r = document.createElement("style"); r.innerHTML = e[o], r.className = i, t.prepend(r); } } removeStylesFrom(t) { t === document && (t = document.body); const e = t.querySelectorAll("." + this.styleClass); for (let i = 0, o = e.length; i < o; ++i)t.removeChild(e[i]); } } function pt(t, ...e) { const i = []; let o = ""; for (let r = 0, s = t.length - 1; r < s; ++r) { o += t[r]; const s = e[r]; s instanceof at || s instanceof CSSStyleSheet ? ("" !== o.trim() && (i.push(o), o = ""), i.push(s)) : o += s; } return o += t[t.length - 1], "" !== o.trim() && i.push(o), at.create(i); } const vt = { toView: t => t ? "true" : "false", fromView: t => null != t && "false" !== t && !1 !== t && 0 !== t }, gt = { toView(t) { if (null == t) return null; const e = 1 * t; return isNaN(e) ? null : e.toString(); }, fromView(t) { if (null == t) return null; const e = 1 * t; return isNaN(e) ? null : e; } }; class bt { constructor(t, e, i = e.toLowerCase(), o = "reflect", r) { this.guards = new Set, this.Owner = t, this.name = e, this.attribute = i, this.mode = o, this.converter = r, this.fieldName = "_" + e, this.callbackName = e + "Changed", this.hasCallback = this.callbackName in t.prototype, "boolean" === o && void 0 === r && (this.converter = vt); } setValue(t, e) { const i = t[this.fieldName], o = this.converter; void 0 !== o && (e = o.fromView(e)), i !== e && (t[this.fieldName] = e, this.tryReflectToAttribute(t), this.hasCallback && t[this.callbackName](i, e), t.$fastController.notify(this.name)); } getValue(t) { return k.track(t, this.name), t[this.fieldName]; } onAttributeChangedCallback(t, e) { this.guards.has(t) || (this.guards.add(t), this.setValue(t, e), this.guards.delete(t)); } tryReflectToAttribute(t) { const e = this.mode, i = this.guards; i.has(t) || "fromView" === e || d.queueUpdate(() => { i.add(t); const o = t[this.fieldName]; switch (e) { case "reflect": const e = this.converter; d.setAttribute(t, this.attribute, void 0 !== e ? e.toView(o) : o); break; case "boolean": d.setBooleanAttribute(t, this.attribute, o); }i.delete(t); }); } static collect(t, ...e) { const i = []; e.push(t.attributes); for (let o = 0, r = e.length; o < r; ++o) { const r = e[o]; if (void 0 !== r) for (let e = 0, o = r.length; e < o; ++e) { const o = r[e]; "string" == typeof o ? i.push(new bt(t, o)) : i.push(new bt(t, o.property, o.attribute, o.mode, o.converter)); } } return i; } } function ft(t, e) { let i; function o(t, e) { arguments.length > 1 && (i.property = e); const o = t.constructor.attributes || (t.constructor.attributes = []); o.push(i); } return arguments.length > 1 ? (i = {}, void o(t, e)) : (i = void 0 === t ? {} : t, o); } const mt = { mode: "open" }, yt = {}, xt = new Map; class $t { constructor(t, e = t.definition) { "string" == typeof e && (e = { name: e }), this.type = t, this.name = e.name, this.template = e.template; const i = bt.collect(t, e.attributes), o = new Array(i.length), r = {}, s = {}; for (let t = 0, e = i.length; t < e; ++t) { const e = i[t]; o[t] = e.attribute, r[e.name] = e, s[e.attribute] = e; } this.attributes = i, this.observedAttributes = o, this.propertyLookup = r, this.attributeLookup = s, this.shadowOptions = void 0 === e.shadowOptions ? mt : null === e.shadowOptions ? void 0 : Object.assign(Object.assign({}, mt), e.shadowOptions), this.elementOptions = void 0 === e.elementOptions ? yt : Object.assign(Object.assign({}, yt), e.elementOptions), this.styles = void 0 === e.styles ? void 0 : Array.isArray(e.styles) ? at.create(e.styles) : e.styles instanceof at ? e.styles : at.create([e.styles]); } define(t = customElements) { const e = this.type; if (!this.isDefined) { const t = this.attributes, i = e.prototype; for (let e = 0, o = t.length; e < o; ++e)k.defineProperty(i, t[e]); Reflect.defineProperty(e, "observedAttributes", { value: this.observedAttributes, enumerable: !0 }), xt.set(e, this), this.isDefined = !0; } return t.get(this.name) || t.define(this.name, e, this.elementOptions), this; } static forType(t) { return xt.get(t); } } const kt = new WeakMap, wt = { bubbles: !0, composed: !0 }; function Ct(t) { return t.shadowRoot || kt.get(t) || null; } class Ft extends g { constructor(t, e) { super(t), this.boundObservables = null, this.behaviors = null, this.needsInitialization = !0, this._template = null, this._styles = null, this.view = null, this.isConnected = !1, this.element = t, this.definition = e; const i = e.shadowOptions; if (void 0 !== i) { const e = t.attachShadow(i); "closed" === i.mode && kt.set(t, e); } const o = k.getAccessors(t); if (o.length > 0) { const e = this.boundObservables = Object.create(null); for (let i = 0, r = o.length; i < r; ++i) { const r = o[i].name, s = t[r]; void 0 !== s && (delete t[r], e[r] = s); } } } get template() { return this._template; } set template(t) { this._template !== t && (this._template = t, this.needsInitialization || this.renderTemplate(t)); } get styles() { return this._styles; } set styles(t) { this._styles !== t && (null !== this._styles && this.removeStyles(this._styles), this._styles = t, this.needsInitialization || null === t || this.addStyles(t)); } addStyles(t) { const e = t.behaviors, i = Ct(this.element) || this.element.getRootNode(); t.addStylesTo(i), null !== e && this.addBehaviors(e); } removeStyles(t) { const e = t.behaviors, i = Ct(this.element) || this.element.getRootNode(); t.removeStylesFrom(i), null !== e && this.removeBehaviors(e); } addBehaviors(t) { const e = this.behaviors || (this.behaviors = []), i = t.length; for (let o = 0; o < i; ++o)e.push(t[o]); if (this.isConnected) { const e = this.element; for (let o = 0; o < i; ++o)t[o].bind(e, A); } } removeBehaviors(t) { const e = this.behaviors; if (null === e) return; const i = t.length; for (let o = 0; o < i; ++o) { const i = e.indexOf(t[o]); -1 !== i && e.splice(i, 1); } if (this.isConnected) { const e = this.element; for (let o = 0; o < i; ++o)t[o].unbind(e); } } onConnectedCallback() { if (this.isConnected) return; const t = this.element; this.needsInitialization ? this.finishInitialization() : null !== this.view && this.view.bind(t, A); const e = this.behaviors; if (null !== e) for (let i = 0, o = e.length; i < o; ++i)e[i].bind(t, A); this.isConnected = !0; } onDisconnectedCallback() { if (!1 === this.isConnected) return; this.isConnected = !1; const t = this.view; null !== t && t.unbind(); const e = this.behaviors; if (null !== e) { const t = this.element; for (let i = 0, o = e.length; i < o; ++i)e[i].unbind(t); } } onAttributeChangedCallback(t, e, i) { const o = this.definition.attributeLookup[t]; void 0 !== o && o.onAttributeChangedCallback(this.element, i); } emit(t, e, i) { return !!this.isConnected && this.element.dispatchEvent(new CustomEvent(t, Object.assign(Object.assign({ detail: e }, wt), i))); } finishInitialization() { const t = this.element, e = this.boundObservables; if (null !== e) { const i = Object.keys(e); for (let o = 0, r = i.length; o < r; ++o) { const r = i[o]; t[r] = e[r]; } this.boundObservables = null; } const i = this.definition; null === this._template && (this.element.resolveTemplate ? this._template = this.element.resolveTemplate() : i.template && (this._template = i.template || null)), null !== this._template && this.renderTemplate(this._template), null === this._styles && (this.element.resolveStyles ? this._styles = this.element.resolveStyles() : i.styles && (this._styles = i.styles || null)), null !== this._styles && this.addStyles(this._styles), this.needsInitialization = !1; } renderTemplate(t) { const e = this.element, i = Ct(e) || e; null !== this.view ? (this.view.dispose(), this.view = null) : this.needsInitialization || d.removeChildNodes(i), t && (this.view = t.render(e, i, e)); } static forCustomElement(t) { const e = t.$fastController; if (void 0 !== e) return e; const i = $t.forType(t.constructor); if (void 0 === i) throw new Error("Missing FASTElement definition."); return t.$fastController = new Ft(t, i); } } function Dt(t) { return class extends t { constructor() { super(), Ft.forCustomElement(this); } $emit(t, e, i) { return this.$fastController.emit(t, e, i); } connectedCallback() { this.$fastController.onConnectedCallback(); } disconnectedCallback() { this.$fastController.onDisconnectedCallback(); } attributeChangedCallback(t, e, i) { this.$fastController.onAttributeChangedCallback(t, e, i); } }; } const Tt = Object.assign(Dt(HTMLElement), { from: t => Dt(t), define: (t, e) => new $t(t, e).define().type }); function Pt(t) { return function (e) { new $t(e, t).define(); }; } const St = Object.freeze([]); class It { constructor(t, e) { this.target = t, this.propertyName = e; } bind(t) { t[this.propertyName] = this.target; } unbind() { } } function At(t) { return new B("fast-ref", It, t); } function Et(t, e) { const i = "function" == typeof e ? e : () => e; return (e, o) => t(e, o) ? i(e, o) : null; } function Ot(t, e, i) { return { index: t, removed: e, addedCount: i }; } function Bt(t, e, i, o, r, s) { let n = 0, a = 0; const l = Math.min(i - e, s - r); if (0 === e && 0 === r && (n = function (t, e, i) { for (let o = 0; o < i; ++o)if (t[o] !== e[o]) return o; return i; }(t, o, l)), i === t.length && s === o.length && (a = function (t, e, i) { let o = t.length, r = e.length, s = 0; for (; s < i && t[--o] === e[--r];)s++; return s; }(t, o, l - n)), r += n, s -= a, (i -= a) - (e += n) == 0 && s - r == 0) return St; if (e === i) { const t = Ot(e, [], 0); for (; r < s;)t.removed.push(o[r++]); return [t]; } if (r === s) return [Ot(e, [], i - e)]; const d = function (t) { let e = t.length - 1, i = t[0].length - 1, o = t[e][i]; const r = []; for (; e > 0 || i > 0;) { if (0 === e) { r.push(2), i--; continue; } if (0 === i) { r.push(3), e--; continue; } const s = t[e - 1][i - 1], n = t[e - 1][i], a = t[e][i - 1]; let l; l = n < a ? n < s ? n : s : a < s ? a : s, l === s ? (s === o ? r.push(0) : (r.push(1), o = s), e--, i--) : l === n ? (r.push(3), e--, o = n) : (r.push(2), i--, o = a); } return r.reverse(), r; }(function (t, e, i, o, r, s) { const n = s - r + 1, a = i - e + 1, l = new Array(n); let d, c; for (let t = 0; t < n; ++t)l[t] = new Array(a), l[t][0] = t; for (let t = 0; t < a; ++t)l[0][t] = t; for (let i = 1; i < n; ++i)for (let s = 1; s < a; ++s)t[e + s - 1] === o[r + i - 1] ? l[i][s] = l[i - 1][s - 1] : (d = l[i - 1][s] + 1, c = l[i][s - 1] + 1, l[i][s] = d < c ? d : c); return l; }(t, e, i, o, r, s)), c = []; let h = void 0, u = e, p = r; for (let t = 0; t < d.length; ++t)switch (d[t]) { case 0: void 0 !== h && (c.push(h), h = void 0), u++, p++; break; case 1: void 0 === h && (h = Ot(u, [], 0)), h.addedCount++, u++, h.removed.push(o[p]), p++; break; case 2: void 0 === h && (h = Ot(u, [], 0)), h.addedCount++, u++; break; case 3: void 0 === h && (h = Ot(u, [], 0)), h.removed.push(o[p]), p++; }return void 0 !== h && c.push(h), c; } const Lt = Array.prototype.push; function Ht(t, e, i, o) { const r = Ot(e, i, o); let s = !1, n = 0; for (let e = 0, i = t.length; e < i; e++) { const i = t[e]; if (i.index += n, s) continue; const o = (a = r.index, l = r.index + r.removed.length, d = i.index, c = i.index + i.addedCount, l < d || c < a ? -1 : l === d || c === a ? 0 : a < d ? l < c ? l - d : c - d : c < l ? c - a : l - a); if (o >= 0) { t.splice(e, 1), e--, n -= i.addedCount - i.removed.length, r.addedCount += i.addedCount - o; const a = r.removed.length + i.removed.length - o; if (r.addedCount || a) { let t = i.removed; if (r.index < i.index) { const e = r.removed.slice(0, i.index - r.index); Lt.apply(e, t), t = e; } if (r.index + r.removed.length > i.index + i.addedCount) { const e = r.removed.slice(i.index + i.addedCount - r.index); Lt.apply(t, e); } r.removed = t, i.index < r.index && (r.index = i.index); } else s = !0; } else if (r.index < i.index) { s = !0, t.splice(e, 0, r), e++; const o = r.addedCount - r.removed.length; i.index += o, n += o; } } var a, l, d, c; s || t.push(r); } function Rt(t, e) { let i = []; const o = function (t) { const e = []; for (let i = 0, o = t.length; i < o; i++) { const o = t[i]; Ht(e, o.index, o.removed, o.addedCount); } return e; }(e); for (let e = 0, r = o.length; e < r; ++e) { const r = o[e]; 1 !== r.addedCount || 1 !== r.removed.length ? i = i.concat(Bt(t, r.index, r.index + r.addedCount, r.removed, 0, r.removed.length)) : r.removed[0] !== t[r.index] && i.push(r); } return i; } let Mt = !1; function Nt(t, e) { let i = t.index; const o = e.length; return i > o ? i = o - t.addedCount : i < 0 && (i = o + t.removed.length + i - t.addedCount), i < 0 && (i = 0), t.index = i, t; } class zt extends v { constructor(t) { super(t), this.oldCollection = void 0, this.splices = void 0, this.needsQueue = !0, this.call = this.flush, t.$fastController = this; } addSplice(t) { void 0 === this.splices ? this.splices = [t] : this.splices.push(t), this.needsQueue && (this.needsQueue = !1, d.queueUpdate(this)); } reset(t) { this.oldCollection = t, this.needsQueue && (this.needsQueue = !1, d.queueUpdate(this)); } flush() { const t = this.splices, e = this.oldCollection; if (void 0 === t && void 0 === e) return; this.needsQueue = !0, this.splices = void 0, this.oldCollection = void 0; const i = void 0 === e ? Rt(this.source, t) : Bt(this.source, 0, this.source.length, e, 0, e.length); this.notify(i); } } const jt = Object.freeze({ positioning: !1 }); function Vt(t, e, i, o) { t.bind(e[i], o); } function _t(t, e, i, o) { const r = Object.create(o); r.index = i, r.length = e.length, t.bind(e[i], r); } class Gt { constructor(t, e, i, o, r, s) { this.location = t, this.itemsBinding = e, this.templateBinding = o, this.options = s, this.source = null, this.views = [], this.items = null, this.itemsObserver = null, this.originalContext = void 0, this.childContext = void 0, this.bindView = Vt, this.itemsBindingObserver = k.binding(e, this, i), this.templateBindingObserver = k.binding(o, this, r), s.positioning && (this.bindView = _t); } bind(t, e) { this.source = t, this.originalContext = e, this.childContext = Object.create(e), this.childContext.parent = t, this.childContext.parentContext = this.originalContext, this.items = this.itemsBindingObserver.observe(t, this.originalContext), this.template = this.templateBindingObserver.observe(t, this.originalContext), this.observeItems(), this.refreshAllViews(); } unbind() { this.source = null, this.items = null, null !== this.itemsObserver && this.itemsObserver.unsubscribe(this), this.unbindAllViews(), this.itemsBindingObserver.disconnect(), this.templateBindingObserver.disconnect(); } handleChange(t, e) { t === this.itemsBinding ? (this.items = this.itemsBindingObserver.observe(this.source, this.originalContext), this.observeItems(), this.refreshAllViews()) : t === this.templateBinding ? (this.template = this.templateBindingObserver.observe(this.source, this.originalContext), this.refreshAllViews(!0)) : this.updateViews(e); } observeItems() { this.items || (this.items = []); const t = this.itemsObserver, e = this.itemsObserver = k.getNotifier(this.items); t !== e && (null !== t && t.unsubscribe(this), e.subscribe(this)); } updateViews(t) { const e = this.childContext, i = this.views, o = [], r = this.bindView; let s = 0; for (let e = 0, r = t.length; e < r; ++e) { const r = t[e], n = r.removed; o.push(...i.splice(r.index + s, n.length)), s -= r.addedCount; } const n = this.items, a = this.template; for (let s = 0, l = t.length; s < l; ++s) { const l = t[s]; let d = l.index; const c = d + l.addedCount; for (; d < c; ++d) { const t = i[d], s = t ? t.firstChild : this.location, l = o.length > 0 ? o.shift() : a.create(); i.splice(d, 0, l), r(l, n, d, e), l.insertBefore(s); } } for (let t = 0, e = o.length; t < e; ++t)o[t].dispose(); if (this.options.positioning) for (let t = 0, e = i.length; t < e; ++t) { const o = i[t].context; o.length = e, o.index = t; } } refreshAllViews(t = !1) { const e = this.items, i = this.childContext, o = this.template, r = this.location, s = this.bindView; let n = e.length, a = this.views, l = a.length; if ((0 === n || t) && (it.disposeContiguousBatch(a), l = 0), 0 === l) { this.views = a = new Array(n); for (let t = 0; t < n; ++t) { const n = o.create(); s(n, e, t, i), a[t] = n, n.insertBefore(r); } } else { let t = 0; for (; t < n; ++t)if (t < l) { s(a[t], e, t, i); } else { const n = o.create(); s(n, e, t, i), a.push(n), n.insertBefore(r); } const d = a.splice(t, l - t); for (t = 0, n = d.length; t < n; ++t)d[t].dispose(); } } unbindAllViews() { const t = this.views; for (let e = 0, i = t.length; e < i; ++e)t[e].unbind(); } } class qt extends O { constructor(t, e, i) { super(), this.itemsBinding = t, this.templateBinding = e, this.options = i, this.createPlaceholder = d.createBlockPlaceholder, function () { if (Mt) return; Mt = !0, k.setArrayObserverFactory(t => new zt(t)); const t = Array.prototype, e = t.pop, i = t.push, o = t.reverse, r = t.shift, s = t.sort, n = t.splice, a = t.unshift; t.pop = function () { const t = this.length > 0, i = e.apply(this, arguments), o = this.$fastController; return void 0 !== o && t && o.addSplice(Ot(this.length, [i], 0)), i; }, t.push = function () { const t = i.apply(this, arguments), e = this.$fastController; return void 0 !== e && e.addSplice(Nt(Ot(this.length - arguments.length, [], arguments.length), this)), t; }, t.reverse = function () { let t; const e = this.$fastController; void 0 !== e && (e.flush(), t = this.slice()); const i = o.apply(this, arguments); return void 0 !== e && e.reset(t), i; }, t.shift = function () { const t = this.length > 0, e = r.apply(this, arguments), i = this.$fastController; return void 0 !== i && t && i.addSplice(Ot(0, [e], 0)), e; }, t.sort = function () { let t; const e = this.$fastController; void 0 !== e && (e.flush(), t = this.slice()); const i = s.apply(this, arguments); return void 0 !== e && e.reset(t), i; }, t.splice = function () { const t = n.apply(this, arguments), e = this.$fastController; return void 0 !== e && e.addSplice(Nt(Ot(+arguments[0], t, arguments.length > 2 ? arguments.length - 2 : 0), this)), t; }, t.unshift = function () { const t = a.apply(this, arguments), e = this.$fastController; return void 0 !== e && e.addSplice(Nt(Ot(0, [], arguments.length), this)), t; }; }(), this.isItemsBindingVolatile = k.isVolatileBinding(t), this.isTemplateBindingVolatile = k.isVolatileBinding(e); } createBehavior(t) { return new Gt(t, this.itemsBinding, this.isItemsBindingVolatile, this.templateBinding, this.isTemplateBindingVolatile, this.options); } } function Wt(t, e, i = jt) { return new qt(t, "function" == typeof e ? e : () => e, i); } function Ut(t) { return t ? function (e, i, o) { return 1 === e.nodeType && e.matches(t); } : function (t, e, i) { return 1 === t.nodeType; }; } class Kt { constructor(t, e) { this.target = t, this.options = e, this.source = null; } bind(t) { const e = this.options.property; this.shouldUpdate = k.getAccessors(t).some(t => t.name === e), this.source = t, this.updateTarget(this.computeNodes()), this.shouldUpdate && this.observe(); } unbind() { this.updateTarget(St), this.source = null, this.shouldUpdate && this.disconnect(); } handleEvent() { this.updateTarget(this.computeNodes()); } computeNodes() { let t = this.getNodes(); return void 0 !== this.options.filter && (t = t.filter(this.options.filter)), t; } updateTarget(t) { this.source[this.options.property] = t; } } class Xt extends Kt { constructor(t, e) { super(t, e); } observe() { this.target.addEventListener("slotchange", this); } disconnect() { this.target.removeEventListener("slotchange", this); } getNodes() { return this.target.assignedNodes(this.options); } } function Qt(t) { return "string" == typeof t && (t = { property: t }), new B("fast-slotted", Xt, t); } class Yt extends Kt { constructor(t, e) { super(t, e), this.observer = null, e.childList = !0; } observe() { null === this.observer && (this.observer = new MutationObserver(this.handleEvent.bind(this))), this.observer.observe(this.target, this.options); } disconnect() { this.observer.disconnect(); } getNodes() { return "subtree" in this.options ? Array.from(this.target.querySelectorAll(this.options.selector)) : Array.from(this.target.childNodes); } } function Zt(t) { return "string" == typeof t && (t = { property: t }), new B("fast-children", Yt, t); } const Jt = st`<template><slot name="item" part="item" ${Qt("accordionItems")}></slot></template>`
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */; function te(t, e, i, o) { var r, s = arguments.length, n = s < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o; if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(t, e, i, o); else for (var a = t.length - 1; a >= 0; a--)(r = t[a]) && (n = (s < 3 ? r(n) : s > 3 ? r(e, i, n) : r(e, i)) || n); return s > 3 && n && Object.defineProperty(e, i, n), n; } var ee; !function (t) { t.horizontal = "horizontal", t.vertical = "vertical"; }(ee || (ee = {})); var ie = "object" == typeof global && global && global.Object === Object && global, oe = "object" == typeof self && self && self.Object === Object && self, re = ie || oe || Function("return this")(), se = re.Symbol, ne = Object.prototype, ae = ne.hasOwnProperty, le = ne.toString, de = se ? se.toStringTag : void 0; var ce = Object.prototype.toString; var he = se ? se.toStringTag : void 0; function ue(t) { return null == t ? void 0 === t ? "[object Undefined]" : "[object Null]" : he && he in Object(t) ? function (t) { var e = ae.call(t, de), i = t[de]; try { t[de] = void 0; var o = !0; } catch (t) { } var r = le.call(t); return o && (e ? t[de] = i : delete t[de]), r; }(t) : function (t) { return ce.call(t); }(t); } function pe(t) { return null != t && "object" == typeof t; } var ve = Array.isArray; function ge(t) { var e = typeof t; return null != t && ("object" == e || "function" == e); } var be = /^\s+|\s+$/g, fe = /^[-+]0x[0-9a-f]+$/i, me = /^0b[01]+$/i, ye = /^0o[0-7]+$/i, xe = parseInt; function $e(t) { if ("number" == typeof t) return t; if (function (t) { return "symbol" == typeof t || pe(t) && "[object Symbol]" == ue(t); }(t)) return NaN; if (ge(t)) { var e = "function" == typeof t.valueOf ? t.valueOf() : t; t = ge(e) ? e + "" : e; } if ("string" != typeof t) return 0 === t ? t : +t; t = t.replace(be, ""); var i = me.test(t); return i || ye.test(t) ? xe(t.slice(2), i ? 2 : 8) : fe.test(t) ? NaN : +t; } function ke(t) { return t ? (t = $e(t)) === 1 / 0 || t === -1 / 0 ? 17976931348623157e292 * (t < 0 ? -1 : 1) : t == t ? t : 0 : 0 === t ? t : 0; } function we(t) { if (!ge(t)) return !1; var e = ue(t); return "[object Function]" == e || "[object GeneratorFunction]" == e || "[object AsyncFunction]" == e || "[object Proxy]" == e; } var Ce, Fe = re["__core-js_shared__"], De = (Ce = /[^.]+$/.exec(Fe && Fe.keys && Fe.keys.IE_PROTO || "")) ? "Symbol(src)_1." + Ce : ""; var Te = Function.prototype.toString; var Pe = /^\[object .+?Constructor\]$/, Se = Function.prototype, Ie = Object.prototype, Ae = Se.toString, Ee = Ie.hasOwnProperty, Oe = RegExp("^" + Ae.call(Ee).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"); function Be(t) { return !(!ge(t) || (e = t, De && De in e)) && (we(t) ? Oe : Pe).test(function (t) { if (null != t) { try { return Te.call(t); } catch (t) { } try { return t + ""; } catch (t) { } } return ""; }(t)); var e; } function Le(t, e) { var i = function (t, e) { return null == t ? void 0 : t[e]; }(t, e); return Be(i) ? i : void 0; } var He = /^(?:0|[1-9]\d*)$/; function Re(t, e) { var i = typeof t; return !!(e = null == e ? 9007199254740991 : e) && ("number" == i || "symbol" != i && He.test(t)) && t > -1 && t % 1 == 0 && t < e; } function Me(t) { return "number" == typeof t && t > -1 && t % 1 == 0 && t <= 9007199254740991; } var Ne = Object.prototype; function ze(t) { return pe(t) && "[object Arguments]" == ue(t); } var je = Object.prototype, Ve = je.hasOwnProperty, _e = je.propertyIsEnumerable, Ge = ze(function () { return arguments; }()) ? ze : function (t) { return pe(t) && Ve.call(t, "callee") && !_e.call(t, "callee"); }; var qe = "object" == typeof exports && exports && !exports.nodeType && exports, We = qe && "object" == typeof module && module && !module.nodeType && module, Ue = We && We.exports === qe ? re.Buffer : void 0, Ke = (Ue ? Ue.isBuffer : void 0) || function () { return !1; }, Xe = {}; Xe["[object Float32Array]"] = Xe["[object Float64Array]"] = Xe["[object Int8Array]"] = Xe["[object Int16Array]"] = Xe["[object Int32Array]"] = Xe["[object Uint8Array]"] = Xe["[object Uint8ClampedArray]"] = Xe["[object Uint16Array]"] = Xe["[object Uint32Array]"] = !0, Xe["[object Arguments]"] = Xe["[object Array]"] = Xe["[object ArrayBuffer]"] = Xe["[object Boolean]"] = Xe["[object DataView]"] = Xe["[object Date]"] = Xe["[object Error]"] = Xe["[object Function]"] = Xe["[object Map]"] = Xe["[object Number]"] = Xe["[object Object]"] = Xe["[object RegExp]"] = Xe["[object Set]"] = Xe["[object String]"] = Xe["[object WeakMap]"] = !1; var Qe, Ye = "object" == typeof exports && exports && !exports.nodeType && exports, Ze = Ye && "object" == typeof module && module && !module.nodeType && module, Je = Ze && Ze.exports === Ye && ie.process, ti = function () { try { var t = Ze && Ze.require && Ze.require("util").types; return t || Je && Je.binding && Je.binding("util"); } catch (t) { } }(), ei = ti && ti.isTypedArray, ii = ei ? (Qe = ei, function (t) { return Qe(t); }) : function (t) { return pe(t) && Me(t.length) && !!Xe[ue(t)]; }, oi = Object.prototype.hasOwnProperty; function ri(t, e) { var i = ve(t), o = !i && Ge(t), r = !i && !o && Ke(t), s = !i && !o && !r && ii(t), n = i || o || r || s, a = n ? function (t, e) { for (var i = -1, o = Array(t); ++i < t;)o[i] = e(i); return o; }(t.length, String) : [], l = a.length; for (var d in t) !e && !oi.call(t, d) || n && ("length" == d || r && ("offset" == d || "parent" == d) || s && ("buffer" == d || "byteLength" == d || "byteOffset" == d) || Re(d, l)) || a.push(d); return a; } var si = function (t, e) { return function (i) { return t(e(i)); }; }(Object.keys, Object), ni = Object.prototype.hasOwnProperty; function ai(t) { if (i = (e = t) && e.constructor, e !== ("function" == typeof i && i.prototype || Ne)) return si(t); var e, i, o = []; for (var r in Object(t)) ni.call(t, r) && "constructor" != r && o.push(r); return o; } function li(t) { return null != (e = t) && Me(e.length) && !we(e) ? ri(t) : ai(t); var e; } var di = Le(Object, "create"); var ci = Object.prototype.hasOwnProperty; var hi = Object.prototype.hasOwnProperty; function ui(t) { var e = -1, i = null == t ? 0 : t.length; for (this.clear(); ++e < i;) { var o = t[e]; this.set(o[0], o[1]); } } function pi(t, e) { for (var i, o, r = t.length; r--;)if ((i = t[r][0]) === (o = e) || i != i && o != o) return r; return -1; } ui.prototype.clear = function () { this.__data__ = di ? di(null) : {}, this.size = 0; }, ui.prototype.delete = function (t) { var e = this.has(t) && delete this.__data__[t]; return this.size -= e ? 1 : 0, e; }, ui.prototype.get = function (t) { var e = this.__data__; if (di) { var i = e[t]; return "__lodash_hash_undefined__" === i ? void 0 : i; } return ci.call(e, t) ? e[t] : void 0; }, ui.prototype.has = function (t) { var e = this.__data__; return di ? void 0 !== e[t] : hi.call(e, t); }, ui.prototype.set = function (t, e) { var i = this.__data__; return this.size += this.has(t) ? 0 : 1, i[t] = di && void 0 === e ? "__lodash_hash_undefined__" : e, this; }; var vi = Array.prototype.splice; function gi(t) { var e = -1, i = null == t ? 0 : t.length; for (this.clear(); ++e < i;) { var o = t[e]; this.set(o[0], o[1]); } } gi.prototype.clear = function () { this.__data__ = [], this.size = 0; }, gi.prototype.delete = function (t) { var e = this.__data__, i = pi(e, t); return !(i < 0) && (i == e.length - 1 ? e.pop() : vi.call(e, i, 1), --this.size, !0); }, gi.prototype.get = function (t) { var e = this.__data__, i = pi(e, t); return i < 0 ? void 0 : e[i][1]; }, gi.prototype.has = function (t) { return pi(this.__data__, t) > -1; }, gi.prototype.set = function (t, e) { var i = this.__data__, o = pi(i, t); return o < 0 ? (++this.size, i.push([t, e])) : i[o][1] = e, this; }; var bi = Le(re, "Map"); function fi(t, e) { var i, o, r = t.__data__; return ("string" == (o = typeof (i = e)) || "number" == o || "symbol" == o || "boolean" == o ? "__proto__" !== i : null === i) ? r["string" == typeof e ? "string" : "hash"] : r.map; } function mi(t) { var e = -1, i = null == t ? 0 : t.length; for (this.clear(); ++e < i;) { var o = t[e]; this.set(o[0], o[1]); } } mi.prototype.clear = function () { this.size = 0, this.__data__ = { hash: new ui, map: new (bi || gi), string: new ui }; }, mi.prototype.delete = function (t) { var e = fi(this, t).delete(t); return this.size -= e ? 1 : 0, e; }, mi.prototype.get = function (t) { return fi(this, t).get(t); }, mi.prototype.has = function (t) { return fi(this, t).has(t); }, mi.prototype.set = function (t, e) { var i = fi(this, t), o = i.size; return i.set(t, e), this.size += i.size == o ? 0 : 1, this; }; function yi(t, e) { if ("function" != typeof t || null != e && "function" != typeof e) throw new TypeError("Expected a function"); var i = function () { var o = arguments, r = e ? e.apply(this, o) : o[0], s = i.cache; if (s.has(r)) return s.get(r); var n = t.apply(this, o); return i.cache = s.set(r, n) || s, n; }; return i.cache = new (yi.Cache || mi), i; } yi.Cache = mi; var xi, $i = function (t, e, i) { for (var o = -1, r = Object(t), s = i(t), n = s.length; n--;) { var a = s[xi ? n : ++o]; if (!1 === e(r[a], a, r)) break; } return t; }; var ki = Math.max, wi = Math.min; function Ci(t, e, i) { return e = ke(e), void 0 === i ? (i = e, e = 0) : i = ke(i), function (t, e, i) { return t >= wi(e, i) && t < ki(e, i); }(t = $e(t), e, i); } function Fi(t, e, i, o) { return function (t, e) { t && $i(t, e, li); }(t, (function (t, r, s) { e(o, i(t), r, s); })), o; } var Di, Ti, Pi = Object.prototype.toString, Si = (Di = function (t, e, i) { null != e && "function" != typeof e.toString && (e = Pi.call(e)), t[e] = i; }, Ti = function (t) { return function () { return t; }; }((function (t) { return t; })), function (t, e) { return Fi(t, Di, Ti(e), {}); }); function Ii(...t) { return t.every(t => t instanceof HTMLElement); } let Ai; var Ei; !function (t) { t[t.alt = 18] = "alt", t[t.arrowDown = 40] = "arrowDown", t[t.arrowLeft = 37] = "arrowLeft", t[t.arrowRight = 39] = "arrowRight", t[t.arrowUp = 38] = "arrowUp", t[t.back = 8] = "back", t[t.backSlash = 220] = "backSlash", t[t.break = 19] = "break", t[t.capsLock = 20] = "capsLock", t[t.closeBracket = 221] = "closeBracket", t[t.colon = 186] = "colon", t[t.colon2 = 59] = "colon2", t[t.comma = 188] = "comma", t[t.ctrl = 17] = "ctrl", t[t.delete = 46] = "delete", t[t.end = 35] = "end", t[t.enter = 13] = "enter", t[t.equals = 187] = "equals", t[t.equals2 = 61] = "equals2", t[t.equals3 = 107] = "equals3", t[t.escape = 27] = "escape", t[t.forwardSlash = 191] = "forwardSlash", t[t.function1 = 112] = "function1", t[t.function10 = 121] = "function10", t[t.function11 = 122] = "function11", t[t.function12 = 123] = "function12", t[t.function2 = 113] = "function2", t[t.function3 = 114] = "function3", t[t.function4 = 115] = "function4", t[t.function5 = 116] = "function5", t[t.function6 = 117] = "function6", t[t.function7 = 118] = "function7", t[t.function8 = 119] = "function8", t[t.function9 = 120] = "function9", t[t.home = 36] = "home", t[t.insert = 45] = "insert", t[t.menu = 93] = "menu", t[t.minus = 189] = "minus", t[t.minus2 = 109] = "minus2", t[t.numLock = 144] = "numLock", t[t.numPad0 = 96] = "numPad0", t[t.numPad1 = 97] = "numPad1", t[t.numPad2 = 98] = "numPad2", t[t.numPad3 = 99] = "numPad3", t[t.numPad4 = 100] = "numPad4", t[t.numPad5 = 101] = "numPad5", t[t.numPad6 = 102] = "numPad6", t[t.numPad7 = 103] = "numPad7", t[t.numPad8 = 104] = "numPad8", t[t.numPad9 = 105] = "numPad9", t[t.numPadDivide = 111] = "numPadDivide", t[t.numPadDot = 110] = "numPadDot", t[t.numPadMinus = 109] = "numPadMinus", t[t.numPadMultiply = 106] = "numPadMultiply", t[t.numPadPlus = 107] = "numPadPlus", t[t.openBracket = 219] = "openBracket", t[t.pageDown = 34] = "pageDown", t[t.pageUp = 33] = "pageUp", t[t.period = 190] = "period", t[t.print = 44] = "print", t[t.quote = 222] = "quote", t[t.scrollLock = 145] = "scrollLock", t[t.shift = 16] = "shift", t[t.space = 32] = "space", t[t.tab = 9] = "tab", t[t.tilde = 192] = "tilde", t[t.windowsLeft = 91] = "windowsLeft", t[t.windowsOpera = 219] = "windowsOpera", t[t.windowsRight = 92] = "windowsRight"; }(Ei || (Ei = {})); var Oi; function Bi(t, e, i) { return i < t ? e : i > e ? t : i; } !function (t) { t.ltr = "ltr", t.rtl = "rtl"; }(Oi || (Oi = {})); class Li { handleStartContentChange() { this.startContainer.classList.toggle("start", this.start.assignedNodes().length > 0); } handleEndContentChange() { this.endContainer.classList.toggle("end", this.end.assignedNodes().length > 0); } } const Hi = st`<span part="end" ${At("endContainer")}><slot name="end" ${At("end")}@slotchange="${t => t.handleEndContentChange()}"></slot></span>`, Ri = st`<span part="start" ${At("startContainer")}><slot name="start" ${At("start")}@slotchange="${t => t.handleStartContentChange()}"></slot></span>`, Mi = st`<template class="${t => t.expanded ? "expanded" : ""}" slot="item"><div class="heading" part="heading" role="heading" aria-level="${t => t.headinglevel}"><button class="button" part="button" ${At("expandbutton")}aria-expanded="${t => t.expanded}" aria-controls="${t => t.id}-panel" id="${t => t.id}" @click="${(t, e) => t.clickHandler(e.event)}"><span class="heading"><slot name="heading" part="heading"></slot></span></button>${Ri} ${Hi}<span class="icon" part="icon"><slot name="expanded-icon" part="expanded-icon"></slot><slot name="collapsed-icon" part="collapsed-icon"></slot><span></div><div class="region" part="region" id="${t => t.id}-panel" role="region" aria-labelledby="${t => t.id}"><slot></slot></div></template>`; function Ni(t, ...e) { e.forEach(e => { Object.getOwnPropertyNames(e.prototype).forEach(i => { Object.defineProperty(t.prototype, i, Object.getOwnPropertyDescriptor(e.prototype, i)); }); }); } class zi extends Tt { constructor() { super(...arguments), this.headinglevel = 2, this.expanded = !1, this.clickHandler = t => { this.expanded = !this.expanded, this.change(); }, this.change = () => { this.$emit("change"); }; } } var ji; te([ft({ attribute: "heading-level", mode: "fromView", converter: gt })], zi.prototype, "headinglevel", void 0), te([ft({ mode: "boolean" })], zi.prototype, "expanded", void 0), te([ft], zi.prototype, "id", void 0), Ni(zi, Li), function (t) { t.single = "single", t.multi = "multi"; }(ji || (ji = {})); class Vi extends Tt { constructor() { super(...arguments), this.expandmode = ji.multi, this.activeItemIndex = 0, this.change = () => { this.$emit("change"); }, this.setItems = () => { this.accordionIds = this.getItemIds(), this.accordionItems.forEach((t, e) => { t instanceof zi && (t.addEventListener("change", this.activeItemChange), this.isSingleExpandMode() && (this.activeItemIndex !== e ? t.expanded = !1 : t.expanded = !0)); const i = this.accordionIds[e]; t.setAttribute("id", "string" != typeof i ? "accordion-" + (e + 1) : i), this.activeid = this.accordionIds[this.activeItemIndex], t.addEventListener("keydown", this.handleItemKeyDown); }); }, this.removeItemListeners = t => { t.forEach((t, e) => { t.removeEventListener("change", this.activeItemChange), t.removeEventListener("keydown", this.handleItemKeyDown); }); }, this.activeItemChange = t => { const e = t.target; this.isSingleExpandMode() && (this.resetItems(), t.target.expanded = !0), this.activeid = t.target.getAttribute("id"), this.activeItemIndex = Array.from(this.accordionItems).indexOf(e), this.change(); }, this.handleItemKeyDown = t => { const e = t.keyCode; switch (this.accordionIds = this.getItemIds(), e) { case 38: t.preventDefault(), this.adjust(-1); break; case 40: t.preventDefault(), this.adjust(1); break; case 36: this.activeItemIndex = 0, this.focusItem(); break; case 35: this.activeItemIndex = this.accordionItems.length - 1, this.focusItem(); } }; } accordionItemsChanged(t, e) { this.$fastController.isConnected && (this.removeItemListeners(t), this.accordionIds = this.getItemIds(), this.setItems()); } resetItems() { this.accordionItems.forEach((t, e) => { t.expanded = !1; }); } getItemIds() { return this.accordionItems.map(t => t.getAttribute("id")); } isSingleExpandMode() { return this.expandmode === ji.single; } adjust(t) { this.activeItemIndex = Bi(0, this.accordionItems.length - 1, this.activeItemIndex + t), this.focusItem(); } focusItem() { const t = this.accordionItems[this.activeItemIndex]; t instanceof zi && t.expandbutton.focus(); } } te([ft({ attribute: "expand-mode" })], Vi.prototype, "expandmode", void 0), te([D], Vi.prototype, "accordionItems", void 0); const _i = st`<a class="control" part="control" download="${t => t.download}" href="${t => t.href}" hreflang="${t => t.hreflang}" ping="${t => t.ping}" referrerpolicy="${t => t.referrerpolicy}" rel="${t => t.rel}" target="${t => t.target}" type="${t => t.type}" aria-atomic="${t => t.ariaAtomic}" aria-busy="${t => t.ariaBusy}" aria-controls="${t => t.ariaControls}" aria-current="${t => t.ariaCurrent}" aria-describedBy="${t => t.ariaDescribedby}" aria-details="${t => t.ariaDetails}" aria-disabled="${t => t.ariaDisabled}" aria-errormessage="${t => t.ariaErrormessage}" aria-expanded="${t => t.ariaExpanded}" aria-flowto="${t => t.ariaFlowto}" aria-haspopup="${t => t.ariaHaspopup}" aria-hidden="${t => t.ariaHidden}" aria-invalid="${t => t.ariaInvalid}" aria-keyshortcuts="${t => t.ariaKeyshortcuts}" aria-label="${t => t.ariaLabel}" aria-labelledby="${t => t.ariaLabelledby}" aria-live="${t => t.ariaLive}" aria-owns="${t => t.ariaOwns}" aria-relevant="${t => t.ariaRelevant}" aria-roledescription="${t => t.ariaRoledescription}">${Ri}<span class="content" part="content"><slot></slot></span>${Hi}</a>`; class Gi { } te([ft({ attribute: "aria-atomic", mode: "fromView" })], Gi.prototype, "ariaAtomic", void 0), te([ft({ attribute: "aria-busy", mode: "fromView" })], Gi.prototype, "ariaBusy", void 0), te([ft({ attribute: "aria-controls", mode: "fromView" })], Gi.prototype, "ariaControls", void 0), te([ft({ attribute: "aria-current", mode: "fromView" })], Gi.prototype, "ariaCurrent", void 0), te([ft({ attribute: "aria-describedby", mode: "fromView" })], Gi.prototype, "ariaDescribedby", void 0), te([ft({ attribute: "aria-details", mode: "fromView" })], Gi.prototype, "ariaDetails", void 0), te([ft({ attribute: "aria-disabled", mode: "fromView" })], Gi.prototype, "ariaDisabled", void 0), te([ft({ attribute: "aria-errormessage", mode: "fromView" })], Gi.prototype, "ariaErrormessage", void 0), te([ft({ attribute: "aria-flowto", mode: "fromView" })], Gi.prototype, "ariaFlowto", void 0), te([ft({ attribute: "aria-haspopup", mode: "fromView" })], Gi.prototype, "ariaHaspopup", void 0), te([ft({ attribute: "aria-hidden", mode: "fromView" })], Gi.prototype, "ariaHidden", void 0), te([ft({ attribute: "aria-invalid", mode: "fromView" })], Gi.prototype, "ariaInvalid", void 0), te([ft({ attribute: "aria-keyshortcuts", mode: "fromView" })], Gi.prototype, "ariaKeyshortcuts", void 0), te([ft({ attribute: "aria-label", mode: "fromView" })], Gi.prototype, "ariaLabel", void 0), te([ft({ attribute: "aria-labelledby", mode: "fromView" })], Gi.prototype, "ariaLabelledby", void 0), te([ft({ attribute: "aria-live", mode: "fromView" })], Gi.prototype, "ariaLive", void 0), te([ft({ attribute: "aria-owns", mode: "fromView" })], Gi.prototype, "ariaOwns", void 0), te([ft({ attribute: "aria-relevant", mode: "fromView" })], Gi.prototype, "ariaRelevant", void 0), te([ft({ attribute: "aria-roledescription", mode: "fromView" })], Gi.prototype, "ariaRoledescription", void 0); class qi extends Tt { } te([ft], qi.prototype, "download", void 0), te([ft], qi.prototype, "href", void 0), te([ft], qi.prototype, "hreflang", void 0), te([ft], qi.prototype, "ping", void 0), te([ft], qi.prototype, "referrerpolicy", void 0), te([ft], qi.prototype, "rel", void 0), te([ft], qi.prototype, "target", void 0), te([ft], qi.prototype, "type", void 0); class Wi extends Gi { } te([ft({ attribute: "aria-expanded", mode: "fromView" })], Wi.prototype, "ariaExpanded", void 0), Ni(qi, Li, Wi); const Ui = st`<template class="${t => t.circular ? "circular" : ""}"><div class="control" part="control" style="${t => t.generateBadgeStyle()}"><slot></slot></div></template>`; class Ki extends Tt { constructor() { super(...arguments), this.generateBadgeStyle = () => { if (!this.fill && !this.color) return; const t = `background-color: var(--badge-fill-${this.fill});`, e = `color: var(--badge-color-${this.color});`; return this.fill && !this.color ? t : this.color && !this.fill ? e : `${e} ${t}`; }; } } te([ft({ attribute: "fill" })], Ki.prototype, "fill", void 0), te([ft({ attribute: "color" })], Ki.prototype, "color", void 0), te([ft({ mode: "boolean" })], Ki.prototype, "circular", void 0); const Xi = st`<button class="control" part="control" ?autofocus="${t => t.autofocus}" ?disabled="${t => t.disabled}" form="${t => t.formId}" formaction="${t => t.formaction}" formenctype="${t => t.formenctype}" formmethod="${t => t.formmethod}" formnovalidate="${t => t.formnovalidate}" formtarget="${t => t.formtarget}" name="${t => t.name}" type="${t => t.type}" value="${t => t.value}" aria-atomic="${t => t.ariaAtomic}" aria-busy="${t => t.ariaBusy}" aria-controls="${t => t.ariaControls}" aria-current="${t => t.ariaCurrent}" aria-describedBy="${t => t.ariaDescribedby}" aria-details="${t => t.ariaDetails}" aria-disabled="${t => t.ariaDisabled}" aria-errormessage="${t => t.ariaErrormessage}" aria-expanded="${t => t.ariaExpanded}" aria-flowto="${t => t.ariaFlowto}" aria-haspopup="${t => t.ariaHaspopup}" aria-hidden="${t => t.ariaHidden}" aria-invalid="${t => t.ariaInvalid}" aria-keyshortcuts="${t => t.ariaKeyshortcuts}" aria-label="${t => t.ariaLabel}" aria-labelledby="${t => t.ariaLabelledby}" aria-live="${t => t.ariaLive}" aria-owns="${t => t.ariaOwns}" aria-pressed="${t => t.ariaPressed}" aria-relevant="${t => t.ariaRelevant}" aria-roledescription="${t => t.ariaRoledescription}">${Ri}<span class="content" part="content"><slot></slot></span>${Hi}</button>`, Qi = "ElementInternals" in window; class Yi extends Tt { constructor() { super(), this.dirtyValue = !1, this.initialValue = "", this.disabled = !1, this.required = !1, this.proxyEventsToBlock = ["change", "click"], this.proxyInitialized = !1, Qi && (this.elementInternals = this.attachInternals()); } static get formAssociated() { return Qi; } get validity() { return Qi ? this.elementInternals.validity : this.proxy.validity; } get form() { return Qi ? this.elementInternals.form : this.proxy.form; } get validationMessage() { return Qi ? this.elementInternals.validationMessage : this.proxy.validationMessage; } get willValidate() { return Qi ? this.elementInternals.willValidate : this.proxy.willValidate; } get labels() { if (Qi) return Object.freeze(Array.from(this.elementInternals.labels)); if (this.proxy instanceof HTMLElement && this.proxy.ownerDocument && this.id) { const t = this.proxy.labels, e = Array.from(this.proxy.getRootNode().querySelectorAll(`[for='${this.id}']`)), i = t ? e.concat(Array.from(t)) : e; return Object.freeze(i); } return St; } valueChanged(t, e) { this.dirtyValue = !0, this.proxy instanceof HTMLElement && (this.proxy.value = this.value), this.setFormValue(this.value), this.validate(); } initialValueChanged(t, e) { !this.dirtyValue && this.$fastController.isConnected && (this.value = this.initialValue, this.dirtyValue = !1); } disabledChanged(t, e) { this.proxy instanceof HTMLElement && (this.proxy.disabled = this.disabled), d.queueUpdate(() => this.classList.toggle("disabled", this.disabled)); } nameChanged() { this.proxy instanceof HTMLElement && (this.proxy.name = this.name); } requiredChanged(t, e) { this.proxy instanceof HTMLElement && (this.proxy.required = this.required), d.queueUpdate(() => this.classList.toggle("required", this.required)), this.validate(); } connectedCallback() { super.connectedCallback(), this.value = this.initialValue, this.dirtyValue = !1, Qi || this.attachProxy(); } disconnectedCallback() { this.proxyEventsToBlock.forEach(t => this.proxy.removeEventListener(t, this.stopPropagation)); } checkValidity() { return Qi ? this.elementInternals.checkValidity() : this.proxy.checkValidity(); } reportValidity() { return Qi ? this.elementInternals.reportValidity() : this.proxy.reportValidity(); } setValidity(t, e, i) { Qi ? this.elementInternals.setValidity(t, e, i) : "string" == typeof e && this.proxy.setCustomValidity(e); } formDisabledCallback(t) { this.disabled = t; } attachProxy() { var t; this.proxyInitialized || (this.proxyInitialized = !0, this.proxy.style.display = "none", this.proxyEventsToBlock.forEach(t => this.proxy.addEventListener(t, this.stopPropagation)), this.proxy.disabled = this.disabled, this.proxy.required = this.required, "string" == typeof this.name && (this.proxy.name = this.name), "string" == typeof this.value && (this.proxy.value = this.value), this.proxy.setAttribute("slot", "form-associated-proxy"), this.proxySlot = document.createElement("slot"), this.proxySlot.setAttribute("name", "form-associated-proxy")), null === (t = this.shadowRoot) || void 0 === t || t.appendChild(this.proxySlot), this.appendChild(this.proxy); } detachProxy() { var t; this.removeChild(this.proxy), null === (t = this.shadowRoot) || void 0 === t || t.removeChild(this.proxySlot); } validate() { this.proxy instanceof HTMLElement && this.setValidity(this.proxy.validity, this.proxy.validationMessage); } setFormValue(t, e) { Qi && this.elementInternals && this.elementInternals.setFormValue(t, e); } keypressHandler(t) { switch (t.keyCode) { case 13: if (this.form instanceof HTMLFormElement) { const t = this.form.querySelector("[type=submit]"); null == t || t.click(); } } } stopPropagation(t) { t.stopPropagation(); } } te([D], Yi.prototype, "value", void 0), te([ft({ mode: "fromView", attribute: "value" })], Yi.prototype, "initialValue", void 0), te([ft({ mode: "boolean" })], Yi.prototype, "disabled", void 0), te([ft], Yi.prototype, "name", void 0), te([ft({ mode: "boolean" })], Yi.prototype, "required", void 0); class Zi extends Yi { constructor() { super(...arguments), this.proxy = document.createElement("input"), this.handleSubmission = () => { if (!this.form) return; const t = this.proxy.isConnected; t || super.attachProxy(), "function" == typeof this.form.requestSubmit ? this.form.requestSubmit(this.proxy) : this.proxy.click(), t || super.detachProxy(); }, this.handleFormReset = () => { var t; null === (t = this.form) || void 0 === t || t.reset(); }; } formactionChanged() { this.proxy instanceof HTMLElement && (this.proxy.formAction = this.formaction); } formenctypeChanged() { this.proxy instanceof HTMLElement && (this.proxy.formEnctype = this.formenctype); } formmethodChanged() { this.proxy instanceof HTMLElement && (this.proxy.formMethod = this.formmethod); } formnovalidateChanged() { this.proxy instanceof HTMLElement && (this.proxy.formNoValidate = this.formnovalidate); } formtargetChanged() { this.proxy instanceof HTMLElement && (this.proxy.formTarget = this.formtarget); } typeChanged(t, e) { this.proxy instanceof HTMLElement && (this.proxy.type = this.type), "submit" === e && this.addEventListener("click", this.handleSubmission), "submit" === t && this.removeEventListener("click", this.handleSubmission), "reset" === e && this.addEventListener("click", this.handleFormReset), "reset" === t && this.removeEventListener("click", this.handleFormReset); } connectedCallback() { super.connectedCallback(), this.proxy.setAttribute("type", this.type); } } te([ft({ mode: "boolean" })], Zi.prototype, "autofocus", void 0), te([ft({ attribute: "form" })], Zi.prototype, "formId", void 0), te([ft], Zi.prototype, "formaction", void 0), te([ft], Zi.prototype, "formenctype", void 0), te([ft], Zi.prototype, "formmethod", void 0), te([ft({ mode: "boolean" })], Zi.prototype, "formnovalidate", void 0), te([ft], Zi.prototype, "formtarget", void 0), te([ft], Zi.prototype, "type", void 0); class Ji extends Gi { } te([ft({ attribute: "aria-expanded", mode: "fromView" })], Ji.prototype, "ariaExpanded", void 0), te([ft({ attribute: "aria-pressed", mode: "fromView" })], Ji.prototype, "ariaPressed", void 0), Ni(Zi, Li, Ji); const to = st`<slot></slot>`; class eo extends Tt { } const io = st`<template role="checkbox" aria-checked="${t => t.checked}" aria-required="${t => t.required}" aria-disabled="${t => t.disabled}" aria-readonly="${t => t.readOnly}" tabindex="${t => t.disabled ? null : 0}" @keypress="${(t, e) => t.keypressHandler(e.event)}" @click="${(t, e) => t.clickHandler(e.event)}" class="${t => t.readOnly ? "readonly" : ""} ${t => t.checked ? "checked" : ""} ${t => t.indeterminate ? "indeterminate" : ""}"><div part="control" class="control"><slot name="checked-indicator"><svg aria-hidden="true" part="checked-indicator" class="checked-indicator" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.143 12.6697L15.235 4.5L16.8 5.90363L8.23812 15.7667L3.80005 11.2556L5.27591 9.7555L8.143 12.6697Z" /></svg></slot><slot name="indeterminate-indicator"><div part="indeterminate-indicator" class="indeterminate-indicator"></div></slot></div><label part="label" class="${t => t.defaultSlottedNodes && t.defaultSlottedNodes.length ? "label" : "label label__hidden"}"><slot ${Qt("defaultSlottedNodes")}></slot></label></template>`; class oo extends Yi { constructor() { super(), this.initialValue = "on", this.defaultChecked = !!this.checkedAttribute, this.checked = this.defaultChecked, this.proxy = document.createElement("input"), this.indeterminate = !1, this.dirtyChecked = !1, this.constructed = !1, this.keypressHandler = t => { switch (super.keypressHandler(t), t.keyCode) { case 32: this.checked = !this.checked; } }, this.clickHandler = t => { this.disabled || this.readOnly || (this.checked = !this.checked); }, this.constructed = !0; } readOnlyChanged() { this.proxy instanceof HTMLElement && (this.proxy.readOnly = this.readOnly); } checkedAttributeChanged() { this.defaultChecked = this.checkedAttribute; } defaultCheckedChanged() { this.dirtyChecked || (this.checked = this.defaultChecked, this.dirtyChecked = !1); } checkedChanged() { this.dirtyChecked || (this.dirtyChecked = !0), this.updateForm(), this.proxy instanceof HTMLElement && (this.proxy.checked = this.checked), this.constructed && this.$emit("change"), this.validate(); } connectedCallback() { super.connectedCallback(), this.proxy.setAttribute("type", "checkbox"), this.updateForm(); } updateForm() { const t = this.checked ? this.value : null; this.setFormValue(t, t); } } te([ft({ attribute: "readonly", mode: "boolean" })], oo.prototype, "readOnly", void 0), te([ft({ attribute: "checked", mode: "boolean" })], oo.prototype, "checkedAttribute", void 0), te([D], oo.prototype, "defaultSlottedNodes", void 0), te([D], oo.prototype, "defaultChecked", void 0), te([D], oo.prototype, "checked", void 0), te([D], oo.prototype, "indeterminate", void 0); class ro { constructor(t, e, i) { this.name = t, this.value = e, this.host = i, this.propertyName = "--" + t, this.var = `var(${this.propertyName})`; } bind(t) { const e = this.host(t); null !== e && ("function" == typeof e.registerCSSCustomProperty ? e.registerCSSCustomProperty(this) : (Array.isArray(e.disconnectedCSSCustomPropertyRegistry) || (e.disconnectedCSSCustomPropertyRegistry = []), e.disconnectedCSSCustomPropertyRegistry.push(this))); } unbind(t) { const e = this.host(t); null !== e && "function" == typeof e.unregisterCSSCustomProperty && e.unregisterCSSCustomProperty(this); } } function so(t, e, i) { return new ro(t, e, i); } function no(t) { const e = t.parentElement; if (e) return e; { const e = t.getRootNode(); if (e.host instanceof HTMLElement) return e.host; } return null; } const ao = "adoptedStyleSheets" in window.ShadowRoot.prototype; function lo(t) { const e = t.provider; return null != e && ho.isDesignSystemProvider(e); } const co = { bind(t) { t.provider = ho.findProvider(t); }, unbind(t) { } }; class ho extends Tt { constructor() { if (super(), this.isDesignSystemProvider = !0, this.designSystem = {}, this.useDefaults = !1, this.provider = null, this.cssCustomPropertyDefinitions = new Map, this.attributeChangeHandler = { handleChange: (t, e) => { const i = this[e]; if (this.isValidDesignSystemValue(i)) { this.designSystem[e] = i; const t = this.designSystemProperties[e]; t && t.cssCustomProperty && this.setCustomProperty({ name: t.cssCustomProperty, value: i }); } else { this.syncDesignSystemWithProvider(); const t = this.designSystemProperties[e].cssCustomProperty; "string" == typeof t && this.deleteCustomProperty(t), this.writeCustomProperties(); } } }, this.localDesignSystemChangeHandler = { handleChange: this.writeCustomProperties.bind(this) }, this.providerDesignSystemChangeHandler = { handleChange: (t, e) => { t[e] === this.designSystem[e] || this.isValidDesignSystemValue(this[e]) || (this.designSystem[e] = t[e]); } }, this.setCustomProperty = t => { this.customPropertyTarget.setProperty("--" + t.name, this.evaluate(t)); }, this.deleteCustomProperty = t => { this.customPropertyTarget.removeProperty("--" + t); }, ao) { const t = new CSSStyleSheet, e = t.insertRule(":host{}"); this.$fastController.addStyles(at.create([t])), this.customPropertyTarget = t.rules[e].style; } else this.customPropertyTarget = this.style; this.$fastController.addBehaviors([co]); } static get tagNames() { return ho._tagNames; } static isDesignSystemProvider(t) { return t.isDesignSystemProvider || -1 !== ho.tagNames.indexOf(t.tagName); } static findProvider(t) { if (lo(t)) return t.provider; let e = no(t); for (; null !== e;) { if (ho.isDesignSystemProvider(e)) return t.provider = e, e; if (lo(e)) return t.provider = e.provider, e.provider; e = no(e); } return null; } static registerTagName(t) { const e = t.toUpperCase(); -1 === ho.tagNames.indexOf(e) && ho._tagNames.push(e); } useDefaultsChanged() { if (this.useDefaults) { const t = this.designSystemProperties; Object.keys(t).forEach(e => { void 0 === this[e] && (this[e] = t[e].default); }); } } providerChanged(t, e) { if (t instanceof HTMLElement) { const e = k.getNotifier(t.designSystem); k.getAccessors(t.designSystem).forEach(t => { e.unsubscribe(this.providerDesignSystemChangeHandler, t.name); }); } if (e instanceof HTMLElement && ho.isDesignSystemProvider(e)) { const t = k.getNotifier(e.designSystem); k.getAccessors(e.designSystem).forEach(e => { t.subscribe(this.providerDesignSystemChangeHandler, e.name); }), this.syncDesignSystemWithProvider(); } } connectedCallback() { super.connectedCallback(); const t = k.getNotifier(this), e = k.getNotifier(this.designSystem); if (Object.keys(this.designSystemProperties).forEach(i => { D(this.designSystem, i), t.subscribe(this.attributeChangeHandler, i), e.subscribe(this.localDesignSystemChangeHandler, i); const o = this[i]; if (this.isValidDesignSystemValue(o)) { this.designSystem[i] = o; const { cssCustomProperty: t } = this.designSystemProperties[i]; "string" == typeof t && this.setCustomProperty({ name: t, value: o }); } }), Array.isArray(this.disconnectedCSSCustomPropertyRegistry)) { for (let t = 0; t < this.disconnectedCSSCustomPropertyRegistry.length; t++)this.registerCSSCustomProperty(this.disconnectedCSSCustomPropertyRegistry[t]); delete this.disconnectedCSSCustomPropertyRegistry; } if (Array.isArray(this.disconnectedRegistry)) { for (let t = 0; t < this.disconnectedRegistry.length; t++)this.disconnectedRegistry[t](this); delete this.disconnectedRegistry; } } registerCSSCustomProperty(t) { const e = this.cssCustomPropertyDefinitions.get(t.name); e ? e.count += 1 : (this.cssCustomPropertyDefinitions.set(t.name, Object.assign(Object.assign({}, t), { count: 1 })), this.setCustomProperty(t)); } unregisterCSSCustomProperty(t) { const e = this.cssCustomPropertyDefinitions.get(t.name); e && (e.count -= 1, 0 === e.count && (this.cssCustomPropertyDefinitions.delete(t.name), this.deleteCustomProperty(t.name))); } writeCustomProperties() { this.cssCustomPropertyDefinitions.forEach(this.setCustomProperty); } evaluate(t) { return "function" == typeof t.value ? t.value(Object.assign({}, this.designSystem)) : t.value; } syncDesignSystemWithProvider() { const t = k.getAccessors(this.designSystem).reduce((t, e) => (t[e.name] = e, t), {}); this.provider && k.getAccessors(this.provider.designSystem).forEach(e => { var i; this.designSystemProperties.hasOwnProperty(e.name) && this.isValidDesignSystemValue(this[e.name]) || !this.isValidDesignSystemValue(null === (i = this.provider) || void 0 === i ? void 0 : i.designSystem[e.name]) || (t[e.name] || k.defineProperty(this.designSystem, e.name), this.designSystem[e.name] = this.provider.designSystem[e.name]); }); } isValidDesignSystemValue(t) { return null != t; } } function uo(t) { return e => { Pt(t)(e), e.registerTagName("string" == typeof t ? t : t.name); }; } ho._tagNames = [], te([ft({ attribute: "use-defaults", mode: "boolean" })], ho.prototype, "useDefaults", void 0), te([D], ho.prototype, "provider", void 0); const po = uo; function vo(t) { return (e, i) => { ((t, e, i) => { const { cssCustomProperty: o, attribute: r } = i; t.designSystemProperties || (t.designSystemProperties = {}), !1 === r ? D(t, e) : (void 0 === i.mode && (i = Object.assign(Object.assign({}, i), { mode: "fromView" })), ft(i)(t, e)), t.designSystemProperties[e] = { cssCustomProperty: !1 !== o && ("string" == typeof o ? o : "string" == typeof r ? r : e), default: i.default }; })(e, i, t); }; } const go = st`<slot></slot>`, bo = st`<div class="positioning-region" part="positioning-region">${Et(t => t.modal, st`<div class="overlay" part="overlay" role="presentation" tabindex="-1" @click="${t => t.dismiss()}"></div>`)}<div role="dialog" class="control" part="control" aria-modal="${t => t.modal}" aria-describedby="${t => t.ariaDescribedby}" aria-labelledby="${t => t.ariaLabelledby}" aria-label="${t => t.ariaLabel}" ${At("dialog")}><slot></slot></div></div>`; var fo = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'], mo = fo.join(","), yo = "undefined" == typeof Element ? function () { } : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector; function xo(t, e) { e = e || {}; var i, o, r, s = [], n = [], a = t.querySelectorAll(mo); for (e.includeContainer && yo.call(t, mo) && (a = Array.prototype.slice.apply(a)).unshift(t), i = 0; i < a.length; i++)$o(o = a[i]) && (0 === (r = Co(o)) ? s.push(o) : n.push({ documentOrder: i, tabIndex: r, node: o })); return n.sort(Fo).map((function (t) { return t.node; })).concat(s); } function $o(t) { return !(!ko(t) || function (t) { return function (t) { return Do(t) && "radio" === t.type; }(t) && !function (t) { if (!t.name) return !0; var e = function (t) { for (var e = 0; e < t.length; e++)if (t[e].checked) return t[e]; }(t.ownerDocument.querySelectorAll('input[type="radio"][name="' + t.name + '"]')); return !e || e === t; }(t); }(t) || Co(t) < 0); } function ko(t) { return !(t.disabled || function (t) { return Do(t) && "hidden" === t.type; }(t) || function (t) { return null === t.offsetParent || "hidden" === getComputedStyle(t).visibility; }(t)); } xo.isTabbable = function (t) { if (!t) throw new Error("No node provided"); return !1 !== yo.call(t, mo) && $o(t); }, xo.isFocusable = function (t) { if (!t) throw new Error("No node provided"); return !1 !== yo.call(t, wo) && ko(t); }; var wo = fo.concat("iframe").join(","); function Co(t) { var e = parseInt(t.getAttribute("tabindex"), 10); return isNaN(e) ? function (t) { return "true" === t.contentEditable; }(t) ? 0 : t.tabIndex : e; } function Fo(t, e) { return t.tabIndex === e.tabIndex ? t.documentOrder - e.documentOrder : t.tabIndex - e.tabIndex; } function Do(t) { return "INPUT" === t.tagName; } var To = xo; class Po extends Tt { constructor() { super(...arguments), this.modal = !0, this.hidden = !1, this.trapFocus = !0, this.trapFocusChanged = () => { this.trapFocus ? (document.addEventListener("focusin", this.handleDocumentFocus), this.shouldForceFocus(document.activeElement) && this.focusFirstElement()) : document.removeEventListener("focusin", this.handleDocumentFocus); }, this.handleDocumentKeydown = t => { if (!t.defaultPrevented && !this.hidden) switch (t.keyCode) { case 27: this.dismiss(); break; case 9: this.handleTabKeyDown(t); } }, this.handleDocumentFocus = t => { !t.defaultPrevented && this.shouldForceFocus(t.target) && (this.focusFirstElement(), t.preventDefault()); }, this.handleTabKeyDown = t => { if (!this.trapFocus) return; const e = this.tabbableElements.length; if (0 === e) return this.dialog.focus(), void t.preventDefault(); t.shiftKey && t.target === this.tabbableElements[0] ? (this.tabbableElements[e - 1].focus(), t.preventDefault()) : t.shiftKey || t.target !== this.tabbableElements[e - 1] || (this.tabbableElements[0].focus(), t.preventDefault()); }, this.focusFirstElement = () => { 0 === this.tabbableElements.length ? this.dialog.focus() : this.tabbableElements[0].focus(); }, this.shouldForceFocus = t => !this.hidden && !this.contains(t); } dismiss() { this.$emit("dismiss"); } connectedCallback() { super.connectedCallback(), this.tabbableElements = To(this), this.observer = new MutationObserver(this.onChildListChange), this.observer.observe(this, { childList: !0 }), document.addEventListener("keydown", this.handleDocumentKeydown), d.queueUpdate(this.trapFocusChanged); } disconnectedCallback() { super.disconnectedCallback(), this.observer.disconnect(), document.removeEventListener("keydown", this.handleDocumentKeydown), this.trapFocus && document.removeEventListener("focusin", this.handleDocumentFocus); } onChildListChange(t, e) { t.length && (this.tabbableElements = To(this)); } } te([ft({ mode: "boolean" })], Po.prototype, "modal", void 0), te([ft({ mode: "boolean" })], Po.prototype, "hidden", void 0), te([ft({ attribute: "trap-focus", mode: "boolean" })], Po.prototype, "trapFocus", void 0), te([ft({ attribute: "aria-describedby" })], Po.prototype, "ariaDescribedby", void 0), te([ft({ attribute: "aria-labelledby" })], Po.prototype, "ariaLabelledby", void 0), te([ft({ attribute: "aria-label" })], Po.prototype, "ariaLabel", void 0); const So = st`<template role="${t => t.role}"></template>`; var Io, Ao; !function (t) { t.separator = "separator", t.presentation = "presentation"; }(Io || (Io = {})); class Eo extends Tt { constructor() { super(...arguments), this.role = Io.separator; } } te([ft], Eo.prototype, "role", void 0), function (t) { t.next = "next", t.previous = "previous"; }(Ao || (Ao = {})); class Oo extends Tt { constructor() { super(...arguments), this.hiddenFromAT = !0, this.direction = Ao.next; } } te([ft({ mode: "boolean" })], Oo.prototype, "disabled", void 0), te([ft({ attribute: "aria-hidden", converter: vt })], Oo.prototype, "hiddenFromAT", void 0), te([ft], Oo.prototype, "direction", void 0); const Bo = st`<template role="button" aria-disabled="${t => !!t.disabled || void 0}" tabindex="${t => t.hiddenFromAT ? -1 : 0}" class="${t => t.direction} ${t => t.disabled ? "disabled" : ""}">${Et(t => t.direction === Ao.next, st`<span part="next" class="next"><slot name="next"><svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M4.023 15.273L11.29 8 4.023.727l.704-.704L12.71 8l-7.984 7.977-.704-.704z" /></svg></slot></span>`)} ${Et(t => t.direction === Ao.previous, st`<span part="previous" class="previous"><slot name="previous"><svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.273 15.977L3.29 8 11.273.023l.704.704L4.71 8l7.266 7.273-.704.704z" /></svg></slot></span>`)}</template>`, Lo = st`<template role="menu" @keydown="${(t, e) => t.handleMenuKeyDown(e.event)}" @focusout="${(t, e) => t.handleFocusOut(e.event)}"><slot ${Qt("items")}></slot></template>`; var Ho; !function (t) { t.menuitem = "menuitem", t.menuitemcheckbox = "menuitemcheckbox", t.menuitemradio = "menuitemradio"; }(Ho || (Ho = {})); class Ro extends Tt { constructor() { super(...arguments), this.role = Ho.menuitem, this.handleMenuItemKeyDown = t => { switch (t.keyCode) { case 13: case 32: return this.invoke(), !1; }return !0; }, this.handleMenuItemClick = t => { this.invoke(); }, this.invoke = () => { if (!this.disabled) { switch (this.role) { case Ho.menuitemcheckbox: case Ho.menuitemradio: this.checked = !this.checked; }this.$emit("change"); } }; } } te([ft({ mode: "boolean" })], Ro.prototype, "disabled", void 0), te([ft({ attribute: "expanded" })], Ro.prototype, "expanded", void 0), te([ft], Ro.prototype, "role", void 0), te([ft], Ro.prototype, "checked", void 0), Ni(Ro, Li); const Mo = st`<template role="${t => t.role}" aria-checked="${t => t.role !== Ho.menuitem ? t.checked : void 0}" aria-disabled="${t => t.disabled}" aria-expanded="${t => t.expanded}" @keydown="${(t, e) => t.handleMenuItemKeyDown(e.event)}" @click="${(t, e) => t.handleMenuItemClick(e.event)}" class="${t => t.disabled ? "disabled" : ""} ${t => t.expanded ? "expanded" : ""}">${Ri}<span class="content" part="content"><slot></slot></span>${Hi}</template>`; class No extends Tt { constructor() { super(...arguments), this.focusIndex = -1, this.handleFocusOut = t => { if (!this.contains(t.relatedTarget)) { const t = this.menuItems.findIndex(this.isFocusableElement); this.menuItems[this.focusIndex].setAttribute("tabindex", ""), this.menuItems[t].setAttribute("tabindex", "0"), this.focusIndex = t; } }, this.setItems = () => { const t = this.menuItems.findIndex(this.isFocusableElement); -1 !== t && (this.focusIndex = t); for (let e = 0; e < this.menuItems.length; e++)e === t && this.menuItems[e].setAttribute("tabindex", "0"), this.menuItems[e].addEventListener("blur", this.handleMenuItemFocus); }, this.resetItems = t => { for (let e = 0; e < t.length; e++)t[e].removeEventListener("blur", this.handleMenuItemFocus); }, this.isMenuItemElement = t => Ii(t) && No.focusableElementRoles.hasOwnProperty(t.getAttribute("role")), this.isDisabledElement = t => this.isMenuItemElement(t) && "true" === t.getAttribute("aria-disabled"), this.isFocusableElement = t => this.isMenuItemElement(t) && !this.isDisabledElement(t), this.handleMenuItemFocus = t => { const e = t.currentTarget, i = this.menuItems.indexOf(e); this.isDisabledElement(e) ? e.blur() : i !== this.focusIndex && -1 !== i && this.setFocus(i, i > this.focusIndex ? 1 : -1); }; } itemsChanged(t, e) { this.$fastController.isConnected && (this.menuItems = this.domChildren(), this.resetItems(t), this.setItems()); } connectedCallback() { super.connectedCallback(), this.menuItems = this.domChildren(); } disconnectedCallback() { super.disconnectedCallback(), this.menuItems = []; } focus() { this.setFocus(0, 1); } handleMenuKeyDown(t) { if (!t.defaultPrevented) switch (t.keyCode) { case 40: case 39: return void this.setFocus(this.focusIndex + 1, 1); case 38: case 37: return void this.setFocus(this.focusIndex - 1, -1); case 35: return void this.setFocus(this.domChildren().length - 1, -1); case 36: return void this.setFocus(0, 1); default: return !0; } } domChildren() { return Array.from(this.children); } setFocus(t, e) { const i = this.menuItems; for (; Ci(t, i.length);) { const o = i[t]; if (this.isFocusableElement(o)) { o.setAttribute("tabindex", "0"), o.focus(), i[this.focusIndex].setAttribute("tabindex", ""), this.focusIndex = t; break; } t += e; } } } No.focusableElementRoles = Si(Ho), te([D], No.prototype, "items", void 0); class zo extends Tt { } te([ft({ converter: gt })], zo.prototype, "value", void 0), te([ft({ converter: gt })], zo.prototype, "min", void 0), te([ft({ converter: gt })], zo.prototype, "max", void 0), te([ft({ mode: "boolean" })], zo.prototype, "paused", void 0); const jo = st`<template role="progressbar" aria-valuenow="${t => t.value}" aria-valuemin="${t => t.min}" aria-valuemax="${t => t.max}" class="${t => t.paused ? "paused" : ""}">${Et(t => t.value, st`<div class="progress" part="progress" slot="determinate"><div class="determinate" part="determinate" style="width:${t => t.value}%"></div></div>`)} ${Et(t => !t.value, st`<div class="progress" part="progress" slot="indeterminate"><slot class="indeterminate" name="indeterminate"><span class="indeterminate-indicator-1" part="indeterminate-indicator-1"></span><span class="indeterminate-indicator-2" part="indeterminate-indicator-2"></span></slot></div>`)}</template>`, Vo = st`<template role="progressbar" aria-valuenow="${t => t.value}" aria-valuemin="${t => t.min}" aria-valuemax="${t => t.max}" class="${t => t.paused ? "paused" : ""}">${Et(t => t.value, st`<svg class="progress" part="progress" viewBox="0 0 16 16" slot="determinate"><circle class="background" part="background" cx="8px" cy="8px" r="7px"></circle><circle class="determinate" part="determinate" style="stroke-dasharray:${t => 44 * t.value / 100}px 44px" cx="8px" cy="8px" r="7px"></circle></svg>`)} ${Et(t => !t.value, st`<slot name="indeterminate" slot="indeterminate"><svg class="progress" part="progress" viewBox="0 0 16 16"><circle class="background" part="background" cx="8px" cy="8px" r="7px"></circle><circle class="indeterminate-indicator-1" part="indeterminate-indicator-1" cx="8px" cy="8px" r="7px"></circle></svg></slot>`)}</template>`, _o = st`<template role="radio" class="${t => t.checked ? "checked" : ""} ${t => t.readOnly ? "readonly" : ""}" aria-checked="${t => t.checked}" aria-required="${t => t.required}" aria-disabled="${t => t.disabled}" aria-readonly="${t => t.readOnly}" @keypress="${(t, e) => t.keypressHandler(e.event)}" @click="${(t, e) => t.clickHandler(e.event)}"><div part="control" class="control"><slot name="checked-indicator"><div part="checked-indicator" class="checked-indicator"></div></slot></div><label part="label" class="${t => t.defaultSlottedNodes && t.defaultSlottedNodes.length ? "label" : "label label__hidden"}"><slot ${Qt("defaultSlottedNodes")}></slot></label></template>`; class Go extends Yi { constructor() { var t; super(...arguments), this.initialValue = "on", this.checked = null !== (t = this.defaultChecked) && void 0 !== t && t, this.proxy = document.createElement("input"), this.dirtyChecked = !1, this.keypressHandler = t => { switch (super.keypressHandler(t), t.keyCode) { case 32: this.checked || this.readOnly || (this.checked = !0); } }, this.clickHandler = t => { this.disabled || this.readOnly || this.checked || (this.checked = !0); }; } readOnlyChanged() { this.proxy instanceof HTMLElement && (this.proxy.readOnly = this.readOnly); } nameChanged() { this.proxy instanceof HTMLElement && (this.proxy.name = this.name); } checkedAttributeChanged() { this.defaultChecked = this.checkedAttribute; } defaultCheckedChanged() { this.$fastController.isConnected && !this.dirtyChecked && (this.isInsideRadioGroup() || (this.checked = this.defaultChecked, this.dirtyChecked = !1)); } checkedChanged() { this.$fastController.isConnected && (this.dirtyChecked || (this.dirtyChecked = !0), this.updateForm(), this.proxy instanceof HTMLElement && (this.proxy.checked = this.checked), this.$emit("change"), this.checkedAttribute = this.checked, this.validate()); } connectedCallback() { var t; super.connectedCallback(), this.proxy.setAttribute("type", "radio"), this.validate(), "radiogroup" !== (null === (t = this.parentElement) || void 0 === t ? void 0 : t.getAttribute("role")) && null === this.getAttribute("tabindex") && (this.disabled || this.setAttribute("tabindex", "0")), this.updateForm(), this.checkedAttribute && (this.dirtyChecked || this.isInsideRadioGroup() || (this.checked = this.defaultChecked, this.dirtyChecked = !1)); } isInsideRadioGroup() { return null !== this.closest("[role=radiogroup]"); } getParentNode() { return this.parentElement.closest("[role='tree']"); } updateForm() { const t = this.checked ? this.value : null; this.setFormValue(t, t); } } te([ft({ attribute: "readonly", mode: "boolean" })], Go.prototype, "readOnly", void 0), te([ft], Go.prototype, "name", void 0), te([ft({ attribute: "checked", mode: "boolean" })], Go.prototype, "checkedAttribute", void 0), te([D], Go.prototype, "defaultSlottedNodes", void 0), te([D], Go.prototype, "defaultChecked", void 0), te([D], Go.prototype, "checked", void 0); const qo = st`<template role="radiogroup" aria-disabled="${t => t.disabled}" aria-readonly="${t => t.readOnly}" @click="${(t, e) => t.clickHandler(e.event)}" @keydown="${(t, e) => t.keydownHandler(e.event)}" @focusout="${(t, e) => t.focusOutHandler(e.event)}"><slot name="label"></slot><div class="positioning-region ${t => t.orientation === ee.horizontal ? "horizontal" : "vertical"}" part="positioning-region"><slot ${Qt({ property: "slottedRadioButtons", filter: Ut("[role=radio]") })}></slot></div></template>`; class Wo { constructor(t) { this.listenerCache = new WeakMap, this.query = t; } bind(t) { const { query: e } = this, i = this.constructListener(t); i.bind(e)(), e.addListener(i), this.listenerCache.set(t, i); } unbind(t) { const e = this.listenerCache.get(t); e && (this.query.removeListener(e), this.listenerCache.delete(t)); } } class Uo extends Wo { constructor(t, e) { super(t), this.styles = e; } static with(t) { return e => new Uo(t, e); } constructListener(t) { let e = !1; const i = this.styles; return function () { const { matches: o } = this; o && !e ? (t.$fastController.addStyles(i), e = o) : !o && e && (t.$fastController.removeStyles(i), e = o); }; } unbind(t) { super.unbind(t), t.$fastController.removeStyles(this.styles); } } function Ko(t) { return Uo.with(t); } const Xo = Uo.with(window.matchMedia("(forced-colors)")), Qo = "not-allowed", Yo = ":host([hidden]){display:none}"; function Zo(t) { return `${Yo}:host{display:${t}}`; } const Jo = function () { if (!0 === (t = Ai) || !1 === t || pe(t) && "[object Boolean]" == ue(t)) return Ai; var t; if ("undefined" == typeof window || !window.document || !window.document.createElement) return Ai = !1, Ai; const e = document.createElement("style"); document.head.appendChild(e); try { e.sheet.insertRule("foo:focus-visible {color:inherit}", 0), Ai = !0; } catch (t) { Ai = !1; } finally { document.head.removeChild(e); } return Ai; }() ? "focus-visible" : "focus"; class tr { constructor(t, e) { this.cache = new WeakMap, this.ltr = t, this.rtl = e; } bind(t) { const e = ho.findProvider(t); null !== e && (e.$fastController && e.$fastController.isConnected ? this.attach(t, e) : (Array.isArray(e.disconnectedRegistry) || (e.disconnectedRegistry = []), e.disconnectedRegistry.push(this.attach.bind(this, t)))); } unbind(t) { const e = this.cache.get(t); e && k.getNotifier(e[0].designSystem).unsubscribe(e[1]); } attach(t, e) { const i = new er(this.ltr, this.rtl, t); k.getNotifier(e.designSystem).subscribe(i, "direction"), i.attach(e.designSystem.direction), this.cache.set(t, [e, i]); } } class er { constructor(t, e, i) { this.ltr = t, this.rtl = e, this.source = i, this.attached = null; } handleChange(t) { this.attach(t.direction); } attach(t) { var e, i, o; this.attached !== this[t] && (null === (e = this.source) || void 0 === e ? void 0 : e.shadowRoot) && (null === (i = this.attached) || void 0 === i || i.removeStylesFrom(this.source.shadowRoot), null === (o = this[t]) || void 0 === o || o.addStylesTo(this.source.shadowRoot), this.attached = this[t]); } } const ir = t => { const e = t.parentElement.closest("[dir]"); return null !== e && "rtl" === e.dir ? Oi.rtl : Oi.ltr; }; class or extends Tt { constructor() { super(...arguments), this.orientation = ee.horizontal, this.isInsideToolbar = !1, this.radioChangeHandler = t => { const e = t.target; e.checked && (this.slottedRadioButtons.forEach(t => { t !== e && (t.checked = !1, t.setAttribute("tabindex", "-1")); }), this.selectedRadio = e, this.value = e.value, e.setAttribute("tabindex", "0"), this.focusedRadio = e), t.stopPropagation(); }, this.moveToRadioByIndex = (t, e) => { const i = t[e]; this.isInsideToolbar || (i.setAttribute("tabindex", "0"), i.readOnly ? this.slottedRadioButtons.forEach(t => { t !== i && t.setAttribute("tabindex", "-1"); }) : (i.checked = !0, this.selectedRadio = i)), this.focusedRadio = i, i.focus(); }, this.moveRightOffGroup = () => { this.nextElementSibling.focus(); }, this.moveLeftOffGroup = () => { this.previousElementSibling.focus(); }, this.focusOutHandler = t => { const e = this.slottedRadioButtons, i = t.target, o = null !== i ? e.indexOf(i) : 0, r = this.focusedRadio ? e.indexOf(this.focusedRadio) : -1; return (0 === r && o === r || r === e.length - 1 && r === o) && (this.selectedRadio ? (this.selectedRadio.setAttribute("tabindex", "0"), this.focusedRadio = this.selectedRadio, e.forEach(t => { t !== this.selectedRadio && t.setAttribute("tabindex", "-1"); })) : (this.focusedRadio = e[0], this.focusedRadio.setAttribute("tabindex", "0"), e.forEach(t => { t !== this.focusedRadio && t.setAttribute("tabindex", "-1"); }))), !0; }, this.clickHandler = t => { const e = t.target; if (e) { const t = this.slottedRadioButtons; e.checked || 0 === t.indexOf(e) ? (e.setAttribute("tabindex", "0"), this.selectedRadio = e) : (e.setAttribute("tabindex", "-1"), this.selectedRadio = null), this.focusedRadio = e; } t.preventDefault(); }, this.shouldMoveOffGroupToTheRight = (t, e, i) => t === e.length && this.isInsideToolbar && 39 === i, this.shouldMoveOffGroupToTheLeft = (t, e) => (this.focusedRadio ? t.indexOf(this.focusedRadio) - 1 : 0) < 0 && this.isInsideToolbar && 37 === e, this.checkFocusedRadio = () => { null === this.focusedRadio || this.focusedRadio.readOnly || this.focusedRadio.checked || (this.focusedRadio.checked = !0, this.focusedRadio.setAttribute("tabindex", "0"), this.focusedRadio.focus(), this.selectedRadio = this.focusedRadio); }, this.moveRight = t => { const e = this.slottedRadioButtons; let i = 0; if (i = this.focusedRadio ? e.indexOf(this.focusedRadio) + 1 : 1, this.shouldMoveOffGroupToTheRight(i, e, t.keyCode)) this.moveRightOffGroup(); else for (i === e.length && (i = 0); i < e.length && e.length > 1;) { if (!e[i].disabled) { this.moveToRadioByIndex(e, i); break; } if (this.focusedRadio && i === e.indexOf(this.focusedRadio)) break; if (i + 1 >= e.length) { if (this.isInsideToolbar) break; i = 0; } else i += 1; } }, this.moveLeft = t => { const e = this.slottedRadioButtons; let i = 0; if (i = this.focusedRadio ? e.indexOf(this.focusedRadio) - 1 : 0, i = i < 0 ? e.length - 1 : i, this.shouldMoveOffGroupToTheLeft(e, t.keyCode)) this.moveLeftOffGroup(); else for (; i >= 0 && e.length > 1;) { if (!e[i].disabled) { this.moveToRadioByIndex(e, i); break; } if (this.focusedRadio && i === e.indexOf(this.focusedRadio)) break; i - 1 < 0 ? i = e.length - 1 : i -= 1; } }, this.keydownHandler = t => { switch (t.keyCode) { case 13: this.checkFocusedRadio(); break; case 39: case 40: this.direction === Oi.ltr ? this.moveRight(t) : this.moveLeft(t); break; case 37: case 38: this.direction === Oi.ltr ? this.moveLeft(t) : this.moveRight(t); }return 9 === t.keyCode || 32 === t.keyCode; }; } readOnlyChanged() { void 0 !== this.slottedRadioButtons && this.slottedRadioButtons.forEach(t => { this.readOnly ? t.readOnly = !0 : t.readOnly = !1; }); } disabledChanged() { void 0 !== this.slottedRadioButtons && this.slottedRadioButtons.forEach(t => { this.disabled ? t.disabled = !0 : t.disabled = !1; }); } nameChanged() { this.slottedRadioButtons && this.slottedRadioButtons.forEach(t => { t.setAttribute("name", this.name); }); } valueChanged() { this.slottedRadioButtons && this.slottedRadioButtons.forEach(t => { t.getAttribute("value") === this.value && (t.checked = !0, this.selectedRadio = t); }), this.$emit("change"); } slottedRadioButtonsChanged(t, e) { this.slottedRadioButtons && this.slottedRadioButtons.length > 0 && this.setupRadioButtons(); } connectedCallback() { var t; super.connectedCallback(), this.direction = ir(this), this.setupRadioButtons(), this.parentToolbar = null === (t = this.parentElement) || void 0 === t ? void 0 : t.closest('[role="toolbar"]'), this.isInsideToolbar = void 0 !== this.parentToolbar && null !== this.parentToolbar; } disconnectedCallback() { this.slottedRadioButtons.forEach(t => { t.removeEventListener("change", this.radioChangeHandler); }); } setupRadioButtons() { const t = this.slottedRadioButtons.filter(t => t.hasAttribute("checked")), e = t ? t.length : 0; if (e > 1) { t[e - 1].checked = !0; } let i = !1; if (this.slottedRadioButtons.forEach(t => { void 0 !== this.name && t.setAttribute("name", this.name), this.disabled && (t.disabled = !0), this.readOnly && (t.readOnly = !0), this.value && this.value === t.getAttribute("value") ? (this.selectedRadio = t, this.focusedRadio = t, t.checked = !0, t.setAttribute("tabindex", "0"), i = !0) : (t.setAttribute("tabindex", "-1"), t.checked = !1), t.addEventListener("change", this.radioChangeHandler); }), void 0 === this.value && this.slottedRadioButtons.length > 0) { const t = this.slottedRadioButtons.filter(t => t.hasAttribute("checked")), e = null !== t ? t.length : 0; if (e > 0 && !i) { const i = t[e - 1]; i.checked = !0, this.focusedRadio = i, i.setAttribute("tabindex", "0"); } else this.slottedRadioButtons[0].setAttribute("tabindex", "0"), this.focusedRadio = this.slottedRadioButtons[0]; } } } te([ft({ attribute: "readonly", mode: "boolean" })], or.prototype, "readOnly", void 0), te([ft({ attribute: "disabled", mode: "boolean" })], or.prototype, "disabled", void 0), te([ft], or.prototype, "name", void 0), te([ft], or.prototype, "value", void 0), te([ft], or.prototype, "orientation", void 0), te([D], or.prototype, "childItems", void 0), te([D], or.prototype, "slottedRadioButtons", void 0); const rr = st`<template class="${t => "circle" === t.shape ? "circle" : "rect"}" pattern="${t => t.pattern}" ?shimmer="${t => t.shimmer}">${Et(t => !0 === t.shimmer, st`<span class="shimmer"></span>`)}<object type="image/svg+xml" data="${t => t.pattern}"><img class="pattern" src="${t => t.pattern}" /></object><slot></slot></template>`; class sr extends Tt { constructor() { super(...arguments), this.shape = "rect"; } } te([ft], sr.prototype, "fill", void 0), te([ft], sr.prototype, "shape", void 0), te([ft], sr.prototype, "pattern", void 0), te([ft({ mode: "boolean" })], sr.prototype, "shimmer", void 0); const nr = st`<template role="slider" class="${t => t.readOnly ? "readonly" : ""} ${t => t.orientation || ee.horizontal}" tabindex="${t => t.disabled ? null : 0}" aria-valuetext="${t => t.valueTextFormatter(t.value)}" aria-valuenow="${t => t.value}" aria-valuemin="${t => t.min}" aria-valuemax="${t => t.max}" aria-disabled="${t => !!t.disabled || void 0}" aria-readonly="${t => !!t.readOnly || void 0}" aria-orientation="${t => t.orientation}" class="${t => t.orientation}"><div part="positioning-region" class="positioning-region"><div ${At("track")}part="track-container" class="track"><slot name="track"></slot></div><slot></slot><div ${At("thumb")}part="thumb-container" class="thumb-container" style=${t => t.position}><slot name="thumb"><div class="thumb-cursor"></div></slot></div></div></template>`; function ar(t, e, i, o) { let r = (s = 0, n = 1, a = (t - e) / (i - e), Math.min(Math.max(a, s), n)); var s, n, a; return o === Oi.rtl && (r = 1 - r), r; } var lr; !function (t) { t.singleValue = "single-value"; }(lr || (lr = {})); class dr extends Yi { constructor() { super(...arguments), this.direction = Oi.ltr, this.isDragging = !1, this.trackWidth = 0, this.trackMinWidth = 0, this.trackHeight = 0, this.trackLeft = 0, this.trackMinHeight = 0, this.valueTextFormatter = () => null, this.min = 0, this.max = 10, this.step = 1, this.orientation = ee.horizontal, this.mode = lr.singleValue, this.proxy = document.createElement("input"), this.increment = () => { const t = this.direction !== Oi.rtl && this.orientation !== ee.vertical ? Number(this.value) + Number(this.step) : Number(this.value) - Number(this.step), e = this.convertToConstrainedValue(t), i = e < Number(this.max) ? "" + e : "" + this.max; this.value = i; }, this.decrement = () => { const t = this.direction !== Oi.rtl && this.orientation !== ee.vertical ? Number(this.value) - Number(this.step) : Number(this.value) + Number(this.step), e = this.convertToConstrainedValue(t), i = e > Number(this.min) ? "" + e : "" + this.min; this.value = i; }, this.keypressHandler = t => { if (super.keypressHandler(t), 9 !== t.keyCode && t.preventDefault(), 36 === t.keyCode) this.value = "" + this.min; else if (35 === t.keyCode) this.value = "" + this.max; else if (!t.shiftKey) switch (t.keyCode) { case 39: case 38: this.increment(); break; case 37: case 40: this.decrement(); } }, this.setThumbPositionForOrientation = t => { const e = ar(Number(this.value), Number(this.min), Number(this.max), t), i = Math.round(100 * (1 - e)); this.orientation === ee.horizontal ? this.position = this.isDragging ? `right: ${i}%; transition: none;` : `right: ${i}%; transition: all 0.2s ease;` : this.position = this.isDragging ? `bottom: ${i}%; transition: none;` : `bottom: ${i}%; transition: all 0.2s ease;`; }, this.setupTrackConstraints = () => { const t = this.track.getBoundingClientRect(); this.trackWidth = this.track.clientWidth, this.trackMinWidth = this.track.clientLeft, this.trackHeight = t.bottom, this.trackMinHeight = t.top, this.trackLeft = this.getBoundingClientRect().left, 0 === this.trackWidth && (this.trackWidth = 1); }, this.setupListeners = () => { this.addEventListener("keydown", this.keypressHandler), this.addEventListener("mousedown", this.handleMouseDown), this.thumb.addEventListener("mousedown", this.handleThumbMouseDown), this.thumb.addEventListener("touchstart", this.handleThumbMouseDown); }, this.setupDefaultValue = () => { "" === this.value && (this.initialValue = "" + this.convertToConstrainedValue((this.max + this.min) / 2)); }, this.handleThumbMouseDown = t => { this.readOnly || this.disabled || t.defaultPrevented || (t.preventDefault(), t.target.focus(), window.addEventListener("mouseup", this.handleWindowMouseUp), window.addEventListener("mousemove", this.handleMouseMove), window.addEventListener("touchmove", this.handleMouseMove), window.addEventListener("touchend", this.handleWindowMouseUp), this.isDragging = !0); }, this.handleMouseMove = t => { if (this.readOnly || this.disabled || t.defaultPrevented) return; const e = this.orientation === ee.horizontal ? t.pageX - this.trackLeft : t.pageY; this.value = "" + this.calculateNewValue(e); }, this.calculateNewValue = t => { const e = ar(t, this.orientation === ee.horizontal ? this.trackMinWidth : this.trackMinHeight, this.orientation === ee.horizontal ? this.trackWidth : this.trackHeight, this.direction), i = (this.max - this.min) * e + this.min; return this.convertToConstrainedValue(i); }, this.handleWindowMouseUp = t => { this.stopDragging(); }, this.stopDragging = () => { this.isDragging = !1, window.removeEventListener("mouseup", this.handleWindowMouseUp), window.removeEventListener("mousemove", this.handleMouseMove), window.removeEventListener("touchmove", this.handleMouseMove), window.removeEventListener("touchend", this.handleWindowMouseUp); }, this.handleMouseDown = t => { if (t.preventDefault(), !this.disabled && !this.readOnly) { this.setupTrackConstraints(), t.target.focus(), window.addEventListener("mouseup", this.handleWindowMouseUp), window.addEventListener("mousemove", this.handleMouseMove); const e = this.orientation === ee.horizontal ? t.pageX - this.trackLeft : t.pageY; this.value = "" + this.calculateNewValue(e); } }, this.convertToConstrainedValue = t => { let e = t - this.min; const i = e % Number(this.step); return e = i >= Number(this.step) / 2 ? e - i + Number(this.step) : e - i, e + this.min; }; } readOnlyChanged() { this.proxy instanceof HTMLElement && (this.proxy.readOnly = this.readOnly); } valueChanged(t, e) { super.valueChanged(t, e), this.$fastController.isConnected && this.setThumbPositionForOrientation(this.direction), this.$emit("change"); } minChanged() { this.proxy instanceof HTMLElement && (this.proxy.min = "" + this.min), this.validate; } maxChanged() { this.proxy instanceof HTMLElement && (this.proxy.max = "" + this.max), this.validate(); } stepChanged() { this.proxy instanceof HTMLElement && (this.proxy.step = "" + this.step), this.validate(); } orientationChanged() { this.$fastController.isConnected && this.setThumbPositionForOrientation(this.direction); } connectedCallback() { super.connectedCallback(), this.proxy.setAttribute("type", "range"), this.direction = ir(this), this.setupTrackConstraints(), this.setupListeners(), this.setupDefaultValue(), this.setThumbPositionForOrientation(this.direction); } disconnectedCallback() { this.removeEventListener("keydown", this.keypressHandler), this.removeEventListener("mousedown", this.handleMouseDown), this.thumb.removeEventListener("mousedown", this.handleThumbMouseDown), this.thumb.removeEventListener("touchstart", this.handleThumbMouseDown); } } te([ft({ attribute: "readonly", mode: "boolean" })], dr.prototype, "readOnly", void 0), te([D], dr.prototype, "direction", void 0), te([D], dr.prototype, "isDragging", void 0), te([D], dr.prototype, "position", void 0), te([D], dr.prototype, "trackWidth", void 0), te([D], dr.prototype, "trackMinWidth", void 0), te([D], dr.prototype, "trackHeight", void 0), te([D], dr.prototype, "trackLeft", void 0), te([D], dr.prototype, "trackMinHeight", void 0), te([D], dr.prototype, "valueTextFormatter", void 0), te([ft({ converter: gt })], dr.prototype, "min", void 0), te([ft({ converter: gt })], dr.prototype, "max", void 0), te([ft({ converter: gt })], dr.prototype, "step", void 0), te([ft], dr.prototype, "orientation", void 0), te([ft], dr.prototype, "mode", void 0); const cr = st`<template aria-disabled="${t => t.disabled}" class="${t => t.sliderOrientation || ee.horizontal} ${t => t.disabled ? "disabled" : ""}"><div ${At("root")}part="root" class="root" style="${t => t.positionStyle}"><div class="container">${Et(t => !t.hideMark, st`<div class="mark"></div>`)}<div class="label"><slot></slot></div></div></div></template>`, hr = { min: 0, max: 0, direction: Oi.ltr, orientation: ee.horizontal, disabled: !1 }; class ur extends Tt { constructor() { super(...arguments), this.hideMark = !1, this.sliderDirection = Oi.ltr, this.getSliderConfiguration = () => { if (this.isSliderConfig(this.parentNode)) { const t = this.parentNode, { min: e, max: i, direction: o, orientation: r, disabled: s } = t; void 0 !== s && (this.disabled = s), this.sliderDirection = o || Oi.ltr, this.sliderOrientation = r || ee.horizontal, this.sliderMaxPosition = i, this.sliderMinPosition = e; } else this.sliderDirection = hr.direction || Oi.ltr, this.sliderOrientation = hr.orientation || ee.horizontal, this.sliderMaxPosition = hr.max, this.sliderMinPosition = hr.min; }, this.positionAsStyle = () => { const t = this.sliderDirection ? this.sliderDirection : Oi.ltr, e = ar(Number(this.position), Number(this.sliderMinPosition), Number(this.sliderMaxPosition)); let i = Math.round(100 * (1 - e)), o = Math.round(100 * e); return o === Number.NaN && i === Number.NaN && (i = 50, o = 50), this.sliderOrientation === ee.horizontal ? t === Oi.rtl ? `right: ${o}%; left: ${i}%;` : `left: ${o}%; right: ${i}%;` : `top: ${o}%; bottom: ${i}%;`; }; } positionChanged() { this.positionStyle = this.positionAsStyle(); } connectedCallback() { super.connectedCallback(), this.getSliderConfiguration(), this.positionStyle = this.positionAsStyle(), this.notifier = k.getNotifier(this.parentNode), this.notifier.subscribe(this, "orientation"), this.notifier.subscribe(this, "direction"), this.notifier.subscribe(this, "max"), this.notifier.subscribe(this, "min"); } disconnectedCallback() { super.disconnectedCallback(), this.notifier.unsubscribe(this, "orientation"), this.notifier.unsubscribe(this, "direction"), this.notifier.unsubscribe(this, "max"), this.notifier.unsubscribe(this, "min"); } handleChange(t, e) { switch (e) { case "direction": this.sliderDirection = t.direction; break; case "orientation": this.sliderOrientation = t.orientation; break; case "max": this.sliderMinPosition = t.max; break; case "min": this.sliderMinPosition = t.min; }this.positionStyle = this.positionAsStyle(); } isSliderConfig(t) { return void 0 !== t.max && void 0 !== t.min; } } te([D], ur.prototype, "positionStyle", void 0), te([ft], ur.prototype, "position", void 0), te([ft({ attribute: "hide-mark", mode: "boolean" })], ur.prototype, "hideMark", void 0), te([ft({ attribute: "disabled", mode: "boolean" })], ur.prototype, "disabled", void 0), te([D], ur.prototype, "sliderOrientation", void 0), te([D], ur.prototype, "sliderMinPosition", void 0), te([D], ur.prototype, "sliderMaxPosition", void 0), te([D], ur.prototype, "sliderDirection", void 0); const pr = st`<template role="switch" aria-checked="${t => t.checked}" aria-disabled="${t => t.disabled}" aria-readonly="${t => t.readOnly}" tabindex="${t => t.disabled ? null : 0}" @keypress="${(t, e) => t.keypressHandler(e.event)}" @click="${(t, e) => t.clickHandler(e.event)}" class="${t => t.checked ? "checked" : ""}"><label part="label" class="${t => t.defaultSlottedNodes && t.defaultSlottedNodes.length ? "label" : "label label__hidden"}"><slot ${Qt("defaultSlottedNodes")}></slot></label><div part="switch" class="switch"><span class="checked-indicator" part="checked-indicator"></span></div><span class="status-message" part="status-message"><span class="checked-message" part="checked-message"><slot name="checked-message"></slot></span><span class="unchecked-message" part="unchecked-message"><slot name="unchecked-message"></slot></span></span></template>`; class vr extends Yi { constructor() { super(...arguments), this.initialValue = "on", this.defaultChecked = !!this.checkedAttribute, this.checked = this.defaultChecked, this.proxy = document.createElement("input"), this.dirtyChecked = !1, this.keypressHandler = t => { switch (super.keypressHandler(t), t.keyCode) { case 32: this.checked = !this.checked; } }, this.clickHandler = t => { this.disabled || this.readOnly || (this.checked = !this.checked); }; } readOnlyChanged() { this.proxy instanceof HTMLElement && (this.proxy.readOnly = this.readOnly), this.readOnly ? this.classList.add("readonly") : this.classList.remove("readonly"); } checkedAttributeChanged() { this.defaultChecked = this.checkedAttribute; } defaultCheckedChanged() { this.dirtyChecked || (this.checked = this.defaultChecked, this.dirtyChecked = !1); } checkedChanged() { this.dirtyChecked || (this.dirtyChecked = !0), this.updateForm(), this.proxy instanceof HTMLElement && (this.proxy.checked = this.checked), this.$emit("change"), this.checked ? this.classList.add("checked") : this.classList.remove("checked"), this.validate(); } connectedCallback() { super.connectedCallback(), this.proxy.setAttribute("type", "checkbox"), this.updateForm(); } updateForm() { const t = this.checked ? this.value : null; this.setFormValue(t, t); } } te([ft({ attribute: "readonly", mode: "boolean" })], vr.prototype, "readOnly", void 0), te([ft({ attribute: "checked", mode: "boolean" })], vr.prototype, "checkedAttribute", void 0), te([D], vr.prototype, "defaultSlottedNodes", void 0), te([D], vr.prototype, "defaultChecked", void 0), te([D], vr.prototype, "checked", void 0); const gr = st`<template slot="tab" role="tab"><slot></slot></template>`; class br extends Tt { } const fr = st`<template slot="tabpanel" role="tabpanel"><slot></slot></template>`; class mr extends Tt { } const yr = st`<template class="${t => t.orientation}">${Ri}<div class="tablist" part="tablist" role="tablist"><slot class="tab" name="tab" part="tab" ${Qt("tabs")}></slot>${Et(t => t.activeindicator, st`<div ${At("activeIndicatorRef")}class="activeIndicator" part="activeIndicator"></div>`)}</div>${Hi}<div class="tabpanel"><slot name="tabpanel" part="tabpanel" ${Qt("tabpanels")}></slot></div></template>`; var xr; !function (t) { t.vertical = "vertical", t.horizontal = "horizontal"; }(xr || (xr = {})); class $r extends Tt { constructor() { super(), this.orientation = xr.horizontal, this.activeindicator = !0, this.prevActiveTabIndex = 0, this.activeTabIndex = 0, this.ticking = !1, this.change = () => { this.$emit("change", this.activetab); }, this.setTabs = () => { this.tabIds = this.getTabIds(), this.tabpanelIds = this.getTabPanelIds(), this.activeTabIndex = this.getActiveIndex(), this.tabs.forEach((t, e) => { if ("tab" === t.slot) { const i = this.tabIds[e], o = this.tabpanelIds[e]; t.setAttribute("id", "string" != typeof i ? "tab-" + (e + 1) : i), t.setAttribute("aria-selected", this.activeTabIndex === e ? "true" : "false"), t.setAttribute("aria-controls", "string" != typeof o ? "panel-" + (e + 1) : o), t.setAttribute("style", this.isHorizontal() ? `grid-column: ${e + 1};` : `grid-row: ${e + 1};`), t.addEventListener("click", this.handleTabClick), t.addEventListener("keydown", this.handleTabKeyDown), t.setAttribute("tabindex", this.activeTabIndex === e ? "0" : "-1"), this.activeTabIndex === e && (this.activetab = t), this.isHorizontal() ? t.classList.remove("vertical") : t.classList.add("vertical"); } }); }, this.setTabPanels = () => { this.tabIds = this.getTabIds(), this.tabpanelIds = this.getTabPanelIds(), this.tabpanels.forEach((t, e) => { const i = this.tabIds[e], o = this.tabpanelIds[e]; t.setAttribute("id", "string" != typeof o ? "panel-" + (e + 1) : o), t.setAttribute("aria-labelledby", "string" != typeof i ? "tab-" + (e + 1) : i), this.activeTabIndex !== e ? t.setAttribute("hidden", "") : t.removeAttribute("hidden"); }); }, this.handleTabClick = t => { const e = t.currentTarget; this.prevActiveTabIndex = this.activeTabIndex, this.activeTabIndex = Array.from(this.tabs).indexOf(e), 1 === e.nodeType && this.setComponent(); }, this.handleTabKeyDown = t => { const e = t.keyCode; if (this.isHorizontal()) switch (e) { case 37: t.preventDefault(), this.adjust(-1); break; case 39: t.preventDefault(), this.adjust(1); } else switch (e) { case 38: t.preventDefault(), this.adjust(-1); break; case 40: t.preventDefault(), this.adjust(1); }switch (e) { case 36: t.preventDefault(), this.adjust(-this.activeTabIndex); break; case 35: t.preventDefault(), this.adjust(this.tabs.length - this.activeTabIndex - 1); } }, this.$fastController.isConnected && (this.tabIds = this.getTabIds(), this.tabpanelIds = this.getTabPanelIds(), this.activeTabIndex = this.getActiveIndex()); } activeidChanged() { this.$fastController.isConnected && this.tabs.length <= this.tabpanels.length && (this.setTabs(), this.setTabPanels(), this.handleActiveIndicatorPosition()); } tabsChanged() { this.$fastController.isConnected && this.tabs.length <= this.tabpanels.length && (this.setTabs(), this.setTabPanels(), this.handleActiveIndicatorPosition()); } tabpanelsChanged() { this.$fastController.isConnected && this.tabpanels.length <= this.tabs.length && (this.setTabs(), this.setTabPanels(), this.handleActiveIndicatorPosition()); } getActiveIndex() { return void 0 !== this.activeid ? -1 === this.tabIds.indexOf(this.activeid) ? 0 : this.tabIds.indexOf(this.activeid) : 0; } getTabIds() { return this.tabs.map(t => t.getAttribute("id")); } getTabPanelIds() { return this.tabpanels.map(t => t.getAttribute("id")); } setComponent() { this.activeid = this.tabIds[this.activeTabIndex], this.change(), this.setTabs(), this.handleActiveIndicatorPosition(), this.setTabPanels(), this.focusTab(), this.change(); } isHorizontal() { return this.orientation === xr.horizontal; } handleActiveIndicatorPosition() { this.activeindicator && (this.ticking ? (this.activeIndicatorRef.style.transform = "translateX(0px)", this.activeIndicatorRef.classList.remove("activeIndicatorTransition"), this.isHorizontal() ? this.activeIndicatorRef.style.gridColumn = "" + (this.activeTabIndex + 1) : this.activeIndicatorRef.style.gridRow = "" + (this.activeTabIndex + 1), this.ticking = !1) : (this.ticking = !0, this.animateActiveIndicator())); } animateActiveIndicator() { const t = this.isHorizontal() ? "gridColumn" : "gridRow", e = this.isHorizontal() ? "translateX" : "translateY", i = this.isHorizontal() ? "offsetLeft" : "offsetTop", o = this.activeIndicatorRef[i]; this.activeIndicatorRef.style[t] = "" + (this.activeTabIndex + 1); const r = this.activeIndicatorRef[i]; this.activeIndicatorRef.style[t] = "" + (this.prevActiveTabIndex + 1); const s = r - o; this.activeIndicatorRef.style.transform = `${e}(${s}px)`, this.activeIndicatorRef.classList.add("activeIndicatorTransition"), this.activeIndicatorRef.addEventListener("transitionend", () => { this.ticking = !1, this.activeIndicatorRef.style[t] = "" + (this.activeTabIndex + 1), this.activeIndicatorRef.style.transform = e + "(0px)", this.activeIndicatorRef.classList.remove("activeIndicatorTransition"); }); } adjust(t) { this.prevActiveTabIndex = this.activeTabIndex, this.activeTabIndex = Bi(0, this.tabs.length - 1, this.activeTabIndex + t), this.setComponent(); } focusTab() { this.tabs[this.activeTabIndex].focus(); } connectedCallback() { super.connectedCallback(); } } te([ft], $r.prototype, "orientation", void 0), te([ft], $r.prototype, "activeid", void 0), te([D], $r.prototype, "tabs", void 0), te([D], $r.prototype, "tabpanels", void 0), te([ft({ mode: "boolean" })], $r.prototype, "activeindicator", void 0), te([D], $r.prototype, "activeIndicatorRef", void 0), Ni($r, Li); const kr = st`<template class=" ${t => t.readOnly ? "readonly" : ""}"><label part="label" for="control" class="${t => t.defaultSlottedNodes && t.defaultSlottedNodes.length ? "label" : "label label__hidden"}"><slot ${Qt("defaultSlottedNodes")}></slot></label><div class="root" part="root">${Ri}<input class="control" part="control" id="control" @keypress="${(t, e) => t.keypressHandler(e.event)}" @input="${t => t.handleTextInput()}" @change="${t => t.handleChange()}" ?autofocus="${t => t.autofocus}" ?disabled="${t => t.disabled}" list="${t => t.list}" maxlength="${t => t.maxlength}" minlength="${t => t.minlength}" pattern="${t => t.pattern}" placeholder="${t => t.placeholder}" ?readonly="${t => t.readOnly}" ?required="${t => t.required}" size="${t => t.size}" ?spellcheck="${t => t.spellcheck}" :value="${t => t.value}" type="${t => t.type}" aria-atomic="${t => t.ariaAtomic}" aria-busy="${t => t.ariaBusy}" aria-controls="${t => t.ariaControls}" aria-current="${t => t.ariaCurrent}" aria-describedBy="${t => t.ariaDescribedby}" aria-details="${t => t.ariaDetails}" aria-disabled="${t => t.ariaDisabled}" aria-errormessage="${t => t.ariaErrormessage}" aria-flowto="${t => t.ariaFlowto}" aria-haspopup="${t => t.ariaHaspopup}" aria-hidden="${t => t.ariaHidden}" aria-invalid="${t => t.ariaInvalid}" aria-keyshortcuts="${t => t.ariaKeyshortcuts}" aria-label="${t => t.ariaLabel}" aria-labelledby="${t => t.ariaLabelledby}" aria-live="${t => t.ariaLive}" aria-owns="${t => t.ariaOwns}" aria-relevant="${t => t.ariaRelevant}" aria-roledescription="${t => t.ariaRoledescription}" ${At("control")}/>${Hi}</div></template>`; var wr, Cr; !function (t) { t.email = "email", t.password = "password", t.tel = "tel", t.text = "text", t.url = "url"; }(wr || (wr = {})); class Fr extends Yi { constructor() { super(...arguments), this.type = wr.text, this.proxy = document.createElement("input"), this.keypressHandler = t => (super.keypressHandler(t), !0); } readOnlyChanged() { this.proxy instanceof HTMLElement && (this.proxy.readOnly = this.readOnly, this.validate()); } autofocusChanged() { this.proxy instanceof HTMLElement && (this.proxy.autofocus = this.autofocus, this.validate()); } placeholderChanged() { this.proxy instanceof HTMLElement && (this.proxy.placeholder = this.placeholder); } typeChanged() { this.proxy instanceof HTMLElement && (this.proxy.type = this.type, this.validate()); } listChanged() { this.proxy instanceof HTMLElement && (this.proxy.setAttribute("list", this.list), this.validate()); } maxlengthChanged() { this.proxy instanceof HTMLElement && (this.proxy.maxLength = this.maxlength, this.validate()); } minlengthChanged() { this.proxy instanceof HTMLElement && (this.proxy.minLength = this.minlength, this.validate()); } patternChanged() { this.proxy instanceof HTMLElement && (this.proxy.pattern = this.pattern, this.validate()); } sizeChanged() { this.proxy instanceof HTMLElement && (this.proxy.size = this.size); } spellcheckChanged() { this.proxy instanceof HTMLElement && (this.proxy.spellcheck = this.spellcheck); } connectedCallback() { super.connectedCallback(), this.proxy.setAttribute("type", this.type), this.validate(), this.autofocus && d.queueUpdate(() => { this.focus(); }); } handleTextInput() { this.value = this.control.value; } handleChange() { this.$emit("change"); } } te([ft({ attribute: "readonly", mode: "boolean" })], Fr.prototype, "readOnly", void 0), te([ft({ mode: "boolean" })], Fr.prototype, "autofocus", void 0), te([ft], Fr.prototype, "placeholder", void 0), te([ft], Fr.prototype, "type", void 0), te([ft], Fr.prototype, "list", void 0), te([ft({ converter: gt })], Fr.prototype, "maxlength", void 0), te([ft({ converter: gt })], Fr.prototype, "minlength", void 0), te([ft], Fr.prototype, "pattern", void 0), te([ft({ converter: gt })], Fr.prototype, "size", void 0), te([ft({ mode: "boolean" })], Fr.prototype, "spellcheck", void 0), te([D], Fr.prototype, "defaultSlottedNodes", void 0); class Dr extends Gi { } Ni(Fr, Li, Dr), function (t) { t.none = "none", t.both = "both", t.horizontal = "horizontal", t.vertical = "vertical"; }(Cr || (Cr = {})); class Tr extends Yi { constructor() { super(...arguments), this.resize = Cr.none, this.cols = 20, this.proxy = document.createElement("textarea"), this.handleTextInput = () => { this.value = this.control.value; }; } readOnlyChanged() { this.proxy instanceof HTMLElement && (this.proxy.readOnly = this.readOnly); } autofocusChanged() { this.proxy instanceof HTMLElement && (this.proxy.autofocus = this.autofocus); } listChanged() { this.proxy instanceof HTMLElement && this.proxy.setAttribute("list", this.list); } maxlengthChanged() { this.proxy instanceof HTMLElement && (this.proxy.maxLength = this.maxlength); } minlengthChanged() { this.proxy instanceof HTMLElement && (this.proxy.minLength = this.minlength); } spellcheckChanged() { this.proxy instanceof HTMLElement && (this.proxy.spellcheck = this.spellcheck); } handleChange() { this.$emit("change"); } } te([ft({ mode: "boolean" })], Tr.prototype, "readOnly", void 0), te([ft], Tr.prototype, "resize", void 0), te([ft({ mode: "boolean" })], Tr.prototype, "autofocus", void 0), te([ft({ attribute: "form" })], Tr.prototype, "formId", void 0), te([ft], Tr.prototype, "list", void 0), te([ft({ converter: gt })], Tr.prototype, "maxlength", void 0), te([ft({ converter: gt })], Tr.prototype, "minlength", void 0), te([ft], Tr.prototype, "name", void 0), te([ft], Tr.prototype, "placeholder", void 0), te([ft({ converter: gt, mode: "fromView" })], Tr.prototype, "cols", void 0), te([ft({ converter: gt, mode: "fromView" })], Tr.prototype, "rows", void 0), te([ft({ mode: "boolean" })], Tr.prototype, "spellcheck", void 0), te([D], Tr.prototype, "defaultSlottedNodes", void 0), Ni(Tr, Dr); const Pr = st`<template class=" ${t => t.readOnly ? "readonly" : ""} ${t => t.resize !== Cr.none ? "resize-" + t.resize : ""}"><label part="label" for="control" class="${t => t.defaultSlottedNodes && t.defaultSlottedNodes.length ? "label" : "label label__hidden"}"><slot ${Qt("defaultSlottedNodes")}></slot></label><textarea part="control" class="control" id="control" ?autofocus="${t => t.autofocus}" cols="${t => t.cols}" ?disabled="${t => t.disabled}" form="${t => t.form}" list="${t => t.list}" maxlength="${t => t.maxlength}" minlength="${t => t.minlength}" name="${t => t.name}" placeholder="${t => t.placeholder}" ?readonly="${t => t.readOnly}" ?required="${t => t.required}" rows="${t => t.rows}" ?spellcheck="${t => t.spellcheck}" :value="${t => t.value}" aria-atomic="${t => t.ariaAtomic}" aria-busy="${t => t.ariaBusy}" aria-controls="${t => t.ariaControls}" aria-current="${t => t.ariaCurrent}" aria-describedBy="${t => t.ariaDescribedby}" aria-details="${t => t.ariaDetails}" aria-disabled="${t => t.ariaDisabled}" aria-errormessage="${t => t.ariaErrormessage}" aria-flowto="${t => t.ariaFlowto}" aria-haspopup="${t => t.ariaHaspopup}" aria-hidden="${t => t.ariaHidden}" aria-invalid="${t => t.ariaInvalid}" aria-keyshortcuts="${t => t.ariaKeyshortcuts}" aria-label="${t => t.ariaLabel}" aria-labelledby="${t => t.ariaLabelledby}" aria-live="${t => t.ariaLive}" aria-owns="${t => t.ariaOwns}" aria-relevant="${t => t.ariaRelevant}" aria-roledescription="${t => t.ariaRoledescription}" @input="${(t, e) => t.handleTextInput()}" @change="${t => t.handleChange()}" ${At("control")}></textarea></template>`, Sr = st`<template role="treeitem" slot="${t => t.isNestedItem() ? "item" : void 0}" tabindex="${t => t.disabled || !t.focusable ? void 0 : 0}" class="${t => t.expanded ? "expanded" : ""} ${t => t.selected ? "selected" : ""} ${t => t.nested ? "nested" : ""} ${t => t.disabled ? "disabled" : ""}" aria-expanded="${t => t.expanded ? t.expanded : void 0}" aria-selected="${t => t.selected}" aria-disabled="${t => t.disabled}" @keydown="${(t, e) => t.handleKeyDown(e.event)}" @click="${(t, e) => t.handleClick(e.event)}" ${Zt({ property: "childItems", filter: Ut() })}><div class="positioning-region" part="positioning-region"><div class="content-region" part="content-region">${Et(t => t.childItems && t.childItemLength() > 0, st`<div aria-hidden="true" class="expand-collapse-button" part="expand-collapse-button" @click="${(t, e) => t.handleExpandCollapseButtonClick(e.event)}" ${At("expandCollapseButton")}><slot name="expand-collapse-glyph"><svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" class="expand-collapse-glyph"><path d="M4.29 12L12 4.29V12H4.29z" /></svg></slot></div>`)} ${Ri}<slot></slot>${Hi}</div></div>${Et(t => t.childItems && t.childItemLength() > 0 && (t.expanded || t.renderCollapsedChildren), st`<div role="group" class="items" part="items"><slot name="item" ${Qt("items")}></slot></div>`)}</template>`; function Ir(t) { return Ii(t) && "treeitem" === t.getAttribute("role"); } class Ar extends Tt { constructor() { super(...arguments), this.expanded = !1, this.focusable = !1, this.enabledChildTreeItems = [], this.handleFocus = t => { }, this.handleBlur = t => { }, this.handleKeyDown = t => { if (t.target !== t.currentTarget) return !0; switch (t.keyCode) { case 37: this.collapseOrFocusParent(); break; case 39: this.expandOrFocusFirstChild(); break; case 40: t.preventDefault(), this.focusNextNode(1); break; case 38: t.preventDefault(), this.focusNextNode(-1); break; case 13: this.handleSelected(t); }return !0; }, this.handleExpandCollapseButtonClick = t => { this.disabled || (t.preventDefault(), this.setExpanded(!this.expanded)); }, this.handleClick = t => { t.defaultPrevented || this.disabled || this.handleSelected(t); }, this.isNestedItem = () => Ir(this.parentElement); } itemsChanged(t, e) { this.$fastController.isConnected && (this.items.forEach(t => { Ir(t) && (t.nested = !0); }), this.enabledChildTreeItems = this.items.filter(t => Ir(t) && !t.hasAttribute("disabled"))); } getParentTreeNode() { return this.parentElement.closest("[role='tree']"); } connectedCallback() { super.connectedCallback(); const t = this.getParentTreeNode(); t && (t.hasAttribute("render-collapsed-nodes") && (this.renderCollapsedChildren = "true" === t.getAttribute("render-collapsed-nodes")), this.notifier = k.getNotifier(t), this.notifier.subscribe(this, "renderCollapsedNodes")); } disconnectedCallback() { super.disconnectedCallback(), this.notifier && this.notifier.unsubscribe(this, "renderCollapsedNodes"); } static focusItem(t) { t.setAttribute("tabindex", "0"), t.focusable = !0, t.focus(); } handleChange(t, e) { switch (e) { case "renderCollapsedNodes": this.renderCollapsedChildren = t.renderCollapsedNodes; } } childItemLength() { const t = this.childItems.filter(t => Ir(t)); return t ? t.length : 0; } collapseOrFocusParent() { if (this.expanded) this.setExpanded(!1); else if (Ii(this.parentElement)) { const t = this.parentElement.closest("[role='treeitem']"); Ii(t) && Ar.focusItem(t); } } expandOrFocusFirstChild() { "boolean" == typeof this.expanded && (!this.expanded && this.childItemLength() > 0 ? this.setExpanded(!0) : this.enabledChildTreeItems.length > 0 && Ar.focusItem(this.enabledChildTreeItems[0])); } focusNextNode(t) { const e = this.getVisibleNodes(); if (!e) return; const i = e.indexOf(this); if (-1 !== i) { let o = e[i + t]; if (void 0 !== o) for (; o.hasAttribute("disabled");) { if (o = e[i + t + (t >= 0 ? 1 : -1)], !o) break; } Ii(o) && Ar.focusItem(o); } } getVisibleNodes() { return function (t, e) { if (!Ii(t)) return; return Array.from(t.querySelectorAll(e)).filter(t => null !== t.offsetParent); }(this.getTreeRoot(), "[role='treeitem']"); } getTreeRoot() { return Ii(this) ? this.closest("[role='tree']") : null; } handleSelected(t) { this.selected = !this.selected, this.$emit("selected-change", t); } setExpanded(t) { this.expanded = t, this.$emit("expanded-change", this); } } te([ft({ mode: "boolean" })], Ar.prototype, "expanded", void 0), te([ft({ mode: "boolean" })], Ar.prototype, "selected", void 0), te([ft({ mode: "boolean" })], Ar.prototype, "disabled", void 0), te([D], Ar.prototype, "focusable", void 0), te([D], Ar.prototype, "childItems", void 0), te([D], Ar.prototype, "items", void 0), te([D], Ar.prototype, "nested", void 0), te([D], Ar.prototype, "renderCollapsedChildren", void 0), Ni(Ar, Li); const Er = st`<template role="tree" ${At("treeView")}@keydown="${(t, e) => t.handleKeyDown(e.event)}" @focus="${(t, e) => t.handleFocus(e.event)}" @focusout="${(t, e) => t.handleBlur(e.event)}"><slot ${Qt("slottedTreeItems")}></slot></template>`; class Or extends Tt { constructor() { super(...arguments), this.focusable = !0, this.handleBlur = t => { const { relatedTarget: e, target: i } = t; e instanceof HTMLElement && i instanceof HTMLElement && this.contains(e) && i.removeAttribute("tabindex"); }, this.handleFocus = t => { }, this.handleKeyDown = t => { if (!this.treeItems) return !0; switch (t.keyCode) { case 36: this.treeItems && this.treeItems.length && Ar.focusItem(this.treeItems[0]); break; case 35: this.treeItems && this.treeItems.length && Ar.focusItem(this.treeItems[this.treeItems.length - 1]); break; default: return !0; } }, this.setItems = () => { const t = this.treeItems.findIndex(this.isFocusableElement); for (let e = 0; e < this.treeItems.length; e++)e !== t || this.treeItems[e].hasAttribute("disabled") || this.treeItems[e].setAttribute("tabindex", "0"), this.treeItems[e].addEventListener("selected-change", this.handleItemSelected); }, this.resetItems = () => { for (let t = 0; t < this.treeItems.length; t++)this.treeItems[t].removeEventListener("selected-change", this.handleItemSelected); }, this.handleItemSelected = t => { const e = t.target; e !== this.currentSelected && (this.currentSelected && (this.currentSelected.removeAttribute("selected"), this.currentSelected.selected = !1), this.currentSelected = e); }, this.isFocusableElement = t => Ir(t) && !this.isDisabledElement(t), this.isDisabledElement = t => Ir(t) && "true" === t.getAttribute("aria-disabled"); } slottedTreeItemsChanged(t, e) { this.$fastController.isConnected && (this.resetItems(), this.treeItems = this.getVisibleNodes(), this.setItems(), this.checkForNestedItems() && this.slottedTreeItems.forEach(t => { Ir(t) && (t.nested = !0); })); } checkForNestedItems() { return this.slottedTreeItems.some(t => Ir(t) && t.querySelector("[role='treeitem']")); } connectedCallback() { super.connectedCallback(), this.treeItems = this.getVisibleNodes(), d.queueUpdate(() => { const t = this.treeView.querySelector("[aria-selected='true']"); t && (this.currentSelected = t); }); } getVisibleNodes() { const t = []; return void 0 !== this.slottedTreeItems && this.slottedTreeItems.forEach(e => { Ir(e) && t.push(e); }), t; } } te([ft({ attribute: "render-collapsed-nodes" })], Or.prototype, "renderCollapsedNodes", void 0), te([D], Or.prototype, "focusable", void 0), te([D], Or.prototype, "currentSelected", void 0), te([D], Or.prototype, "lastFocused", void 0), te([D], Or.prototype, "nested", void 0), te([D], Or.prototype, "slottedTreeItems", void 0); const Br = st` ${Et(t => t.tooltipVisible, st`<fast-anchored-region fixed-placement="true" vertical-positioning-mode="${t => t.verticalPositioningMode}" vertical-default-position="${t => t.verticalDefaultPosition}" vertical-inset="${t => t.verticalInset}" vertical-scaling="${t => t.verticalScaling}" horizontal-positioning-mode="${t => t.horizontalPositioningMode}" horizontal-default-position="${t => t.horizontalDefaultPosition}" horizontal-scaling="${t => t.horizontalScaling}" horizontal-inset="${t => t.horizontalInset}" dir="${t => t.currentDirection}" ${At("region")}><div class="tooltip" part="tooltip" role="tooltip"><slot></slot></div></fast-anchored-region>`)} `; var Lr, Hr, Rr; !function (t) { t.top = "top", t.right = "right", t.bottom = "bottom", t.left = "left", t.start = "start", t.end = "end"; }(Lr || (Lr = {})); class Mr extends Tt { constructor() { super(...arguments), this.anchor = "", this.delay = 300, this.anchorElement = null, this.viewportElement = null, this.verticalPositioningMode = "dynamic", this.horizontalPositioningMode = "dynamic", this.horizontalInset = "true", this.verticalInset = "false", this.horizontalScaling = "anchor", this.verticalScaling = "content", this.verticalDefaultPosition = void 0, this.horizontalDefaultPosition = void 0, this.tooltipVisible = !1, this.currentDirection = Oi.ltr, this.delayTimer = null, this.isAnchorHovered = !1, this.handlePositionChange = t => { this.classList.toggle("top", "top" === this.region.verticalPosition), this.classList.toggle("bottom", "bottom" === this.region.verticalPosition), this.classList.toggle("inset-top", "insetTop" === this.region.verticalPosition), this.classList.toggle("inset-bottom", "insetBottom" === this.region.verticalPosition), this.classList.toggle("left", "left" === this.region.horizontalPosition), this.classList.toggle("right", "right" === this.region.horizontalPosition), this.classList.toggle("inset-left", "insetLeft" === this.region.horizontalPosition), this.classList.toggle("inset-right", "insetRight" === this.region.horizontalPosition); }, this.handleAnchorMouseOver = t => { this.startHoverTimer(); }, this.handleAnchorMouseOut = t => { this.isAnchorHovered && (this.isAnchorHovered = !1, this.updateTooltipVisibility()), this.clearDelayTimer(); }, this.startHoverTimer = () => { this.isAnchorHovered || (this.delay > 1 ? null === this.delayTimer && (this.delayTimer = window.setTimeout(() => { this.startHover(); }, this.delay)) : this.startHover()); }, this.startHover = () => { this.isAnchorHovered = !0, this.updateTooltipVisibility(); }, this.clearDelayTimer = () => { null !== this.delayTimer && (clearTimeout(this.delayTimer), this.delayTimer = null); }, this.getAnchor = () => document.getElementById(this.anchor), this.handleDocumentKeydown = t => { if (!t.defaultPrevented && this.tooltipVisible) switch (t.keyCode) { case 27: this.isAnchorHovered = !1, this.updateTooltipVisibility(), this.$emit("dismiss"); } }, this.updateTooltipVisibility = () => { if (!1 === this.visible) this.hideTooltip(); else if (!0 === this.visible) this.showTooltip(); else { if (this.isAnchorHovered) return void this.showTooltip(); this.hideTooltip(); } }, this.showTooltip = () => { this.tooltipVisible || (this.currentDirection = ir(this), this.tooltipVisible = !0, document.addEventListener("keydown", this.handleDocumentKeydown), d.queueUpdate(this.setRegionProps)); }, this.hideTooltip = () => { this.tooltipVisible && (null !== this.region && void 0 !== this.region && (this.region.removeEventListener("change", this.handlePositionChange), this.region.viewportElement = null, this.region.anchorElement = null), document.removeEventListener("keydown", this.handleDocumentKeydown), this.tooltipVisible = !1); }, this.setRegionProps = () => { this.tooltipVisible && (this.viewportElement = document.body, this.region.viewportElement = this.viewportElement, this.region.anchorElement = this.anchorElement, this.region.addEventListener("change", this.handlePositionChange)); }; } visibleChanged() { this.$fastController.isConnected && (this.updateTooltipVisibility(), this.updateLayout()); } anchorChanged() { this.$fastController.isConnected && this.updateLayout(); } positionChanged() { this.$fastController.isConnected && this.updateLayout(); } anchorElementChanged(t) { if (this.$fastController.isConnected) { if (null != t && (t.removeEventListener("mouseover", this.handleAnchorMouseOver), t.removeEventListener("mouseout", this.handleAnchorMouseOut)), null !== this.anchorElement && void 0 !== this.anchorElement) { this.anchorElement.addEventListener("mouseover", this.handleAnchorMouseOver, { passive: !0 }), this.anchorElement.addEventListener("mouseout", this.handleAnchorMouseOut, { passive: !0 }); const t = this.anchorElement.id; null !== this.anchorElement.parentElement && this.anchorElement.parentElement.querySelectorAll(":hover").forEach(e => { e.id === t && this.startHoverTimer(); }); } null !== this.region && void 0 !== this.region && this.tooltipVisible && (this.region.anchorElement = this.anchorElement), this.updateLayout(); } } viewportElementChanged() { null !== this.region && void 0 !== this.region && (this.region.viewportElement = this.viewportElement), this.updateLayout(); } connectedCallback() { super.connectedCallback(), this.anchorElement = this.getAnchor(), this.updateLayout(), this.updateTooltipVisibility(); } disconnectedCallback() { this.hideTooltip(), this.clearDelayTimer(), super.disconnectedCallback(); } updateLayout() { switch (this.position) { case Lr.top: case Lr.bottom: this.verticalPositioningMode = "locktodefault", this.horizontalPositioningMode = "dynamic", this.verticalDefaultPosition = this.position, this.horizontalDefaultPosition = void 0, this.horizontalInset = "true", this.verticalInset = "false", this.horizontalScaling = "anchor", this.verticalScaling = "content"; break; case Lr.right: case Lr.left: case Lr.start: case Lr.end: this.verticalPositioningMode = "dynamic", this.horizontalPositioningMode = "locktodefault", this.verticalDefaultPosition = void 0, this.horizontalDefaultPosition = this.position, this.horizontalInset = "false", this.verticalInset = "true", this.horizontalScaling = "content", this.verticalScaling = "anchor"; break; default: this.verticalPositioningMode = "dynamic", this.horizontalPositioningMode = "dynamic", this.verticalDefaultPosition = void 0, this.horizontalDefaultPosition = void 0, this.horizontalInset = "true", this.verticalInset = "false", this.horizontalScaling = "anchor", this.verticalScaling = "content"; } } } function Nr(t) { return (...e) => i => { const o = e[0]; let r = "function" == typeof o ? o(i) : o; for (let o = 1; o < e.length; o++) { const s = e[o]; r = t(r, "function" == typeof s ? s(i) : s); } return r; }; } Mr.DirectionAttributeName = "dir", te([ft({ mode: "boolean" })], Mr.prototype, "visible", void 0), te([ft], Mr.prototype, "anchor", void 0), te([ft], Mr.prototype, "delay", void 0), te([ft], Mr.prototype, "position", void 0), te([D], Mr.prototype, "anchorElement", void 0), te([D], Mr.prototype, "viewportElement", void 0), te([D], Mr.prototype, "verticalPositioningMode", void 0), te([D], Mr.prototype, "horizontalPositioningMode", void 0), te([D], Mr.prototype, "horizontalInset", void 0), te([D], Mr.prototype, "verticalInset", void 0), te([D], Mr.prototype, "horizontalScaling", void 0), te([D], Mr.prototype, "verticalScaling", void 0), te([D], Mr.prototype, "verticalDefaultPosition", void 0), te([D], Mr.prototype, "horizontalDefaultPosition", void 0), te([D], Mr.prototype, "tooltipVisible", void 0), te([D], Mr.prototype, "currentDirection", void 0), function (t) { t.ltr = "ltr", t.rtl = "rtl"; }(Hr || (Hr = {})), function (t) { t.Canvas = "Canvas", t.CanvasText = "CanvasText", t.LinkText = "LinkText", t.VisitedText = "VisitedText", t.ActiveText = "ActiveText", t.ButtonFace = "ButtonFace", t.ButtonText = "ButtonText", t.Field = "Field", t.FieldText = "FieldText", t.Highlight = "Highlight", t.HighlightText = "HighlightText", t.GrayText = "GrayText"; }(Rr || (Rr = {})); const zr = Nr((t, e) => t + e), jr = Nr((t, e) => t - e), Vr = Nr((t, e) => t * e); function _r(...t) { return zr.apply(this, t); } function Gr(...t) { return jr.apply(this, t); } function qr(...t) { return Vr.apply(this, t); } function Wr(t, e, i) { return isNaN(t) || t <= e ? e : t >= i ? i : t; } function Ur(t, e, i) { return isNaN(t) || t <= e ? 0 : t >= i ? 1 : t / (i - e); } function Kr(t, e, i) { return isNaN(t) ? e : e + t * (i - e); } function Xr(t) { return t * (Math.PI / 180); } function Qr(t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : e + t * (i - e); } function Yr(t, e, i) { if (t <= 0) return e % 360; if (t >= 1) return i % 360; const o = (e - i + 360) % 360; return o <= (i - e + 360) % 360 ? (e - o * t + 360) % 360 : (e + o * t + 360) % 360; } function Zr(t, e) { const i = Math.pow(10, e); return Math.round(t * i) / i; } class Jr { constructor(t, e, i) { this.h = t, this.s = e, this.l = i; } static fromObject(t) { return !t || isNaN(t.h) || isNaN(t.s) || isNaN(t.l) ? null : new Jr(t.h, t.s, t.l); } equalValue(t) { return this.h === t.h && this.s === t.s && this.l === t.l; } roundToPrecision(t) { return new Jr(Zr(this.h, t), Zr(this.s, t), Zr(this.l, t)); } toObject() { return { h: this.h, s: this.s, l: this.l }; } } class ts { constructor(t, e, i) { this.h = t, this.s = e, this.v = i; } static fromObject(t) { return !t || isNaN(t.h) || isNaN(t.s) || isNaN(t.v) ? null : new ts(t.h, t.s, t.v); } equalValue(t) { return this.h === t.h && this.s === t.s && this.v === t.v; } roundToPrecision(t) { return new ts(Zr(this.h, t), Zr(this.s, t), Zr(this.v, t)); } toObject() { return { h: this.h, s: this.s, v: this.v }; } } class es { constructor(t, e, i) { this.l = t, this.a = e, this.b = i; } static fromObject(t) { return !t || isNaN(t.l) || isNaN(t.a) || isNaN(t.b) ? null : new es(t.l, t.a, t.b); } equalValue(t) { return this.l === t.l && this.a === t.a && this.b === t.b; } roundToPrecision(t) { return new es(Zr(this.l, t), Zr(this.a, t), Zr(this.b, t)); } toObject() { return { l: this.l, a: this.a, b: this.b }; } } es.epsilon = 216 / 24389, es.kappa = 24389 / 27; class is { constructor(t, e, i) { this.l = t, this.c = e, this.h = i; } static fromObject(t) { return !t || isNaN(t.l) || isNaN(t.c) || isNaN(t.h) ? null : new is(t.l, t.c, t.h); } equalValue(t) { return this.l === t.l && this.c === t.c && this.h === t.h; } roundToPrecision(t) { return new is(Zr(this.l, t), Zr(this.c, t), Zr(this.h, t)); } toObject() { return { l: this.l, c: this.c, h: this.h }; } } class os { constructor(t, e, i, o) { this.r = t, this.g = e, this.b = i, this.a = "number" != typeof o || isNaN(o) ? 1 : o; } static fromObject(t) { return !t || isNaN(t.r) || isNaN(t.g) || isNaN(t.b) ? null : new os(t.r, t.g, t.b, t.a); } equalValue(t) { return this.r === t.r && this.g === t.g && this.b === t.b && this.a === t.a; } toStringHexRGB() { return "#" + [this.r, this.g, this.b].map(this.formatHexValue).join(""); } toStringHexRGBA() { return this.toStringHexRGB() + this.formatHexValue(this.a); } toStringHexARGB() { return "#" + [this.a, this.r, this.g, this.b].map(this.formatHexValue).join(""); } toStringWebRGB() { return `rgb(${Math.round(Kr(this.r, 0, 255))},${Math.round(Kr(this.g, 0, 255))},${Math.round(Kr(this.b, 0, 255))})`; } toStringWebRGBA() { return `rgba(${Math.round(Kr(this.r, 0, 255))},${Math.round(Kr(this.g, 0, 255))},${Math.round(Kr(this.b, 0, 255))},${Wr(this.a, 0, 1)})`; } roundToPrecision(t) { return new os(Zr(this.r, t), Zr(this.g, t), Zr(this.b, t), Zr(this.a, t)); } clamp() { return new os(Wr(this.r, 0, 1), Wr(this.g, 0, 1), Wr(this.b, 0, 1), Wr(this.a, 0, 1)); } toObject() { return { r: this.r, g: this.g, b: this.b, a: this.a }; } formatHexValue(t) { return function (t) { const e = Math.round(Wr(t, 0, 255)).toString(16); return 1 === e.length ? "0" + e : e; }(Kr(t, 0, 255)); } } class rs { constructor(t, e, i) { this.x = t, this.y = e, this.z = i; } static fromObject(t) { return !t || isNaN(t.x) || isNaN(t.y) || isNaN(t.z) ? null : new rs(t.x, t.y, t.z); } equalValue(t) { return this.x === t.x && this.y === t.y && this.z === t.z; } roundToPrecision(t) { return new rs(Zr(this.x, t), Zr(this.y, t), Zr(this.z, t)); } toObject() { return { x: this.x, y: this.y, z: this.z }; } } function ss(t) { return .2126 * t.r + .7152 * t.g + .0722 * t.b; } function ns(t) { function e(t) { return t <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4); } return ss(new os(e(t.r), e(t.g), e(t.b), 1)); } rs.whitePoint = new rs(.95047, 1, 1.08883); const as = (t, e) => (t + .05) / (e + .05); function ls(t, e) { const i = ns(t), o = ns(e); return i > o ? as(i, o) : as(o, i); } function ds(t) { const e = Math.max(t.r, t.g, t.b), i = Math.min(t.r, t.g, t.b), o = e - i; let r = 0; 0 !== o && (r = e === t.r ? (t.g - t.b) / o % 6 * 60 : e === t.g ? 60 * ((t.b - t.r) / o + 2) : 60 * ((t.r - t.g) / o + 4)), r < 0 && (r += 360); const s = (e + i) / 2; let n = 0; return 0 !== o && (n = o / (1 - Math.abs(2 * s - 1))), new Jr(r, n, s); } function cs(t, e = 1) { const i = (1 - Math.abs(2 * t.l - 1)) * t.s, o = i * (1 - Math.abs(t.h / 60 % 2 - 1)), r = t.l - i / 2; let s = 0, n = 0, a = 0; return t.h < 60 ? (s = i, n = o, a = 0) : t.h < 120 ? (s = o, n = i, a = 0) : t.h < 180 ? (s = 0, n = i, a = o) : t.h < 240 ? (s = 0, n = o, a = i) : t.h < 300 ? (s = o, n = 0, a = i) : t.h < 360 && (s = i, n = 0, a = o), new os(s + r, n + r, a + r, e); } function hs(t) { const e = Math.max(t.r, t.g, t.b), i = e - Math.min(t.r, t.g, t.b); let o = 0; 0 !== i && (o = e === t.r ? (t.g - t.b) / i % 6 * 60 : e === t.g ? 60 * ((t.b - t.r) / i + 2) : 60 * ((t.r - t.g) / i + 4)), o < 0 && (o += 360); let r = 0; return 0 !== e && (r = i / e), new ts(o, r, e); } function us(t) { let e = 0; 0 === t.b && 0 === t.a || (e = Math.atan2(t.b, t.a) * (180 / Math.PI)), e < 0 && (e += 360); const i = Math.sqrt(t.a * t.a + t.b * t.b); return new is(t.l, i, e); } function ps(t) { function e(t) { return t <= .04045 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4); } const i = e(t.r), o = e(t.g), r = e(t.b); return new rs(.4124564 * i + .3575761 * o + .1804375 * r, .2126729 * i + .7151522 * o + .072175 * r, .0193339 * i + .119192 * o + .9503041 * r); } function vs(t, e = 1) { function i(t) { return t <= .0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - .055; } const o = i(3.2404542 * t.x - 1.5371385 * t.y - .4985314 * t.z), r = i(-.969266 * t.x + 1.8760108 * t.y + .041556 * t.z), s = i(.0556434 * t.x - .2040259 * t.y + 1.0572252 * t.z); return new os(o, r, s, e); } function gs(t) { return function (t) { function e(t) { return t > es.epsilon ? Math.pow(t, 1 / 3) : (es.kappa * t + 16) / 116; } const i = e(t.x / rs.whitePoint.x), o = e(t.y / rs.whitePoint.y), r = e(t.z / rs.whitePoint.z); return new es(116 * o - 16, 500 * (i - o), 200 * (o - r)); }(ps(t)); } function bs(t, e = 1) { return vs(function (t) { const e = (t.l + 16) / 116, i = e + t.a / 500, o = e - t.b / 200, r = Math.pow(i, 3), s = Math.pow(e, 3), n = Math.pow(o, 3); let a = 0; a = r > es.epsilon ? r : (116 * i - 16) / es.kappa; let l = 0; l = t.l > es.epsilon * es.kappa ? s : t.l / es.kappa; let d = 0; return d = n > es.epsilon ? n : (116 * o - 16) / es.kappa, a = rs.whitePoint.x * a, l = rs.whitePoint.y * l, d = rs.whitePoint.z * d, new rs(a, l, d); }(t), e); } function fs(t) { return us(gs(t)); } function ms(t, e = 1) { return bs(function (t) { let e = 0, i = 0; return 0 !== t.h && (e = Math.cos(Xr(t.h)) * t.c, i = Math.sin(Xr(t.h)) * t.c), new es(t.l, e, i); }(t), e); } function ys(t, e, i = 18) { const o = fs(t); let r = o.c + e * i; return r < 0 && (r = 0), ms(new is(o.l, r, o.h)); } function xs(t, e) { return t * e; } function $s(t, e) { return new os(xs(t.r, e.r), xs(t.g, e.g), xs(t.b, e.b), 1); } function ks(t, e) { return Wr(t < .5 ? 2 * e * t : 1 - 2 * (1 - e) * (1 - t), 0, 1); } function ws(t, e) { return new os(ks(t.r, e.r), ks(t.g, e.g), ks(t.b, e.b), 1); } var Cs, Fs; function Ds(t, e, i, o) { if (isNaN(t) || t <= 0) return i; if (t >= 1) return o; switch (e) { case Fs.HSL: return cs(function (t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : new Jr(Yr(t, e.h, i.h), Qr(t, e.s, i.s), Qr(t, e.l, i.l)); }(t, ds(i), ds(o))); case Fs.HSV: return function (t, e = 1) { const i = t.s * t.v, o = i * (1 - Math.abs(t.h / 60 % 2 - 1)), r = t.v - i; let s = 0, n = 0, a = 0; return t.h < 60 ? (s = i, n = o, a = 0) : t.h < 120 ? (s = o, n = i, a = 0) : t.h < 180 ? (s = 0, n = i, a = o) : t.h < 240 ? (s = 0, n = o, a = i) : t.h < 300 ? (s = o, n = 0, a = i) : t.h < 360 && (s = i, n = 0, a = o), new os(s + r, n + r, a + r, e); }(function (t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : new ts(Yr(t, e.h, i.h), Qr(t, e.s, i.s), Qr(t, e.v, i.v)); }(t, hs(i), hs(o))); case Fs.XYZ: return vs(function (t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : new rs(Qr(t, e.x, i.x), Qr(t, e.y, i.y), Qr(t, e.z, i.z)); }(t, ps(i), ps(o))); case Fs.LAB: return bs(function (t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : new es(Qr(t, e.l, i.l), Qr(t, e.a, i.a), Qr(t, e.b, i.b)); }(t, gs(i), gs(o))); case Fs.LCH: return ms(function (t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : new is(Qr(t, e.l, i.l), Qr(t, e.c, i.c), Yr(t, e.h, i.h)); }(t, fs(i), fs(o))); default: return function (t, e, i) { return isNaN(t) || t <= 0 ? e : t >= 1 ? i : new os(Qr(t, e.r, i.r), Qr(t, e.g, i.g), Qr(t, e.b, i.b), Qr(t, e.a, i.a)); }(t, i, o); } } !function (t) { t[t.Burn = 0] = "Burn", t[t.Color = 1] = "Color", t[t.Darken = 2] = "Darken", t[t.Dodge = 3] = "Dodge", t[t.Lighten = 4] = "Lighten", t[t.Multiply = 5] = "Multiply", t[t.Overlay = 6] = "Overlay", t[t.Screen = 7] = "Screen"; }(Cs || (Cs = {})), function (t) { t[t.RGB = 0] = "RGB", t[t.HSL = 1] = "HSL", t[t.HSV = 2] = "HSV", t[t.XYZ = 3] = "XYZ", t[t.LAB = 4] = "LAB", t[t.LCH = 5] = "LCH"; }(Fs || (Fs = {})); class Ts { constructor(t) { if (null == t || 0 === t.length) throw new Error("The stops argument must be non-empty"); this.stops = this.sortColorScaleStops(t); } static createBalancedColorScale(t) { if (null == t || 0 === t.length) throw new Error("The colors argument must be non-empty"); const e = new Array(t.length); for (let i = 0; i < t.length; i++)0 === i ? e[i] = { color: t[i], position: 0 } : i === t.length - 1 ? e[i] = { color: t[i], position: 1 } : e[i] = { color: t[i], position: i * (1 / (t.length - 1)) }; return new Ts(e); } getColor(t, e = Fs.RGB) { if (1 === this.stops.length) return this.stops[0].color; if (t <= 0) return this.stops[0].color; if (t >= 1) return this.stops[this.stops.length - 1].color; let i = 0; for (let e = 0; e < this.stops.length; e++)this.stops[e].position <= t && (i = e); let o = i + 1; o >= this.stops.length && (o = this.stops.length - 1); return Ds((t - this.stops[i].position) * (1 / (this.stops[o].position - this.stops[i].position)), e, this.stops[i].color, this.stops[o].color); } trim(t, e, i = Fs.RGB) { if (t < 0 || e > 1 || e < t) throw new Error("Invalid bounds"); if (t === e) return new Ts([{ color: this.getColor(t, i), position: 0 }]); const o = []; for (let i = 0; i < this.stops.length; i++)this.stops[i].position >= t && this.stops[i].position <= e && o.push(this.stops[i]); if (0 === o.length) return new Ts([{ color: this.getColor(t), position: t }, { color: this.getColor(e), position: e }]); o[0].position !== t && o.unshift({ color: this.getColor(t), position: t }), o[o.length - 1].position !== e && o.push({ color: this.getColor(e), position: e }); const r = e - t, s = new Array(o.length); for (let e = 0; e < o.length; e++)s[e] = { color: o[e].color, position: (o[e].position - t) / r }; return new Ts(s); } findNextColor(t, e, i = !1, o = Fs.RGB, r = .005, s = 32) { isNaN(t) || t <= 0 ? t = 0 : t >= 1 && (t = 1); const n = this.getColor(t, o), a = i ? 0 : 1; if (ls(n, this.getColor(a, o)) <= e) return a; let l = i ? 0 : t, d = i ? t : 0, c = a, h = 0; for (; h <= s;) { c = Math.abs(d - l) / 2 + l; const t = ls(n, this.getColor(c, o)); if (Math.abs(t - e) <= r) return c; t > e ? i ? l = c : d = c : i ? d = c : l = c, h++; } return c; } clone() { const t = new Array(this.stops.length); for (let e = 0; e < t.length; e++)t[e] = { color: this.stops[e].color, position: this.stops[e].position }; return new Ts(t); } sortColorScaleStops(t) { return t.sort((t, e) => { const i = t.position, o = e.position; return i < o ? -1 : i > o ? 1 : 0; }); } } const Ps = /^rgb\(\s*((?:(?:25[0-5]|2[0-4]\d|1\d\d|\d{1,2})\s*,\s*){2}(?:25[0-5]|2[0-4]\d|1\d\d|\d{1,2})\s*)\)$/i, Ss = /^#((?:[0-9a-f]{6}|[0-9a-f]{3}))$/i; function Is(t) { const e = Ss.exec(t); if (null === e) return null; let i = e[1]; if (3 === i.length) { const t = i.charAt(0), e = i.charAt(1), o = i.charAt(2); i = t.concat(t, e, e, o, o); } const o = parseInt(i, 16); return isNaN(o) ? null : new os(Ur((16711680 & o) >>> 16, 0, 255), Ur((65280 & o) >>> 8, 0, 255), Ur(255 & o, 0, 255), 1); } function As(t) { const e = Ps.exec(t); if (null === e) return null; const i = e[1].split(","); return new os(Ur(Number(i[0]), 0, 255), Ur(Number(i[1]), 0, 255), Ur(Number(i[2]), 0, 255), 1); } class Es { constructor(t) { this.config = Object.assign({}, Es.defaultPaletteConfig, t), this.palette = [], this.updatePaletteColors(); } updatePaletteGenerationValues(t) { let e = !1; for (const i in t) this.config[i] && (this.config[i].equalValue ? this.config[i].equalValue(t[i]) || (this.config[i] = t[i], e = !0) : t[i] !== this.config[i] && (this.config[i] = t[i], e = !0)); return e && this.updatePaletteColors(), e; } updatePaletteColors() { const t = this.generatePaletteColorScale(); for (let e = 0; e < this.config.steps; e++)this.palette[e] = t.getColor(e / (this.config.steps - 1), this.config.interpolationMode); } generatePaletteColorScale() { const t = ds(this.config.baseColor), e = new Ts([{ position: 0, color: this.config.scaleColorLight }, { position: .5, color: this.config.baseColor }, { position: 1, color: this.config.scaleColorDark }]).trim(this.config.clipLight, 1 - this.config.clipDark); let i = e.getColor(0), o = e.getColor(1); if (t.s >= this.config.saturationAdjustmentCutoff && (i = ys(i, this.config.saturationLight), o = ys(o, this.config.saturationDark)), 0 !== this.config.multiplyLight) { const t = $s(this.config.baseColor, i); i = Ds(this.config.multiplyLight, this.config.interpolationMode, i, t); } if (0 !== this.config.multiplyDark) { const t = $s(this.config.baseColor, o); o = Ds(this.config.multiplyDark, this.config.interpolationMode, o, t); } if (0 !== this.config.overlayLight) { const t = ws(this.config.baseColor, i); i = Ds(this.config.overlayLight, this.config.interpolationMode, i, t); } if (0 !== this.config.overlayDark) { const t = ws(this.config.baseColor, o); o = Ds(this.config.overlayDark, this.config.interpolationMode, o, t); } return this.config.baseScalePosition ? this.config.baseScalePosition <= 0 ? new Ts([{ position: 0, color: this.config.baseColor }, { position: 1, color: o.clamp() }]) : this.config.baseScalePosition >= 1 ? new Ts([{ position: 0, color: i.clamp() }, { position: 1, color: this.config.baseColor }]) : new Ts([{ position: 0, color: i.clamp() }, { position: this.config.baseScalePosition, color: this.config.baseColor }, { position: 1, color: o.clamp() }]) : new Ts([{ position: 0, color: i.clamp() }, { position: .5, color: this.config.baseColor }, { position: 1, color: o.clamp() }]); } } Es.defaultPaletteConfig = { baseColor: Is("#808080"), steps: 11, interpolationMode: Fs.RGB, scaleColorLight: new os(1, 1, 1, 1), scaleColorDark: new os(0, 0, 0, 1), clipLight: .185, clipDark: .16, saturationAdjustmentCutoff: .05, saturationLight: .35, saturationDark: 1.25, overlayLight: 0, overlayDark: .25, multiplyLight: 0, multiplyDark: 0, baseScalePosition: .5 }, Es.greyscalePaletteConfig = { baseColor: Is("#808080"), steps: 11, interpolationMode: Fs.RGB, scaleColorLight: new os(1, 1, 1, 1), scaleColorDark: new os(0, 0, 0, 1), clipLight: 0, clipDark: 0, saturationAdjustmentCutoff: 0, saturationLight: 0, saturationDark: 0, overlayLight: 0, overlayDark: 0, multiplyLight: 0, multiplyDark: 0, baseScalePosition: .5 }; Es.defaultPaletteConfig.scaleColorLight, Es.defaultPaletteConfig.scaleColorDark; class Os { constructor(t) { this.palette = [], this.config = Object.assign({}, Os.defaultPaletteConfig, t), this.regenPalettes(); } regenPalettes() { let t = this.config.steps; (isNaN(t) || t < 3) && (t = 3); const e = new os(.14, .14, .14, 1), i = new Es(Object.assign(Object.assign({}, Es.greyscalePaletteConfig), { baseColor: e, baseScalePosition: 86 / 94, steps: t })).palette, o = (ss(this.config.baseColor) + ds(this.config.baseColor).l) / 2, r = this.matchRelativeLuminanceIndex(o, i) / (t - 1), s = this.matchRelativeLuminanceIndex(.14, i) / (t - 1), n = ds(this.config.baseColor), a = cs(Jr.fromObject({ h: n.h, s: n.s, l: .14 })), l = cs(Jr.fromObject({ h: n.h, s: n.s, l: .06 })), d = new Array(5); d[0] = { position: 0, color: new os(1, 1, 1, 1) }, d[1] = { position: r, color: this.config.baseColor }, d[2] = { position: s, color: a }, d[3] = { position: .99, color: l }, d[4] = { position: 1, color: new os(0, 0, 0, 1) }; const c = new Ts(d); this.palette = new Array(t); for (let e = 0; e < t; e++) { const i = c.getColor(e / (t - 1), Fs.RGB); this.palette[e] = i; } } matchRelativeLuminanceIndex(t, e) { let i = Number.MAX_VALUE, o = 0, r = 0; const s = e.length; for (; r < s; r++) { const s = Math.abs(ss(e[r]) - t); s < i && (i = s, o = r); } return o; } } Os.defaultPaletteConfig = { baseColor: Is("#808080"), steps: 94 }; const Bs = "#FFFFFF", Ls = { steps: 94, clipLight: 0, clipDark: 0 }, Hs = (Object.assign({}, Ls), Object.assign(Object.assign({}, Ls), { baseColor: Is("#0078D4") }), { backgroundColor: Bs, contrast: 0, density: 0, designUnit: 4, baseHeightMultiplier: 8, baseHorizontalSpacingMultiplier: 3, direction: Hr.ltr, cornerRadius: 2, elevatedCornerRadius: 4, focusOutlineWidth: 2, fontWeight: { light: 100, semilight: 200, normal: 400, semibold: 600, bold: 700 }, disabledOpacity: .3, outlineWidth: 1, neutralPalette: ["#FFFFFF", "#FCFCFC", "#FAFAFA", "#F7F7F7", "#F5F5F5", "#F2F2F2", "#EFEFEF", "#EDEDED", "#EAEAEA", "#E8E8E8", "#E5E5E5", "#E2E2E2", "#E0E0E0", "#DDDDDD", "#DBDBDB", "#D8D8D8", "#D6D6D6", "#D3D3D3", "#D0D0D0", "#CECECE", "#CBCBCB", "#C9C9C9", "#C6C6C6", "#C3C3C3", "#C1C1C1", "#BEBEBE", "#BCBCBC", "#B9B9B9", "#B6B6B6", "#B4B4B4", "#B1B1B1", "#AFAFAF", "#ACACAC", "#A9A9A9", "#A7A7A7", "#A4A4A4", "#A2A2A2", "#9F9F9F", "#9D9D9D", "#9A9A9A", "#979797", "#959595", "#929292", "#909090", "#8D8D8D", "#8A8A8A", "#888888", "#858585", "#838383", "#808080", "#7D7D7D", "#7B7B7B", "#787878", "#767676", "#737373", "#717171", "#6E6E6E", "#6B6B6B", "#696969", "#666666", "#646464", "#616161", "#5F5F5F", "#5C5C5C", "#5A5A5A", "#575757", "#545454", "#525252", "#4F4F4F", "#4D4D4D", "#4A4A4A", "#484848", "#454545", "#424242", "#404040", "#3D3D3D", "#3B3B3B", "#383838", "#363636", "#333333", "#313131", "#2E2E2E", "#2B2B2B", "#292929", "#262626", "#242424", "#212121", "#1E1E1E", "#1B1B1B", "#181818", "#151515", "#121212", "#101010", "#000000"], accentPalette: ["#FFFFFF", "#FBFDFE", "#F6FAFE", "#F2F8FD", "#EEF6FC", "#E9F4FB", "#E5F1FB", "#E1EFFA", "#DCEDF9", "#D8EAF8", "#D4E8F8", "#CFE6F7", "#CBE4F6", "#C7E1F6", "#C2DFF5", "#BEDDF4", "#BADAF3", "#B6D8F3", "#B1D6F2", "#ADD4F1", "#A9D1F0", "#A4CFF0", "#A0CDEF", "#9CCAEE", "#97C8EE", "#93C6ED", "#8FC4EC", "#8AC1EB", "#86BFEB", "#82BDEA", "#7DBAE9", "#79B8E8", "#75B6E8", "#70B3E7", "#6CB1E6", "#68AFE5", "#63ADE5", "#5FAAE4", "#5BA8E3", "#56A6E3", "#52A3E2", "#4EA1E1", "#499FE0", "#459DE0", "#419ADF", "#3D98DE", "#3896DD", "#3493DD", "#3091DC", "#2B8FDB", "#278DDB", "#238ADA", "#1E88D9", "#1A86D8", "#1683D8", "#1181D7", "#0D7FD6", "#097DD5", "#047AD5", "#0078D4", "#0075CF", "#0072C9", "#006FC4", "#006CBE", "#0069B9", "#0066B4", "#0063AE", "#0060A9", "#005CA3", "#00599E", "#005699", "#005393", "#00508E", "#004D88", "#004A83", "#00477D", "#004478", "#004173", "#003E6D", "#003B68", "#003862", "#00355D", "#003258", "#002F52", "#002B4D", "#002847", "#002542", "#00223C", "#001F36", "#001B30", "#00182B", "#001525", "#00121F", "#000000"], accentBaseColor: "#0078D4", accentFillRestDelta: 0, accentFillHoverDelta: 4, accentFillActiveDelta: -5, accentFillFocusDelta: 0, accentFillSelectedDelta: 12, accentForegroundRestDelta: 0, accentForegroundHoverDelta: 6, accentForegroundActiveDelta: -4, accentForegroundFocusDelta: 0, neutralFillRestDelta: 7, neutralFillHoverDelta: 10, neutralFillActiveDelta: 5, neutralFillFocusDelta: 0, neutralFillSelectedDelta: 7, neutralFillInputRestDelta: 0, neutralFillInputHoverDelta: 0, neutralFillInputActiveDelta: 0, neutralFillInputFocusDelta: 0, neutralFillInputSelectedDelta: 0, neutralFillStealthRestDelta: 0, neutralFillStealthHoverDelta: 5, neutralFillStealthActiveDelta: 3, neutralFillStealthFocusDelta: 0, neutralFillStealthSelectedDelta: 7, neutralFillToggleHoverDelta: 8, neutralFillToggleActiveDelta: -5, neutralFillToggleFocusDelta: 0, baseLayerLuminance: -1, neutralFillCardDelta: 3, neutralForegroundDarkIndex: 93, neutralForegroundLightIndex: 0, neutralForegroundHoverDelta: 0, neutralForegroundActiveDelta: 0, neutralForegroundFocusDelta: 0, neutralDividerRestDelta: 8, neutralOutlineRestDelta: 25, neutralOutlineHoverDelta: 40, neutralOutlineActiveDelta: 16, neutralOutlineFocusDelta: 25 }); function Rs(t, e) { return we(t) ? t(e) : t; } function Ms(t) { return e => e && void 0 !== e[t] ? e[t] : Hs[t]; } const Ns = Ms("backgroundColor"), zs = Ms("accentBaseColor"), js = Ms("neutralPalette"), Vs = Ms("accentPalette"), _s = Ms("direction"), Gs = Ms("accentFillHoverDelta"), qs = Ms("accentFillActiveDelta"), Ws = Ms("accentFillFocusDelta"), Us = Ms("accentFillSelectedDelta"), Ks = Ms("accentForegroundRestDelta"), Xs = Ms("accentForegroundHoverDelta"), Qs = Ms("accentForegroundActiveDelta"), Ys = Ms("accentForegroundFocusDelta"), Zs = Ms("neutralFillRestDelta"), Js = Ms("neutralFillHoverDelta"), tn = Ms("neutralFillActiveDelta"), en = Ms("neutralFillFocusDelta"), on = Ms("neutralFillSelectedDelta"), rn = Ms("neutralFillInputRestDelta"), sn = Ms("neutralFillInputHoverDelta"), nn = Ms("neutralFillInputActiveDelta"), an = Ms("neutralFillInputFocusDelta"), ln = Ms("neutralFillInputSelectedDelta"), dn = Ms("neutralFillStealthRestDelta"), cn = Ms("neutralFillStealthHoverDelta"), hn = Ms("neutralFillStealthActiveDelta"), un = Ms("neutralFillStealthFocusDelta"), pn = Ms("neutralFillStealthSelectedDelta"), vn = Ms("neutralFillToggleHoverDelta"), gn = Ms("neutralFillToggleActiveDelta"), bn = Ms("neutralFillToggleFocusDelta"), fn = Ms("baseLayerLuminance"), mn = Ms("neutralFillCardDelta"), yn = Ms("neutralForegroundHoverDelta"), xn = Ms("neutralForegroundActiveDelta"), $n = Ms("neutralForegroundFocusDelta"), kn = Ms("neutralDividerRestDelta"), wn = Ms("neutralOutlineRestDelta"), Cn = Ms("neutralOutlineHoverDelta"), Fn = Ms("neutralOutlineActiveDelta"), Dn = Ms("neutralOutlineFocusDelta"); var Tn; function Pn(t) { const e = yi(t); return function (t) { return "function" == typeof t ? i => e(Object.assign({}, i, { backgroundColor: t(i) })) : e(t); }; } function Sn(t, e) { const i = yi(e); return e => "function" == typeof e ? o => i(Object.assign({}, o, { backgroundColor: e(o) }))[t] : i(e)[t]; } !function (t) { t.rest = "rest", t.hover = "hover", t.active = "active", t.focus = "focus", t.selected = "selected"; }(Tn || (Tn = {})); const In = yi(t => { let e = Is(t); if (null !== e) return e; if (e = As(t), null !== e) return e; throw new Error(t + ' cannot be converted to a ColorRGBA64. Color strings must be one of the following formats: "#RGB", "#RRGGBB", or "rgb(r, g, b)"'); }); function An(t) { return e = t, Ss.test(e) || function (t) { return Ps.test(t); }(t); var e; } const En = yi((t, e) => ls(In(t), In(e)), (t, e) => t + e); function On(t) { return ns(In(t)); } function Bn(...t) { return e => Math.max.apply(null, t.map(t => t(e))); } const Ln = (t, e, i) => Math.min(Math.max(t, e), i); var Hn; function Rn(t, e) { return i => { if (!An(e)) return -1; const o = Rs(t, i), r = o.indexOf(e); return -1 !== r ? r : o.findIndex(t => { return An(t) && (i = t, In(e).equalValue(In(i))); var i; }); }; } function Mn(t, e) { return i => { const o = Rs(t, i), r = Rs(e, i), s = Rn(o, r)(i); let n; if (-1 !== s) return s; try { n = On(r); } catch (t) { n = -1; } return -1 === n ? 0 : o.map((t, e) => ({ luminance: On(t), index: e })).reduce((t, e) => Math.abs(e.luminance - n) < Math.abs(t.luminance - n) ? e : t).index; }; } function Nn(t) { return On(Ns(t)) <= (-.1 + Math.sqrt(.21)) / 2; } function zn(t, e) { return "function" == typeof t ? i => e(i)[Ln(t(i), 0, e(i).length - 1)] : e[Ln(t, 0, e.length - 1)]; } function jn(t) { return (e, i) => o => zn(Nn(o) ? Rs(i, o) : Rs(e, o), t(o)); } function Vn(t) { return e => i => o => r => s => { const n = Rs(t, s), a = Rs(e, s), l = a.length, d = Ln(i(n, a, s), 0, l - 1), c = o(d, a, s); const h = [].concat(a), u = l - 1; let p = d; return -1 === c && (h.reverse(), p = u - p), function t(e, i, o = 0, r = e.length - 1) { if (r === o) return e[o]; const s = Math.floor((r - o) / 2) + o; return i(e[s]) ? t(e, i, o, s) : t(e, i, s + 1, r); }(h, (function (t) { return r(En(n, t)); }), p, u); }; } function _n(t, e, i) { return Mn(e, t)(i); } function Gn(t) { return Mn(js, Ns(t))(t); } function qn(t, e, i, o, r, s) { return n => { const a = Rs(t, n), l = Nn(n) ? -1 : 1, d = Vn(Ns)(a)(_n)(() => l)((c = Rs(e, n), t => t >= c))(n); var c; const h = Rn(t, d)(n), u = Rs(i, n), p = Rs(o, n), v = Rs(r, n), g = Rs(s, n); return function (t, e, i, o, r, s, n) { const a = t + i * Math.abs(o - r), l = 1 === i ? o < r : i * o > i * r, d = l ? t : a, c = l ? a : t, h = d + i * s, u = d + i * n; return { rest: zn(d, e), hover: zn(c, e), active: zn(h, e), focus: zn(u, e) }; }(h, a, l, u, p, v, g); }; } !function (t) { t.neutral = "neutral", t.accent = "accent"; }(Hn || (Hn = {})); const Wn = Pn(qn(js, 14, 0, yn, xn, $n)), Un = Sn(Tn.rest, Wn), Kn = (Sn(Tn.hover, Wn), Sn(Tn.active, Wn), Sn(Tn.focus, Wn), Pn(qn(js, 4.5, 0, vn, gn, bn))), Xn = Sn(Tn.rest, Kn), Qn = (Sn(Tn.hover, Kn), Sn(Tn.active, Kn), Sn(Tn.focus, Kn), (t, e) => En(Bs, t) >= e ? Bs : "#000000"); function Yn(t) { return function (e) { return "function" == typeof e ? i => Qn(e(i), t) : Qn(Xn(e), t); }; } const Zn = Yn(4.5), Jn = Yn(3), ta = (t, e) => En(Bs, t) >= e ? Bs : "#000000"; const ea = (ia = 4.5, function (t) { return "function" == typeof t ? e => ta(t(e), ia) : ta(zs(t), ia); }); var ia; function oa(t) { return qn(js, t, 0, 0, 0, 0); } const ra = Sn(Tn.rest, Pn(oa(4.5))), sa = Sn(Tn.rest, Pn(oa(3))); function na(t) { return e => { const i = Vs(e), o = zs(e), r = Mn(Vs, o)(e), s = { rest: Ks(e), hover: Xs(e), active: Qs(e), focus: Ys(e) }, n = Nn(e) ? -1 : 1, a = r + (1 === n ? Math.min(s.rest, s.hover) : Math.max(n * s.rest, n * s.hover)), l = Vn(Ns)(Vs)(() => a)(() => n)(e => e >= t)(e), d = Rn(Vs, l)(e), c = d + n * Math.abs(s.rest - s.hover), h = 1 === n ? s.rest < s.hover : n * s.rest > n * s.hover, u = h ? d : c, p = h ? c : d, v = u + n * s.active, g = u + n * s.focus; return { rest: zn(u, i), hover: zn(p, i), active: zn(v, i), focus: zn(g, i) }; }; } const aa = Pn(na(4.5)), la = Pn(na(3)), da = (Sn(Tn.rest, aa), Sn(Tn.hover, aa), Sn(Tn.active, aa), Sn(Tn.focus, aa), Sn(Tn.rest, la), Sn(Tn.hover, la), Sn(Tn.active, la), Sn(Tn.focus, la), Bn(Zs, Js, tn, en)); function ca(t) { return e => { const i = Gn(e); return zn(i + (i >= da(e) ? -1 : 1) * t(e), js(e)); }; } const ha = Pn(ca(Zs)), ua = Pn(ca(Js)), pa = Pn(ca(tn)), va = Pn(ca(en)), ga = Pn(ca(on)), ba = Pn(t => ({ rest: ha(t), hover: ua(t), active: pa(t), focus: va(t), selected: ga(t) })), fa = Bn(Zs, Js, tn, en, dn, cn, hn, un); function ma(t) { return e => { const i = Gn(e); return zn(i + (i >= fa(e) ? -1 : 1) * t(e), js(e)); }; } const ya = Pn(ma(dn)), xa = Pn(ma(cn)), $a = Pn(ma(hn)), ka = Pn(ma(un)), wa = Pn(ma(pn)), Ca = Pn(t => ({ rest: ya(t), hover: xa(t), active: $a(t), focus: ka(t), selected: wa(t) })); function Fa(t) { return e => { const i = Nn(e) ? -1 : 1; return zn(Gn(e) - t(e) * i, js(e)); }; } const Da = Pn(Fa(rn)), Ta = Pn(Fa(sn)), Pa = Pn(Fa(nn)), Sa = Pn(Fa(an)), Ia = Pn(Fa(ln)), Aa = Pn(t => ({ rest: Da(t), hover: Ta(t), active: Pa(t), focus: Sa(t), selected: Ia(t) })), Ea = Bn(Zs, Js, tn); function Oa(t) { return e => { const i = Vs(e), o = i.length, r = zs(e), s = ea(Object.assign({}, e, { backgroundColor: r })), n = Gs(e), a = Gn(e) >= Ea(e) ? -1 : 1, l = o - 1, d = Mn(Vs, r)(e); let c = 0; for (; c < a * n && Ci(d + c + a, 0, o) && En(i[d + c + a], s) >= t && Ci(d + c + a + a, 0, l);)c += a; const h = d + c, u = h + -1 * a * n, p = u + a * qs(e), v = u + a * Ws(e); return { rest: zn(u, i), hover: zn(h, i), active: zn(p, i), focus: zn(v, i), selected: zn(u + (Nn(e) ? -1 * Us(e) : Us(e)), i) }; }; } const Ba = Pn(Oa(4.5)), La = Pn(Oa(3)), Ha = (Sn(Tn.rest, Ba), Sn(Tn.hover, Ba), Sn(Tn.active, Ba), Sn(Tn.focus, Ba), Sn(Tn.selected, Ba), Sn(Tn.rest, La), Sn(Tn.hover, La), Sn(Tn.active, La), Sn(Tn.focus, La), Sn(Tn.selected, La), t => { const e = mn(t), i = Mn(js, Ns(t))(t); return zn(i - (i < e ? -1 * e : e), js(t)); }); function Ra(t) { return "function" == typeof t ? e => Ha(Object.assign({}, e, { backgroundColor: t(e) })) : Ha(t); } const Ma = Pn(t => { const e = js(t), i = Gn(t), o = Nn(t) ? -1 : 1, r = wn(t), s = i + o * r, n = s + o * (Cn(t) - r), a = s + o * (Fn(t) - r), l = s + o * (Dn(t) - r); return { rest: zn(s, e), hover: zn(n, e), active: zn(a, e), focus: zn(l, e) }; }), Na = (Sn(Tn.rest, Ma), Sn(Tn.hover, Ma), Sn(Tn.active, Ma), Sn(Tn.focus, Ma), Pn(t => { const e = js(t), i = Gn(t), o = kn(t); return zn(i + (Nn(t) ? -1 : 1) * o, e); })); var za, ja, Va; function _a(t, e) { return i => -1 === fn(i) ? e(i) : t(i); } !function (t) { t[t.L1 = 0] = "L1", t[t.L1Alt = 3] = "L1Alt", t[t.L2 = 10] = "L2", t[t.L3 = 13] = "L3", t[t.L4 = 16] = "L4"; }(za || (za = {})), function (t) { t[t.L1 = 76] = "L1", t[t.L1Alt = 76] = "L1Alt", t[t.L2 = 79] = "L2", t[t.L3 = 82] = "L3", t[t.L4 = 85] = "L4"; }(ja || (ja = {})), function (t) { t[t.LightMode = 1] = "LightMode", t[t.DarkMode = .23] = "DarkMode"; }(Va || (Va = {})); const Ga = Mn(js, t => { const e = fn(t); return new os(e, e, e, 1).toStringHexRGB(); }), qa = t => Wr(Gr(Ga, mn)(t), 0, js(t).length - 1), Wa = Bn(Zs, Js, tn), Ua = Bn(_r(Ga, mn), Wa), Ka = t => { const e = new os(.14, .14, .14, 1); return Mn(js, e.toStringHexRGB())(t); }, Xa = Pn(_a(zn(Gr(qa, mn), js), jn(js)(0, Gr(Ka, qr(mn, 5))))), Qa = Pn(_a(zn(qa, js), jn(js)(0, Gr(Ka, qr(mn, 4))))), Ya = Pn(_a(zn(_r(qa, mn), js), jn(js)(mn, Gr(Ka, qr(mn, 3))))), Za = Pn(_a(zn(Ga, js), jn(js)(0, Gr(Ka, qr(mn, 3))))), Ja = Ya, tl = Pn(_a(zn(Ua, js), jn(js)(Wa, Gr(Ka, qr(mn, 2))))), el = Pn(_a(zn(_r(Ua, mn), js), jn(js)(_r(Wa, mn), Gr(Ka, mn)))), il = Pn(_a(zn(_r(Ua, qr(mn, 2)), js), jn(js)(_r(Wa, qr(mn, 2)), Ka))); function ol(t) { return t > 3.5; } const rl = Pn(Vn(Ns)(js)((function (t, e, i) { return Mn(js, t)(i); }))((function (t, e, i) { return Nn(i) ? -1 : 1; }))(ol)); function sl(t, e, i) { return Nn(i) ? 1 : -1; } function nl(t) { return new Os({ baseColor: t }).palette.map(t => t.toStringHexRGB().toUpperCase()); } const al = pt` ${Zo("block")};`, ll = new ro("neutral-foreground-rest", Un, t => t), dl = pt` :host{background-color: var(--background-color);color: ${ll.var}}`.withBehaviors(ll); let cl = class extends ho { constructor() { super(...arguments), this.noPaint = !1; } noPaintChanged() { this.noPaint || void 0 === this.backgroundColor ? this.$fastController.removeStyles(dl) : this.$fastController.addStyles(dl); } backgroundColorChanged() { this.noPaintChanged(); } }; t([ft({ attribute: "no-paint", mode: "boolean" })], cl.prototype, "noPaint", void 0), t([vo({ attribute: "background-color", default: Hs.backgroundColor })], cl.prototype, "backgroundColor", void 0), t([vo({ attribute: "accent-base-color", cssCustomProperty: !1, default: Hs.accentBaseColor })], cl.prototype, "accentBaseColor", void 0), t([vo({ attribute: !1, cssCustomProperty: !1, default: Hs.neutralPalette })], cl.prototype, "neutralPalette", void 0), t([vo({ attribute: !1, cssCustomProperty: !1, default: Hs.accentPalette })], cl.prototype, "accentPalette", void 0), t([vo({ default: Hs.density, converter: gt })], cl.prototype, "density", void 0), t([vo({ attribute: "design-unit", converter: gt, default: Hs.designUnit })], cl.prototype, "designUnit", void 0), t([vo({ attribute: "direction", cssCustomProperty: !1, default: Hs.direction })], cl.prototype, "direction", void 0), t([vo({ attribute: "base-height-multiplier", default: Hs.baseHeightMultiplier, converter: gt })], cl.prototype, "baseHeightMultiplier", void 0), t([vo({ attribute: "base-horizontal-spacing-multiplier", converter: gt, default: Hs.baseHorizontalSpacingMultiplier })], cl.prototype, "baseHorizontalSpacingMultiplier", void 0), t([vo({ attribute: "corner-radius", converter: gt, default: Hs.cornerRadius })], cl.prototype, "cornerRadius", void 0), t([vo({ attribute: "elevated-corner-radius", converter: gt, default: Hs.elevatedCornerRadius })], cl.prototype, "elevatedCornerRadius", void 0), t([vo({ attribute: "outline-width", converter: gt, default: Hs.outlineWidth })], cl.prototype, "outlineWidth", void 0), t([vo({ attribute: "focus-outline-width", converter: gt, default: Hs.focusOutlineWidth })], cl.prototype, "focusOutlineWidth", void 0), t([vo({ attribute: "disabled-opacity", converter: gt, default: Hs.disabledOpacity })], cl.prototype, "disabledOpacity", void 0), t([vo({ attribute: "type-ramp-minus-2-font-size", default: "10px" })], cl.prototype, "typeRampMinus2FontSize", void 0), t([vo({ attribute: "type-ramp-minus-2-line-height", default: "16px" })], cl.prototype, "typeRampMinus2LineHeight", void 0), t([vo({ attribute: "type-ramp-minus-1-font-size", default: "12px" })], cl.prototype, "typeRampMinus1FontSize", void 0), t([vo({ attribute: "type-ramp-minus-1-line-height", default: "16px" })], cl.prototype, "typeRampMinus1LineHeight", void 0), t([vo({ attribute: "type-ramp-base-font-size", default: "14px" })], cl.prototype, "typeRampBaseFontSize", void 0), t([vo({ attribute: "type-ramp-base-line-height", default: "20px" })], cl.prototype, "typeRampBaseLineHeight", void 0), t([vo({ attribute: "type-ramp-plus-1-font-size", default: "16px" })], cl.prototype, "typeRampPlus1FontSize", void 0), t([vo({ attribute: "type-ramp-plus-1-line-height", default: "24px" })], cl.prototype, "typeRampPlus1LineHeight", void 0), t([vo({ attribute: "type-ramp-plus-2-font-size", default: "20px" })], cl.prototype, "typeRampPlus2FontSize", void 0), t([vo({ attribute: "type-ramp-plus-2-line-height", default: "28px" })], cl.prototype, "typeRampPlus2LineHeight", void 0), t([vo({ attribute: "type-ramp-plus-3-font-size", default: "28px" })], cl.prototype, "typeRampPlus3FontSize", void 0), t([vo({ attribute: "type-ramp-plus-3-line-height", default: "36px" })], cl.prototype, "typeRampPlus3LineHeight", void 0), t([vo({ attribute: "type-ramp-plus-4-font-size", default: "34px" })], cl.prototype, "typeRampPlus4FontSize", void 0), t([vo({ attribute: "type-ramp-plus-4-line-height", default: "44px" })], cl.prototype, "typeRampPlus4LineHeight", void 0), t([vo({ attribute: "type-ramp-plus-5-font-size", default: "46px" })], cl.prototype, "typeRampPlus5FontSize", void 0), t([vo({ attribute: "type-ramp-plus-5-line-height", default: "56px" })], cl.prototype, "typeRampPlus5LineHeight", void 0), t([vo({ attribute: "type-ramp-plus-6-font-size", default: "60px" })], cl.prototype, "typeRampPlus6FontSize", void 0), t([vo({ attribute: "type-ramp-plus-6-line-height", default: "72px" })], cl.prototype, "typeRampPlus6LineHeight", void 0), t([vo({ attribute: "accent-fill-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentFillRestDelta })], cl.prototype, "accentFillRestDelta", void 0), t([vo({ attribute: "accent-fill-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentFillHoverDelta })], cl.prototype, "accentFillHoverDelta", void 0), t([vo({ attribute: "accent-fill-active-delta", cssCustomProperty: !1, converter: gt, default: Hs.accentFillActiveDelta })], cl.prototype, "accentFillActiveDelta", void 0), t([vo({ attribute: "accent-fill-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentFillFocusDelta })], cl.prototype, "accentFillFocusDelta", void 0), t([vo({ attribute: "accent-fill-selected-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentFillSelectedDelta })], cl.prototype, "accentFillSelectedDelta", void 0), t([vo({ attribute: "accent-foreground-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentForegroundRestDelta })], cl.prototype, "accentForegroundRestDelta", void 0), t([vo({ attribute: "accent-foreground-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentForegroundHoverDelta })], cl.prototype, "accentForegroundHoverDelta", void 0), t([vo({ attribute: "accent-foreground-active-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentForegroundActiveDelta })], cl.prototype, "accentForegroundActiveDelta", void 0), t([vo({ attribute: "accent-foreground-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.accentForegroundFocusDelta })], cl.prototype, "accentForegroundFocusDelta", void 0), t([vo({ attribute: "neutral-fill-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillRestDelta })], cl.prototype, "neutralFillRestDelta", void 0), t([vo({ attribute: "neutral-fill-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillHoverDelta })], cl.prototype, "neutralFillHoverDelta", void 0), t([vo({ attribute: "neutral-fill-active-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillActiveDelta })], cl.prototype, "neutralFillActiveDelta", void 0), t([vo({ attribute: "neutral-fill-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillFocusDelta })], cl.prototype, "neutralFillFocusDelta", void 0), t([vo({ attribute: "neutral-fill-selected-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillSelectedDelta })], cl.prototype, "neutralFillSelectedDelta", void 0), t([vo({ attribute: "neutral-fill-input-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillInputRestDelta })], cl.prototype, "neutralFillInputRestDelta", void 0), t([vo({ attribute: "neutral-fill-input-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillInputHoverDelta })], cl.prototype, "neutralFillInputHoverDelta", void 0), t([vo({ attribute: "neutral-fill-input-active-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillInputActiveDelta })], cl.prototype, "neutralFillInputActiveDelta", void 0), t([vo({ attribute: "neutral-fill-input-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillInputFocusDelta })], cl.prototype, "neutralFillInputFocusDelta", void 0), t([vo({ attribute: "neutral-fill-input-selected-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillInputSelectedDelta })], cl.prototype, "neutralFillInputSelectedDelta", void 0), t([vo({ attribute: "neutral-fill-stealth-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillStealthRestDelta })], cl.prototype, "neutralFillStealthRestDelta", void 0), t([vo({ attribute: "neutral-fill-stealth-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillStealthHoverDelta })], cl.prototype, "neutralFillStealthHoverDelta", void 0), t([vo({ attribute: "neutral-fill-stealth-active-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillStealthActiveDelta })], cl.prototype, "neutralFillStealthActiveDelta", void 0), t([vo({ attribute: "neutral-fill-stealth-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillStealthFocusDelta })], cl.prototype, "neutralFillStealthFocusDelta", void 0), t([vo({ attribute: "neutral-fill-stealth-selected-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillStealthSelectedDelta })], cl.prototype, "neutralFillStealthSelectedDelta", void 0), t([vo({ attribute: "neutral-fill-toggle-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillToggleHoverDelta })], cl.prototype, "neutralFillToggleHoverDelta", void 0), t([vo({ attribute: "neutral-fill-toggle-hover-active", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillToggleActiveDelta })], cl.prototype, "neutralFillToggleActiveDelta", void 0), t([vo({ attribute: "neutral-fill-toggle-hover-focus", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillToggleFocusDelta })], cl.prototype, "neutralFillToggleFocusDelta", void 0), t([vo({ attribute: "base-layer-luminance", converter: gt, cssCustomProperty: !1, default: Hs.baseLayerLuminance })], cl.prototype, "baseLayerLuminance", void 0), t([vo({ attribute: "neutral-fill-card-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralFillCardDelta })], cl.prototype, "neutralFillCardDelta", void 0), t([vo({ attribute: "neutral-foreground-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralForegroundHoverDelta })], cl.prototype, "neutralForegroundHoverDelta", void 0), t([vo({ attribute: "neutral-foreground-active-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralForegroundActiveDelta })], cl.prototype, "neutralForegroundActiveDelta", void 0), t([vo({ attribute: "neutral-foreground-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralForegroundFocusDelta })], cl.prototype, "neutralForegroundFocusDelta", void 0), t([vo({ attribute: "neutral-divider-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralDividerRestDelta })], cl.prototype, "neutralDividerRestDelta", void 0), t([vo({ attribute: "neutral-outline-rest-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralOutlineRestDelta })], cl.prototype, "neutralOutlineRestDelta", void 0), t([vo({ attribute: "neutral-outline-hover-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralOutlineHoverDelta })], cl.prototype, "neutralOutlineHoverDelta", void 0), t([vo({ attribute: "neutral-outline-active-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralOutlineActiveDelta })], cl.prototype, "neutralOutlineActiveDelta", void 0), t([vo({ attribute: "neutral-outline-focus-delta", converter: gt, cssCustomProperty: !1, default: Hs.neutralOutlineFocusDelta })], cl.prototype, "neutralOutlineFocusDelta", void 0), cl = t([po({ name: "fluent-design-system-provider", template: go, styles: al, shadowOptions: { mode: "closed" } })], cl); const hl = so("neutral-foreground-rest", t => Wn(t).rest, cl.findProvider), ul = so("neutral-foreground-hover", t => Wn(t).hover, cl.findProvider), pl = so("neutral-foreground-active", t => Wn(t).active, cl.findProvider), vl = so("neutral-foreground-focus", t => Wn(t).focus, cl.findProvider), gl = so("neutral-foreground-toggle", Zn, cl.findProvider), bl = so("neutral-foreground-toggle-large", Jn, cl.findProvider), fl = so("neutral-foreground-hint", ra, cl.findProvider), ml = so("neutral-foreground-hint-large", sa, cl.findProvider), yl = so("accent-foreground-rest", t => aa(t).rest, cl.findProvider), xl = so("accent-foreground-hover", t => aa(t).hover, cl.findProvider), $l = so("accent-foreground-active", t => aa(t).active, cl.findProvider), kl = so("accent-foreground-focus", t => aa(t).focus, cl.findProvider), wl = so("accent-foreground-cut-rest", t => ea(t), cl.findProvider), Cl = so("accent-foreground-large-rest", t => la(t).rest, cl.findProvider), Fl = so("accent-foreground-large-hover", t => la(t).hover, cl.findProvider), Dl = so("accent-foreground-large-active", t => la(t).active, cl.findProvider), Tl = so("accent-foreground-large-focus", t => la(t).focus, cl.findProvider), Pl = so("neutral-fill-rest", t => ba(t).rest, cl.findProvider), Sl = so("neutral-fill-hover", t => ba(t).hover, cl.findProvider), Il = so("neutral-fill-active", t => ba(t).active, cl.findProvider), Al = so("neutral-fill-focus", t => ba(t).focus, cl.findProvider), El = so("neutral-fill-selected", t => ba(t).selected, cl.findProvider), Ol = so("neutral-fill-stealth-rest", t => Ca(t).rest, cl.findProvider), Bl = so("neutral-fill-stealth-hover", t => Ca(t).hover, cl.findProvider), Ll = so("neutral-fill-stealth-active", t => Ca(t).active, cl.findProvider), Hl = so("neutral-fill-stealth-focus", t => Ca(t).focus, cl.findProvider), Rl = so("neutral-fill-stealth-selected", t => Ca(t).selected, cl.findProvider), Ml = so("neutral-fill-toggle-rest", t => Kn(t).rest, cl.findProvider), Nl = so("neutral-fill-toggle-hover", t => Kn(t).hover, cl.findProvider), zl = so("neutral-fill-toggle-active", t => Kn(t).active, cl.findProvider), jl = so("neutral-fill-toggle-focus", t => Kn(t).focus, cl.findProvider), Vl = so("neutral-fill-input-rest", t => Aa(t).rest, cl.findProvider), _l = so("neutral-fill-input-hover", t => Aa(t).hover, cl.findProvider), Gl = so("neutral-fill-input-active", t => Aa(t).active, cl.findProvider), ql = so("neutral-fill-input-focus", t => Aa(t).focus, cl.findProvider), Wl = so("accent-fill-rest", t => Ba(t).rest, cl.findProvider), Ul = so("accent-fill-hover", t => Ba(t).hover, cl.findProvider), Kl = so("accent-fill-active", t => Ba(t).active, cl.findProvider), Xl = so("accent-fill-focus", t => Ba(t).focus, cl.findProvider), Ql = so("accent-fill-selected", t => Ba(t).selected, cl.findProvider), Yl = so("accent-fill-large-rest", t => La(t).rest, cl.findProvider), Zl = so("accent-fill-large-hover", t => La(t).hover, cl.findProvider), Jl = so("accent-fill-large-active", t => La(t).active, cl.findProvider), td = so("accent-fill-large-focus", t => La(t).focus, cl.findProvider), ed = so("accent-fill-large-selected", t => La(t).selected, cl.findProvider), id = so("neutral-fill-card-rest", t => Ra(t), cl.findProvider), od = so("neutral-outline-rest", t => Ma(t).rest, cl.findProvider), rd = so("neutral-outline-hover", t => Ma(t).hover, cl.findProvider), sd = so("neutral-outline-active", t => Ma(t).active, cl.findProvider), nd = so("neutral-outline-focus", t => Ma(t).focus, cl.findProvider), ad = so("neutral-divider-rest", Na, cl.findProvider), ld = so("neutral-layer-floating", Xa, cl.findProvider), dd = so("neutral-layer-card", Qa, cl.findProvider), cd = so("neutral-layer-card-container", Ya, cl.findProvider), hd = so("neutral-layer-l1", Za, cl.findProvider), ud = so("neutral-layer-l1-alt", Ja, cl.findProvider), pd = so("neutral-layer-l2", tl, cl.findProvider), vd = so("neutral-layer-l3", el, cl.findProvider), gd = so("neutral-layer-l4", il, cl.findProvider), bd = so("neutral-focus", rl, cl.findProvider), fd = so("neutral-focus-inner-accent", (md = zs, Vn(rl)(Vs)(function (t) { return (e, i, o) => i.indexOf(t(o)); }(md))(sl)(ol)), cl.findProvider); var md; const yd = so("inline-start", t => _s(t) === Hr.ltr ? "left" : "right", cl.findProvider), xd = so("inline-end", t => _s(t) === Hr.ltr ? "right" : "left", cl.findProvider), $d = "0 0 calc((var(--elevation) * 0.225px) + 2px) rgba(0, 0, 0, calc(.11 * (2 - var(--background-luminance, 1))))", kd = "0 calc(var(--elevation) * 0.4px) calc((var(--elevation) * 0.9px)) rgba(0, 0, 0, calc(.13 * (2 - var(--background-luminance, 1))))", wd = `box-shadow: ${$d}, ${kd};`, Cd = "(var(--base-height-multiplier) + var(--density)) * var(--design-unit)", Fd = pt` ${Zo("inline-flex")} :host{font-family: var(--body-font);outline: none;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);height: calc(${Cd} * 1px);min-width: calc(${Cd} * 1px);background-color: ${Pl.var};color: ${hl.var};border-radius: calc(var(--corner-radius) * 1px);fill: currentColor;cursor: pointer}.control{background: transparent;height: inherit;flex-grow: 1;box-sizing: border-box;display: inline-flex;justify-content: center;align-items: center;padding: 0 calc((10 + (var(--design-unit) * 2 * var(--density))) * 1px);white-space: nowrap;outline: none;text-decoration: none;border: calc(var(--outline-width) * 1px) solid transparent;color: inherit;border-radius: inherit;fill: inherit;cursor: inherit;font-family: inherit}.control, .end, .start{font: inherit}:host(:hover){background-color: ${Sl.var}}:host(:active){background-color: ${Il.var}}.control:${Jo}{border: calc(var(--outline-width) * 1px) solid ${bd.var};box-shadow: 0 0 0 calc((var(--focus-outline-width) - var(--outline-width)) * 1px) ${bd.var}}.control::-moz-focus-inner{border: 0}:host(.disabled){opacity: var(--disabled-opacity);background-color: ${Pl.var};cursor: ${"not-allowed"}}.start, .end, ::slotted(svg){${""} width: 16px;height: 16px}.start{margin-inline-end: 11px}.end{margin-inline-start: 11px}`.withBehaviors(Pl, hl, Sl, Il), Dd = pt` :host(.accent){background: ${Wl.var};color: ${wl.var}}:host(.accent:hover){background: ${Ul.var}}:host(.accent:active) .control:active{background: ${Kl.var}}:host(.accent) .control:${Jo}{box-shadow: 0 0 0 calc(var(--focus-outline-width) * 1px) inset ${fd.var}}:host(.accent.disabled){background: ${Wl.var}}`.withBehaviors(Wl, wl, Ul, Kl, fd), Td = pt` :host(.hypertext){height: auto;font-size: inherit;line-height: inherit;background: transparent}:host(.hypertext) .control{display: inline;padding: 0;border: none;box-shadow: none;border-radius: 0;line-height: 1}:host a.control:not(:link){background-color: transparent;cursor: default}:host(.hypertext) .control:link, :host(.hypertext) .control:visited{background: transparent;color: ${yl.var};border-bottom: calc(var(--outline-width) * 1px) solid ${yl.var}}:host(.hypertext) .control:hover{border-bottom-color: ${xl.var}}:host(.hypertext) .control:active{border-bottom-color: ${$l.var}}:host(.hypertext) .control:${Jo}{border-bottom: calc(var(--focus-outline-width) * 1px) solid ${bd.var}}`.withBehaviors(yl, xl, $l, bd), Pd = pt` :host(.lightweight){background: transparent;color: ${yl.var}}:host(.lightweight) .control{padding: 0;height: initial;border: none;box-shadow: none;border-radius: 0}:host(.lightweight:hover){color: ${xl.var}}:host(.lightweight:active){color: ${$l.var}}:host(.lightweight) .content{position: relative}:host(.lightweight) .content::before{content: "";display: block;height: calc(var(--outline-width) * 1px);position: absolute;top: calc(1em + 3px);width: 100%}:host(.lightweight:hover) .content::before{background: ${xl.var}}:host(.lightweight:active) .content::before{background: ${$l.var}}:host(.lightweight) .control:${Jo} .content::before{background: ${hl.var};height: calc(var(--focus-outline-width) * 1px)}:host(.lightweight.disabled) .content::before{background: transparent}`.withBehaviors(yl, xl, $l, xl, hl), Sd = pt` :host(.outline){background: transparent;border-color: ${od.var}}:host(.outline:hover){border-color: ${rd.var}}:host(.outline:active){border-color: ${sd.var}}:host(.outline) .control{border-color: inherit}:host(.outline) .control:${Jo}{border: calc(var(--outline-width) * 1px) solid ${bd.var});box-shadow: 0 0 0 calc((var(--focus-outline-width) - var(--outline-width)) * 1px) ${bd.var}}:host(.outline.disabled){border-color: ${od.var}}`.withBehaviors(od, rd, sd, bd), Id = pt` :host(.stealth){background: ${Ol.var}}:host(.stealth:hover){background: ${Bl.var}}:host(.stealth:active){background: ${Ll.var}}:host(.stealth.disabled){background: ${Ol.var}}`.withBehaviors(Ol, Bl, Ll), Ad = pt` ${Zo("flex")} :host{box-sizing: border-box;flex-direction: column;font-family: var(--body-font);font-size: var(--type-ramp-minus-1-font-size);line-height: var(--type-ramp-minus-1-line-height);color: ${hl.var};border-top: calc(var(--outline-width) * 1px) solid ${ad.var}}`.withBehaviors(Wl, ad, hl), Ed = pt` ${Zo("flex")} :host{box-sizing: border-box;font-family: var(--body-font);flex-direction: column;font-size: var(--type-ramp-minus-1-font-size);line-height: var(--type-ramp-minus-1-line-height);border-bottom: calc(var(--outline-width) * 1px) solid ${ad.var}}.region{display: none;padding: calc((6 + (var(--design-unit) * 2 * var(--density))) * 1px)}.heading{display: grid;position: relative;grid-template-columns: auto 1fr auto calc(${Cd} * 1px);z-index: 2}.button{appearance: none;border: none;background: none;grid-column: 2;grid-row: 1;outline: none;padding: 0 calc((6 + (var(--design-unit) * 2 * var(--density))) * 1px);text-align: left;height: calc(${Cd} * 1px);color: ${hl.var};cursor: pointer;font-family: inherit}.button:hover{color: ${ul.var}}.button:active{color: ${pl.var}}.button::before{content: "";position: absolute;top: 0;left: 0;right: 0;bottom: 0;z-index: 1;cursor: pointer}.button:${Jo}::before{outline: none;border: calc(var(--outline-width) * 1px) solid ${bd.var};box-shadow: 0 0 0 calc((var(--focus-outline-width) - var(--outline-width)) * 1px) ${bd.var}}:host(.expanded) .region{display: flex}.icon{display: flex;align-items: center;justify-content: center;grid-column: 4;z-index: 2;pointer-events: none}slot[name="collapsed-icon"]{display: flex}:host(.expanded) slot[name="collapsed-icon"]{display: none}slot[name="expanded-icon"]{display: none}:host(.expanded) slot[name="expanded-icon"]{display: flex}.start{display: flex;align-items: center;justify-content: center;grid-column: 1;z-index: 2}.end{display: flex;align-items: center;justify-content: center;grid-column: 3;z-index: 2}`.withBehaviors(ad, pl, vl, hl, ul, bd, Xo(pt` .button:${Jo}::before{border-color: ${Rr.Highlight};box-shadow: 0 0 0 calc((var(--focus-outline-width) - var(--outline-width)) * 1px) ${Rr.Highlight}}`)); let Od = class extends zi { }; Od = t([Pt({ name: "fluent-accordion-item", template: Mi, styles: Ed })], Od); const Bd = Ed; let Ld = class extends Vi { }; Ld = t([Pt({ name: "fluent-accordion", template: Jt, styles: Ad, shadowOptions: { mode: "closed" } })], Ld); const Hd = Ad, Rd = pt` ${Fd} ${Dd} ${Td} ${Pd} ${Sd} ${Id}`.withBehaviors(Kl, Ul, Wl, $l, wl, xl, yl, Il, Al, Sl, Pl, Ll, Bl, Ol, bd, fd, hl, sd, rd, od); let Md = class extends qi { appearanceChanged(t, e) { t !== e && (this.classList.add(e), this.classList.remove(t)); } connectedCallback() { super.connectedCallback(), this.appearance || (this.appearance = "neutral"); } }; t([ft], Md.prototype, "appearance", void 0), Md = t([Pt({ name: "fluent-anchor", template: _i, styles: Rd, shadowOptions: { delegatesFocus: !0, mode: "closed" } })], Md); const Nd = Rd, zd = pt` ${Zo("inline-block")} :host{box-sizing: border-box;font-family: var(--body-font);font-size: var(--type-ramp-minus-1-font-size);line-height: var(--type-ramp-minus-1-height)}.control{border-radius: calc(var(--corner-radius) * 1px);padding: calc(var(--design-unit) * 0.5px) calc(var(--design-unit) * 1px)}:host(.lightweight) .control{background: transparent;color: ${hl.var};font-weight: 600}:host(.accent) .control{background: ${Wl.var};color: ${wl.var}}:host(.neutral) .control{background: ${Pl.var};color: ${hl.var}}`.withBehaviors(Wl, wl, Pl, hl); let jd = class extends Ki { constructor() { super(...arguments), this.appearance = "lightweight"; } appearanceChanged(t, e) { t !== e && d.queueUpdate(() => { this.classList.add(e), this.classList.remove(t); }); } }; t([ft({ mode: "fromView" })], jd.prototype, "appearance", void 0), jd = t([Pt({ name: "fluent-badge", template: Ui, styles: zd, shadowOptions: { mode: "closed" } })], jd); const Vd = zd, _d = pt` ${Fd} ${Dd} ${Pd} ${Sd} ${Id}`.withBehaviors(Kl, Ul, Wl, $l, wl, xl, yl, Il, Al, Sl, Pl, Ll, Bl, Ol, bd, fd, hl, sd, rd, od, Xo(pt` :host(.disabled), :host(.disabled) .control{forced-color-adjust: none;background: ${Rr.ButtonFace};border-color: ${Rr.GrayText};color: ${Rr.GrayText};cursor: ${"not-allowed"};opacity: 1}:host(.accent) .control{forced-color-adjust: none;background: ${Rr.Highlight};color: ${Rr.HighlightText}}:host(.accent) .control:hover{background: ${Rr.HighlightText};border-color: ${Rr.Highlight};color: ${Rr.Highlight}}:host(.accent:${Jo}) .control{border-color: ${Rr.ButtonText};box-shadow: 0 0 0 2px ${Rr.HighlightText} inset}:host(.accent.disabled) .control, :host(.accent.disabled) .control:hover{background: ${Rr.ButtonFace};border-color: ${Rr.GrayText};color: ${Rr.GrayText}}:host(.lightweight) .control:hover{forced-color-adjust: none;color: ${Rr.Highlight}}:host(.lightweight) .control:hover .content::before{background: ${Rr.Highlight}}:host(.lightweight.disabled) .control{forced-color-adjust: none;color: ${Rr.GrayText}}:host(.lightweight.disabled) .control:hover .content::before{background: none}:host(.outline.disabled) .control{border-color: ${Rr.GrayText}}:host(.stealth) .control{forced-color-adjust: none;background: none;border-color: transparent;color: ${Rr.ButtonText};fill: currentColor}:host(.stealth) .control:hover, :host(.stealth:${Jo}) .control{background: ${Rr.Highlight};border-color: ${Rr.Highlight};color: ${Rr.HighlightText}}:host(.stealth.disabled) .control{background: none;border-color: transparent;color: ${Rr.GrayText}}`)); let Gd = class extends Zi { appearanceChanged(t, e) { t !== e && (this.classList.add(e), this.classList.remove(t)); } connectedCallback() { super.connectedCallback(), this.appearance || (this.appearance = "neutral"); } }; t([ft], Gd.prototype, "appearance", void 0), Gd = t([Pt({ name: "fluent-button", template: Xi, styles: _d, shadowOptions: { delegatesFocus: !0, mode: "closed" } })], Gd); const qd = _d, Wd = pt` ${Zo("block")} :host{--elevation: 4;display: block;contain: content;height: var(--card-height, 100%);width: var(--card-width, 100%);box-sizing: border-box;background: var(--background-color);border-radius: calc(var(--elevated-corner-radius) * 1px);${wd}}`.withBehaviors(id, Xo(pt` :host{forced-color-adjust: none;background: ${Rr.Canvas};box-shadow: 0 0 0 1px ${Rr.CanvasText}}`)); let Ud = class extends ho { cardBackgroundColorChanged(t, e) { if (e) { const t = Is(this.cardBackgroundColor); null !== t && (this.neutralPalette = nl(t), this.backgroundColor = this.cardBackgroundColor); } else this.provider && this.provider.designSystem && this.handleChange(this.provider.designSystem, "backgroundColor"); } handleChange(t, e) { this.cardBackgroundColor || (this.backgroundColor = Ra(t)); } connectedCallback() { var t, e; super.connectedCallback(); const i = k.getNotifier(null === (t = this.provider) || void 0 === t ? void 0 : t.designSystem); i.subscribe(this, "backgroundColor"), i.subscribe(this, "neutralPalette"), this.handleChange(null === (e = this.provider) || void 0 === e ? void 0 : e.designSystem, "backgroundColor"); } }; t([vo({ attribute: "background-color", default: "#FFFFFF" })], Ud.prototype, "backgroundColor", void 0), t([ft({ attribute: "card-background-color" })], Ud.prototype, "cardBackgroundColor", void 0), t([vo({ attribute: !1, default: nl(Is("#FFFFFF")), cssCustomProperty: !1 })], Ud.prototype, "neutralPalette", void 0), Ud = t([po({ name: "fluent-card", template: to, styles: Wd, shadowOptions: { mode: "closed" } })], Ud); const Kd = Wd, Xd = pt` ${Zo("inline-flex")} :host{align-items: center;outline: none;margin: calc(var(--design-unit) * 1px) 0;${""} user-select: none}.control{position: relative;width: calc((${Cd} / 2 + var(--design-unit)) * 1px);height: calc((${Cd} / 2 + var(--design-unit)) * 1px);box-sizing: border-box;border-radius: calc(var(--corner-radius) * 1px);border: calc(var(--outline-width) * 1px) solid ${od.var};background: ${Vl.var};outline: none;cursor: pointer}.label__hidden{display: none;visibility: hidden}.label{font-family: var(--body-font);color: ${hl.var};${""} padding-inline-start: calc(var(--design-unit) * 2px + 2px);margin-inline-end: calc(var(--design-unit) * 2px + 2px);cursor: pointer;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height)}.checked-indicator{width: 100%;height: 100%;display: block;fill: ${hl.var};opacity: 0;pointer-events: none}.indeterminate-indicator{border-radius: calc(var(--corner-radius) * 1px);background: ${hl.var};position: absolute;top: 50%;left: 50%;width: 50%;height: 50%;transform: translate(-50%, -50%);opacity: 0}:host(:enabled) .control:hover{background: ${_l.var};border-color: ${rd.var}}:host(:enabled) .control:active{background: ${Gl.var};border-color: ${sd.var}}:host(:${Jo}) .control{box-shadow: 0 0 0 2px var(--background-color), 0 0 0 4px ${bd.var};border-color: ${bd.var}}:host(.disabled) .label, :host(.readonly) .label, :host(.readonly) .control, :host(.disabled) .control{cursor: ${"not-allowed"}}:host(.checked:not(.indeterminate)) .checked-indicator, :host(.indeterminate) .indeterminate-indicator{opacity: 1}:host(.disabled){opacity: var(--disabled-opacity)}`.withBehaviors(Gl, _l, Vl, bd, hl, sd, rd, od, Xo(pt` .control{forced-color-adjust: none;border-color: ${Rr.FieldText};background: ${Rr.Field}}:host(:enabled) .control:hover, .control:active{border-color: ${Rr.Highlight};background: ${Rr.Field}}.checked-indicator{fill: ${Rr.FieldText}}.indeterminate-indicator{background: ${Rr.FieldText}}:host(:${Jo}) .control{border-color: ${Rr.Highlight};box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.checked:${Jo}:enabled) .control{box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.checked) .control{background: ${Rr.Highlight};border-color: ${Rr.Highlight}}:host(.checked) .control:hover, .control:active{background: ${Rr.HighlightText}}:host(.checked) .checked-indicator{fill: ${Rr.HighlightText}}:host(.checked) .control:hover .checked-indicator{fill: ${Rr.Highlight}}:host(.checked) .indeterminate-indicator{background: ${Rr.HighlightText}}:host(.checked) .control:hover .indeterminate-indicator{background: ${Rr.Highlight}}:host(.disabled){opacity: 1}:host(.disabled) .control{forced-color-adjust: none;border-color: ${Rr.GrayText};background: ${Rr.Field}}:host(.disabled) .indeterminate-indicator, :host(.checked.disabled) .control:hover .indeterminate-indicator{forced-color-adjust: none;background: ${Rr.GrayText}}:host(.disabled) .checked-indicator, :host(.checked.disabled) .control:hover .checked-indicator{forced-color-adjust: none;fill: ${Rr.GrayText}}`)); let Qd = class extends oo { }; Qd = t([Pt({ name: "fluent-checkbox", template: io, styles: Xd, shadowOptions: { mode: "closed" } })], Qd); const Yd = Xd, Zd = pt` :host([hidden]){display: none}:host{--elevation: 14;--dialog-height: 480px;--dialog-width: 640px;display: block}.overlay{position: fixed;top: 0;left: 0;right: 0;bottom: 0;background: rgba(0, 0, 0, 0.3);touch-action: none}.positioning-region{display: flex;justify-content: center;position: fixed;top: 0;bottom: 0;left: 0;right: 0;overflow: auto}.control{${wd} margin-top: auto;margin-bottom: auto;border-radius: calc(var(--elevated-corner-radius));width: var(--dialog-width);height: var(--dialog-height);background: var(--background-color);z-index: 1;border: calc(var(--outline-width) * 1px) solid transparent}`; let Jd = class extends Po { }; Jd = t([Pt({ name: "fluent-dialog", template: bo, styles: Zd })], Jd); const tc = Zd, ec = pt` ${Zo("block")} :host{box-sizing: content-box;height: 0;margin: calc(var(--design-unit) * 1px) 0;border: none;border-top: calc(var(--outline-width) * 1px) solid ${ad.var}}`.withBehaviors(ad); let ic = class extends Eo { }; ic = t([Pt({ name: "fluent-divider", template: So, styles: ec, shadowOptions: { mode: "closed" } })], ic); const oc = ec, rc = pt` ${Zo("inline-flex")} :host{width: calc(${Cd} * 1px);height: calc(${Cd} * 1px);justify-content: center;align-items: center;margin: 0;position: relative;fill: ${hl.var};color: ${hl.var};background: transparent;border: none;outline: none;padding: 0}:host::before{content: "";opacity: 0.8;background: ${Ol.var};border: calc(var(--outline-width) * 1px) solid ${od.var};border-radius: 50%;position: absolute;top: 0;right: 0;left: 0;bottom: 0;transition: all 0.1s ease-in-out}.next, .previous{position: relative;${""} width: 16px;height: 16px}:host(.disabled){opacity: var(--disabled-opacity);cursor: ${"not-allowed"}}:host(:hover)::before{background: ${Bl.var};border-color: ${rd.var}}:host(:${Jo}){outline: none}:host(:${Jo})::before{box-shadow: 0 0 0 1px ${bd.var} inset;border-color: ${bd.var}}:host(:active)::before{background: ${Ll.var};border-color: ${sd.var}}:host::-moz-focus-inner{border: 0}`.withBehaviors(Ll, Bl, Ol, bd, hl, sd, rd, od, Xo(pt` :host{background: ${Rr.Canvas}}:host .next, :host .previous{color: ${Rr.ButtonText};fill: ${Rr.ButtonText}}:host::before{background: ${Rr.Canvas};border-color: ${Rr.ButtonText}}:host(:hover)::before{forced-color-adjust: none;background: ${Rr.Highlight};border-color: ${Rr.ButtonText};opacity: 1}:host(:hover) .next, :host(:hover) .previous{forced-color-adjust: none;color: ${Rr.HighlightText};fill: ${Rr.HighlightText}}:host(.disabled){opacity: 1}:host(.disabled)::before, :host(.disabled:hover)::before, :host(.disabled) .next, :host(.disabled) .previous, :host(.disabled:hover) .next, :host(.disabled:hover) .previous{forced-color-adjust: none;background: ${Rr.Canvas};border-color: ${Rr.GrayText};color: ${Rr.GrayText};fill: ${Rr.GrayText}}:host(:${Jo})::before{forced-color-adjust: none;border-color: ${Rr.Highlight};box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}`)); let sc = class extends Oo { }; sc = t([Pt({ name: "fluent-flipper", template: Bo, styles: rc, shadowOptions: { mode: "closed" } })], sc); const nc = rc, ac = pt` ${Zo("block")} :host{--elevation: 11;background: ${ld.var};border: calc(var(--outline-width) * 1px) solid transparent;border-radius: var(--elevated-corner-radius);${wd} margin: 0;border-radius: calc(var(--corner-radius) * 1px);padding: calc(var(--design-unit) * 1px) 0;max-width: 368px;min-width: 64px}::slotted(hr){box-sizing: content-box;height: 0;margin: 0;border: none;border-top: calc(var(--outline-width) * 1px) solid var(--neutral-divider-rest)}`.withBehaviors(ld, ad); let lc = class extends No { }; lc = t([Pt({ name: "fluent-menu", template: Lo, styles: ac, shadowOptions: { mode: "closed" } })], lc); const dc = ac, cc = pt` ${Zo("grid")} :host{outline: none;box-sizing: border-box;height: calc(${Cd} * 1px);grid-template-columns: 42px auto 42px;grid-template-rows: auto;justify-items: center;align-items: center;padding: 0;margin: 0 calc(var(--design-unit) * 1px);white-space: nowrap;overflow: hidden;color: ${hl.var};fill: ${hl.var};cursor: pointer;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);border-radius: calc(var(--corner-radius) * 1px);border: calc(var(--outline-width) * 1px) solid transparent}:host(:${Jo}){border: calc(var(--outline-width) * 1px) solid ${bd.var};box-shadow: 0 0 0 calc((var(--focus-outline-width) - var(--outline-width)) * 1px) ${bd.var}}:host(:hover){background: ${Bl.var}}:host(:active){background: ${Ll.var}}:host(.disabled){cursor: ${"not-allowed"};opacity: var(--disabled-opacity)}:host(.disabled:hover) .start, :host(.disabled:hover) .end, :host(.disabled:hover)::slotted(svg){fill: ${hl.var}}.content{grid-column-start: 2;justify-self: start;overflow: hidden;text-overflow: ellipsis}.start, .end, ::slotted(svg){${""} width: 16px;height: 16px}:host(:hover) .start, :host(:hover) .end, :host(:hover)::slotted(svg), :host(:active) .start, :host(:active) .end, :host(:active)::slotted(svg){fill: ${hl.var}}`.withBehaviors(Ll, Bl, Ol, bd, hl, Xo(pt` :host{border-color: transparent;color: ${Rr.ButtonText};fill: ${Rr.ButtonText}}:host(:hover){background: ${Rr.Highlight};color: ${Rr.HighlightText}}:host(:hover) .start, :host(:hover) .end, :host(:hover)::slotted(svg), :host(:active) .start, :host(:active) .end, :host(:active)::slotted(svg){fill: ${Rr.HighlightText}}:host(:${Jo}){background: ${Rr.Highlight};border-color: ${Rr.ButtonText};box-shadow: 0 0 0 calc(var(--focus-outline-width) * 1px) inset ${Rr.HighlightText};color: ${Rr.HighlightText};fill: ${Rr.HighlightText}}:host(.disabled), :host(.disabled:hover), :host(.disabled:hover) .start, :host(.disabled:hover) .end, :host(.disabled:hover)::slotted(svg){background: ${Rr.Canvas};color: ${Rr.GrayText};fill: ${Rr.GrayText};opacity: 1}`)); let hc = class extends Ro { }; hc = t([Pt({ name: "fluent-menu-item", template: Mo, styles: cc, shadowOptions: { mode: "closed" } })], hc); const uc = cc, pc = pt` ${Zo("flex")} :host{align-items: center;outline: none;height: calc(var(--design-unit) * 1px);margin: calc(var(--design-unit) * 1px) 0}.progress{background-color: ${Pl.var};border-radius: calc(var(--design-unit) * 1px);width: 100%;height: 100%;display: flex;align-items: center;position: relative}.determinate{background-color: ${yl.var};border-radius: calc(var(--design-unit) * 1px);height: 100%;transition: all 0.2s ease-in-out;display: flex}.indeterminate{height: 100%;border-radius: calc(var(--design-unit) * 1px);display: flex;width: 100%;position: relative;overflow: hidden}.indeterminate-indicator-1{position: absolute;opacity: 0;height: 100%;background-color: ${yl.var};border-radius: calc(var(--design-unit) * 1px);animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);width: 40%;animation: indeterminate-1 2s infinite}.indeterminate-indicator-2{position: absolute;opacity: 0;height: 100%;background-color: ${yl.var};border-radius: calc(var(--design-unit) * 1px);animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);width: 60%;animation: indeterminate-2 2s infinite}:host(.paused) .indeterminate-indicator-1, :host(.paused) .indeterminate-indicator-2{animation-play-state: paused;background-color: ${Pl.var}}:host(.paused) .determinate{background-color: ${fl.var}}@keyframes indeterminate-1{0%{opacity: 1;transform: translateX(-100%)}70%{opacity: 1;transform: translateX(300%)}70.01%{opacity: 0}100%{opacity: 0;transform: translateX(300%)}}@keyframes indeterminate-2{0%{opacity: 0;transform: translateX(-150%)}29.99%{opacity: 0}30%{opacity: 1;transform: translateX(-150%)}100%{transform: translateX(166.66%);opacity: 1}}`.withBehaviors(yl, Pl, fl, Xo(pt` .indeterminate-indicator-1, .indeterminate-indicator-2, .determinate{forced-color-adjust: none;background-color: ${Rr.FieldText}}.progress{background-color: ${Rr.Field};border: calc(var(--outline-width) * 1px) solid ${Rr.FieldText}}:host(.paused) .indeterminate-indicator-1, .indeterminate-indicator-2{background-color: ${Rr.Field}}:host(.paused) .determinate{background-color: ${Rr.GrayText}}`)); let vc = class extends zo { }; vc = t([Pt({ name: "fluent-progress", template: jo, styles: pc, shadowOptions: { mode: "closed" } })], vc); const gc = pc, bc = pt` ${Zo("flex")} :host{align-items: center;outline: none;height: calc(${Cd} * 1px);width: calc(${Cd} * 1px);margin: calc(${Cd} * 1px) 0}.progress{height: 100%;width: 100%}.background{stroke: ${Pl.var};fill: none;stroke-width: 2px}.determinate{stroke: ${yl.var};fill: none;stroke-width: 2px;stroke-linecap: round;transform-origin: 50% 50%;transform: rotate(-90deg);transition: all 0.2s ease-in-out}.indeterminate-indicator-1{stroke: ${yl.var};fill: none;stroke-width: 2px;stroke-linecap: round;transform-origin: 50% 50%;transform: rotate(-90deg);transition: all 0.2s ease-in-out;animation: spin-infinite 2s linear infinite}:host(.paused) .indeterminate-indicator-1{animation-play-state: paused;stroke: ${Pl.var}}:host(.paused) .determinate{stroke: ${fl.var}}@keyframes spin-infinite{0%{stroke-dasharray: 0.01px 43.97px;transform: rotate(0deg)}50%{stroke-dasharray: 21.99px 21.99px;transform: rotate(450deg)}100%{stroke-dasharray: 0.01px 43.97px;transform: rotate(1080deg)}}`.withBehaviors(yl, Pl, fl, Xo(pt` .indeterminate-indicator-1, .determinate{stroke: ${Rr.FieldText}}.background{stroke: ${Rr.Field}}:host(.paused) .indeterminate-indicator-1{stroke: ${Rr.Field}}:host(.paused) .determinate{stroke: ${Rr.GrayText}}`)); let fc = class extends zo { }; fc = t([Pt({ name: "fluent-progress-ring", template: Vo, styles: bc, shadowOptions: { mode: "closed" } })], fc); const mc = bc, yc = pt` ${Zo("inline-flex")} :host{--input-size: calc((${Cd} / 2) + var(--design-unit));align-items: center;outline: none;margin: calc(var(--design-unit) * 1px) 0;${""} user-select: none;position: relative;flex-direction: row;transition: all 0.2s ease-in-out}.control{position: relative;width: calc(var(--input-size) * 1px);height: calc(var(--input-size) * 1px);box-sizing: border-box;border-radius: 50%;border: calc(var(--outline-width) * 1px) solid ${od.var};background: ${Vl.var};outline: none;cursor: pointer}.label__hidden{display: none;visibility: hidden}.label{font-family: var(--body-font);color: ${hl.var};${""} padding-inline-start: calc(var(--design-unit) * 2px + 2px);margin-inline-end: calc(var(--design-unit) * 2px + 2px);cursor: pointer;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height)}.control, .checked-indicator{flex-shrink: 0}.checked-indicator{position: absolute;top: 5px;left: 5px;right: 5px;bottom: 5px;border-radius: 50%;display: inline-block;background: ${hl.var};fill: ${hl.var};opacity: 0;pointer-events: none}:host(:enabled) .control:hover{background: ${_l.var};border-color: ${rd.var}}:host(:enabled) .control:active{background: ${Gl.var};border-color: ${sd.var}}:host(:${Jo}) .control{box-shadow: 0 0 0 2px var(--background-color), 0 0 0 4px ${bd.var};border-color: ${bd.var}}:host(.disabled) .label, :host(.readonly) .label, :host(.readonly) .control, :host(.disabled) .control{cursor: ${"not-allowed"}}:host(.checked) .checked-indicator{opacity: 1}:host(.disabled){opacity: var(--disabled-opacity)}`.withBehaviors(Il, _l, Vl, bd, hl, sd, rd, od, Gl, Xo(pt` .control{forced-color-adjust: none;border-color: ${Rr.FieldText};background: ${Rr.Field}}:host(:enabled) .control:hover, .control:active{border-color: ${Rr.Highlight};background: ${Rr.Field}}:host(:${Jo}) .control{border-color: ${Rr.Highlight};box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.checked:${Jo}:enabled) .control{border-color: ${Rr.Highlight};box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.checked:enabled) .control:hover, .control:active{border-color: ${Rr.Highlight};background: ${Rr.Highlight}}:host(.checked) .checked-indicator{background: ${Rr.Highlight};fill: ${Rr.Highlight}}:host(.checked) .control:hover .checked-indicator{background: ${Rr.HighlightText};fill: ${Rr.HighlightText}}:host(.disabled){forced-color-adjust: none;opacity: 1}:host(.disabled) .label{color: ${Rr.GrayText}}:host(.disabled) .control, :host(.checked.disabled) .control:hover, .control:active{background: ${Rr.Field};border-color: ${Rr.GrayText}}:host(.disabled) .checked-indicator, :host(.checked.disabled) .control:hover .checked-indicator{fill: ${Rr.GrayText};background: ${Rr.GrayText}}`)); let xc = class extends Go { }; xc = t([Pt({ name: "fluent-radio", template: _o, styles: yc, shadowOptions: { mode: "closed" } })], xc); const $c = yc, kc = pt` ${Zo("flex")} :host{align-items: flex-start;margin: calc(var(--design-unit) * 1px) 0;flex-direction: column}.positioning-region{display: flex;flex-wrap: wrap}`; let wc = class extends or { }; wc = t([Pt({ name: "fluent-radio-group", template: qo, styles: kc, shadowOptions: { mode: "closed" } })], wc); const Cc = kc, Fc = pt` ${Zo("block")} :host{--skeleton-fill-default: #e1dfdd;overflow: hidden;width: 100%;position: relative;background-color: var(--skeleton-fill, var(--skeleton-fill-default));--skeleton-animation-gradient-default: linear-gradient( 270deg, var(--skeleton-fill, var(--skeleton-fill-default)) 0%, #f3f2f1 51.13%, var(--skeleton-fill, var(--skeleton-fill-default)) 100% );--skeleton-animation-timing-default: ease-in-out}:host(.rect){border-radius: calc(var(--corner-radius) * 1px)}:host(.circle){border-radius: 100%;overflow: hidden}object{position: absolute;width: 100%;height: auto;z-index: 2}object img{width: 100%;height: auto}${Zo("block")} span.shimmer{position: absolute;width: 100%;height: 100%;background-image: var(--skeleton-animation-gradient, var(--skeleton-animation-gradient-default));background-size: 0px 0px / 90% 100%;background-repeat: no-repeat;background-color: var(--skeleton-animation-fill, ${Pl.var});animation: shimmer 2s infinite;animation-timing-function: var(--skeleton-animation-timing, var(--skeleton-timing-default));animation-direction: normal;z-index: 1}::slotted(svg){z-index: 2}::slotted(.pattern){width: 100%;height: 100%}@keyframes shimmer{0%{transform: translateX(-100%)}100%{transform: translateX(100%)}}`.withBehaviors(Pl); let Dc = class extends sr { }; Dc = t([Pt({ name: "fluent-skeleton", template: rr, styles: Fc })], Dc); const Tc = Fc, Pc = pt` ${Zo("inline-grid")} :host{--thumb-size: calc(${Cd} * 0.5);--thumb-translate: calc(var(--thumb-size) * 0.5);--track-overhang: calc((var(--design-unit) / 2) * -1);--track-width: var(--design-unit);align-items: center;width: 100%;margin: calc(var(--design-unit) * 1px) 0;user-select: none;box-sizing: border-box;border-radius: calc(var(--corner-radius) * 1px);outline: none;cursor: pointer}:host(.horizontal) .positioning-region{position: relative;margin: 0 8px;display: grid;grid-template-rows: calc(var(--thumb-size) * 1px) 1fr}:host(.vertical) .positioning-region{position: relative;margin: 0 8px;display: grid;height: 100%;grid-template-columns: calc(var(--thumb-size) * 1px) 1fr}:host(:${Jo}) .thumb-cursor{box-shadow: 0 0 0 2px var(--background-color), 0 0 0 4px ${bd.var}}.thumb-container{position: absolute;height: calc(var(--thumb-size) * 1px);width: calc(var(--thumb-size) * 1px);transition: all 0.2s ease}.thumb-cursor{border: none;width: calc(var(--thumb-size) * 1px);height: calc(var(--thumb-size) * 1px);background: ${hl.var};border-radius: 50%}.thumb-cursor:hover{background: ${ul.var};border-color: ${rd.var}}.thumb-cursor:active{background: ${pl.var}}:host(.horizontal) .thumb-container{transform: translateX(calc(var(--thumb-translate) * 1px))}:host(.vertical) .thumb-container{transform: translateY(calc(var(--thumb-translate) * 1px))}:host(.horizontal){min-width: calc(var(--thumb-size) * 1px)}:host(.horizontal) .track{right: calc(var(--track-overhang) * 1px);left: calc(var(--track-overhang) * 1px);align-self: start;margin-top: calc((var(--design-unit) + calc(var(--density) + 2)) * 1px);height: calc(var(--track-width) * 1px)}:host(.vertical) .track{top: calc(var(--track-overhang) * 1px);bottom: calc(var(--track-overhang) * 1px);margin-left: calc((var(--design-unit) + calc(var(--density) + 2)) * 1px);width: calc(var(--track-width) * 1px);height: 100%}.track{background: ${od.var};position: absolute}:host(.vertical){height: 100%;min-height: calc(var(--design-unit) * 60px);min-width: calc(var(--design-unit) * 20px)}:host(.disabled) .label, :host(.readonly) .label, :host(.readonly) .slider, :host(.disabled) .slider{cursor: ${"not-allowed"}}:host(.disabled){opacity: var(--disabled-opacity)}`.withBehaviors(bd, pl, ul, hl, rd, od, Xo(pt` .thumb-cursor{forced-color-adjust: none;border-color: ${Rr.FieldText};background: ${Rr.FieldText}}.thumb-cursor:hover, .thumb-cursor:active{background: ${Rr.Highlight}}.track{forced-color-adjust: none;background: ${Rr.FieldText}}:host(:${Jo}) .thumb-cursor{background: ${Rr.Highlight};border-color: ${Rr.Highlight};box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.disabled){opacity: 1;cursor: ${"not-allowed"}}:host(.disabled) .slider, :host(.disabled) .track, :host(.disabled) .thumb-cursor{forced-color-adjust: none;background: ${Rr.GrayText}}`)); let Sc = class extends dr { }; Sc = t([Pt({ name: "fluent-slider", template: nr, styles: Pc, shadowOptions: { mode: "closed" } })], Sc); const Ic = Pc, Ac = pt` ${Zo("block")} :host{}.root{position: absolute;display: grid}:host(.horizontal){align-self: start;grid-row: 2;margin-top: -2px}:host(.vertical){justify-self: start;grid-column: 2;margin-left: 2px}.container{display: grid;justify-self: center}:host(.horizontal) .container{grid-template-rows: auto auto;grid-template-columns: 0}:host(.vertical) .container{grid-template-columns: auto auto;grid-template-rows: 0;min-width: calc(var(--thumb-size) * 1px);height: calc(var(--thumb-size) * 1px)}.label{justify-self: center;align-self: center;white-space: nowrap;max-width: 30px;margin: 2px 0}.mark{width: calc((var(--design-unit) / 2) * 1px);height: calc(${Cd} * 0.25 * 1px);background: ${od.var};justify-self: center}:host(.vertical) .mark{transform: rotate(90deg);align-self: center}:host(.vertical) .label{margin-left: calc((var(--design-unit) / 2) * 2px);align-self: center}:host(.disabled){opacity: var(--disabled-opacity)}`.withBehaviors(od, Xo(pt` .mark{forced-color-adjust: none;background: ${Rr.FieldText}}:host(.disabled){forced-color-adjust: none;opacity: 1}:host(.disabled) .label{color: ${Rr.GrayText}}:host(.disabled) .mark{background: ${Rr.GrayText}}`)); let Ec = class extends ur { }; Ec = t([Pt({ name: "fluent-slider-label", template: cr, styles: Ac, shadowOptions: { mode: "closed" } })], Ec); const Oc = Ac, Bc = pt` :host([hidden]){display: none}${Zo("inline-flex")} :host{align-items: center;outline: none;font-family: var(--body-font);margin: calc(var(--design-unit) * 1px) 0;${""} user-select: none}:host(.disabled){opacity: var(--disabled-opacity)}:host(.disabled) .label, :host(.readonly) .label, :host(.readonly) .switch, :host(.disabled) .switch{cursor: ${"not-allowed"}}.switch{position: relative;outline: none;box-sizing: border-box;width: calc(((${Cd} / 2) + var(--design-unit)) * 2px);height: calc(((${Cd} / 2) + var(--design-unit)) * 1px);background: ${Vl.var};border-radius: calc(${Cd} * 1px);border: calc(var(--outline-width) * 1px) solid ${od.var}}:host(:enabled) .switch:hover{background: ${_l.var};border-color: ${rd.var};cursor: pointer}:host(:enabled) .switch:active{background: ${Gl.var};border-color: ${sd.var}}:host(:${Jo}) .switch{box-shadow: 0 0 0 2px var(--background-color), 0 0 0 4px ${bd.var};border-color: ${bd.var}}.checked-indicator{position: absolute;height: calc((${Cd} - (var(--design-unit) * 5.5)) * 1px);width: calc((${Cd} - (var(--design-unit) * 5.5)) * 1px);top: calc(var(--design-unit) * 1px);left: calc(var(--design-unit) * 1px);background: ${hl.var};border-radius: 50%;transition: all 0.2s ease-in-out}.status-message{color: ${hl.var};cursor: pointer;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height)}.label__hidden{display: none;visibility: hidden}.label{color: ${hl.var};font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height)}::slotted(*){${""} margin-inline-start: calc(var(--design-unit) * 2px + 2px)}:host(.checked) .checked-indicator{left: calc((((${Cd} / 2) + var(--design-unit)) + var(--design-unit)) * 1px);background: ${wl.var}}:host(.checked) .switch{background: ${Wl.var}}:host(.checked:enabled) .switch:hover{background: ${Ul.var}}:host(.checked:enabled) .switch:active{background: ${Kl.var}}:host(.checked:${Jo}:enabled) .switch{box-shadow: 0 0 0 2px var(--background-color), 0 0 0 4px ${bd.var};border-color: transparent}.unchecked-message{display: block}.checked-message{display: none}:host(.checked) .unchecked-message{display: none}:host(.checked) .checked-message{display: block}`.withBehaviors(Kl, Ul, Wl, wl, Gl, _l, Vl, bd, hl, sd, rd, od, Xo(pt` .checked-indicator, :host(:enabled) .switch:active .checked-indicator{forced-color-adjust: none;background: ${Rr.FieldText}}.switch{forced-color-adjust: none;background: ${Rr.Field};border-color: ${Rr.FieldText}}:host(:enabled) .switch:hover{background: ${Rr.HighlightText};border-color: ${Rr.Highlight}}:host(.checked) .switch{background: ${Rr.Highlight};border-color: ${Rr.Highlight}}:host(.checked:enabled) .switch:hover, :host(:enabled) .switch:active{background: ${Rr.HighlightText};border-color: ${Rr.Highlight}}:host(.checked) .checked-indicator{background: ${Rr.HighlightText}}:host(.checked:enabled) .switch:hover .checked-indicator{background: ${Rr.Highlight}}:host(:${Jo}) .switch{border-color: ${Rr.Highlight};box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.checked:${Jo}:enabled) .switch{box-shadow: 0 0 0 2px ${Rr.Field}, 0 0 0 4px ${Rr.FieldText}}:host(.disabled){opacity: 1}:host(.disabled) .checked-indicator{background: ${Rr.GrayText}}:host(.disabled) .switch{background: ${Rr.Field};border-color: ${Rr.GrayText}}`)); let Lc = class extends vr { }; Lc = t([Pt({ name: "fluent-switch", template: pr, styles: Bc, shadowOptions: { mode: "closed" } })], Lc); const Hc = Bc, Rc = pt` ${Zo("grid")} :host{box-sizing: border-box;font-family: var(--body-font);font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);color: ${hl.var};grid-template-columns: auto 1fr auto;grid-template-rows: auto 1fr}.tablist{display: grid;grid-template-rows: auto auto;grid-template-columns: auto;position: relative;width: max-content;align-self: end}.start, .end{align-self: center}.activeIndicator{grid-row: 2;grid-column: 1;width: 20px;height: 3px;border-radius: calc(var(--corner-radius) * 1px);justify-self: center;background: ${Wl.var}}.activeIndicatorTransition{transition: transform 0.2s ease-in-out}.tabpanel{grid-row: 2;grid-column-start: 1;grid-column-end: 4;position: relative}:host(.vertical){grid-template-rows: auto 1fr auto;grid-template-columns: auto 1fr}:host(.vertical) .tablist{grid-row-start: 2;grid-row-end: 2;display: grid;grid-template-rows: auto;grid-template-columns: auto 1fr;position: relative;width: max-content;justify-self: end;width: 100%}:host(.vertical) .tabpanel{grid-column: 2;grid-row-start: 1;grid-row-end: 4}:host(.vertical) .end{grid-row: 3}:host(.vertical) .activeIndicator{grid-column: 1;grid-row: 1;width: 3px;height: 20px;border-radius: calc(var(--corner-radius) * 1px);align-self: center;background: ${Wl.var}}:host(.vertical) .activeIndicatorTransition{transition: transform 0.2s linear}`.withBehaviors(Wl, hl, Xo(pt` .activeIndicator, :host(.vertical) .activeIndicator{forced-color-adjust: none;background: ${Rr.Highlight}}`)), Mc = pt` ${Zo("inline-flex")} :host{box-sizing: border-box;font-family: var(--body-font);${""} font-size: 12px;font-weight: 400;line-height: 18px;height: calc(${Cd} * 1px);padding: 0 calc((6 + (var(--design-unit) * 2 * var(--density))) * 1px);color: ${hl.var};border-radius: calc(var(--corner-radius) * 1px);border: calc(var(--outline-width) * 1px) solid transparent;align-items: center;justify-content: center;grid-row: 1;cursor: pointer}:host([aria-selected="true"]){z-index: 2}:host(:hover){color: ${ul.var}}:host(:active){color: ${pl.var}}:host(:${Jo}){outline: none;border: calc(var(--outline-width) * 1px) solid ${bd.var};box-shadow: 0 0 0 calc((var(--focus-outline-width) - var(--outline-width)) * 1px) ${bd.var}}:host(:focus){outline: none}:host(.vertical){justify-content: end;grid-column: 2}:host(.vertical[aria-selected="true"]){z-index: 2}:host(.vertical:hover){color: ${ul.var}}:host(.vertical:active){color: ${pl.var}}:host(.vertical:hover[aria-selected="true"]){}`.withBehaviors(bd, hl, ul, pl, Xo(pt` :host{forced-color-adjust: none;border-color: transparent;color: ${Rr.ButtonText};fill: ${Rr.ButtonText}}:host(:hover), :host(.vertical:hover), :host([aria-selected="true"]:hover){background: ${Rr.Highlight};color: ${Rr.HighlightText};fill: ${Rr.HighlightText}}:host([aria-selected="true"]){background: ${Rr.HighlightText};color: ${Rr.Highlight};fill: ${Rr.Highlight}}:host(:${Jo}){border-color: ${Rr.ButtonText};box-shadow: none}`)); let Nc = class extends br { }; Nc = t([Pt({ name: "fluent-tab", template: gr, styles: Mc, shadowOptions: { mode: "closed" } })], Nc); const zc = Mc, jc = pt` ${Zo("flex")} :host{box-sizing: border-box;font-family: var(--body-font);${""} font-size: 12px;font-weight: 400;line-height: 18px;padding: 0 calc((6 + (var(--design-unit) * 2 * var(--density))) * 1px)}`; let Vc = class extends mr { }; Vc = t([Pt({ name: "fluent-tab-panel", template: fr, styles: jc, shadowOptions: { mode: "closed" } })], Vc); const _c = jc; let Gc = class extends $r { }; Gc = t([Pt({ name: "fluent-tabs", template: yr, styles: Rc, shadowOptions: { mode: "closed" } })], Gc); const qc = Rc, Wc = pt` ${Zo("inline-block")} :host{font-family: var(--body-font);outline: none;user-select: none}.control{box-sizing: border-box;position: relative;color: ${hl.var};background: ${Vl.var};border-radius: calc(var(--corner-radius) * 1px);border: calc(var(--outline-width) * 1px) solid ${od.var};height: calc(${Cd} * 2px);font: inherit;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);padding: calc(var(--design-unit) * 1.5px) calc(var(--design-unit) * 2px + 1px);width: 100%;resize: none}.control:hover:enabled{background: ${_l.var};border-color: ${rd.var}}.control:hover, .control:${Jo}, .control:disabled, .control:active{outline: none}:host(:focus-within) .control{border-color: ${bd.var};box-shadow: 0 0 0 1px ${bd.var} inset}:host(.filled) .control{background: ${Pl.var};border-color: transparent}:host(.filled:hover:not([disabled])) .control{background: ${Sl.var};border-color: transparent}:host(.resize-both) .control{resize: both}:host(.resize-horizontal) .control{resize: horizontal}:host(.resize-vertical) .control{resize: vertical}.label__hidden{display: none;visibility: hidden}.label{display: block;color: ${hl.var};cursor: pointer;$font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);margin-bottom: 4px}:host([disabled]) .label, :host([readonly]) .label, :host([readonly]) .control, :host([disabled]) .control{cursor: ${"not-allowed"}}:host([disabled]){opacity: var(--disabled-opacity)}`.withBehaviors(Sl, _l, Vl, Pl, bd, hl, rd, od, Xo(pt` :host([disabled]){opacity: 1}`)); let Uc = class extends Tr { appearanceChanged(t, e) { t !== e && (this.classList.add(e), this.classList.remove(t)); } connectedCallback() { super.connectedCallback(), this.appearance || (this.appearance = "outline"); } }; t([ft], Uc.prototype, "appearance", void 0), Uc = t([Pt({ name: "fluent-text-area", template: Pr, styles: Wc, shadowOptions: { mode: "closed" } })], Uc); const Kc = Wc, Xc = pt` ${Zo("inline-block")} :host{font-family: var(--body-font);outline: none;user-select: none}.root{box-sizing: border-box;position: relative;display: flex;flex-direction: row;color: ${hl.var};background: ${Vl.var};border-radius: calc(var(--corner-radius) * 1px);border: calc(var(--outline-width) * 1px) solid ${od.var};height: calc(${Cd} * 1px)}.control{-webkit-appearance: none;background: transparent;border: 0;height: calc(100% - 4px);width: 100%;margin-top: auto;margin-bottom: auto;border: none;padding: 0 calc(var(--design-unit) * 2px + 1px);color: ${hl.var};font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height)}.control:hover, .control:${Jo}, .control:disabled, .control:active{outline: none}.label__hidden{display: none;visibility: hidden}.label{display: block;color: ${hl.var};cursor: pointer;font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);margin-bottom: 4px}.start, .end{${""} width: 16px;height: 16px;margin: auto;fill: ${hl.var}}.start{margin-inline-start: 11px}.end{margin-inline-end: 11px}:host(:hover:not(.disabled)) .root{background: ${_l.var};border-color: ${rd.var}}:host(:focus-within:not(.disabled)) .root{border-color: ${bd.var};box-shadow: 0 0 0 1px ${bd.var} inset}:host(.filled) .root{background: ${Pl.var};border-color: transparent}:host(.filled:hover:not(.disabled)) .root{background: ${Sl.var};border-color: transparent}:host(.disabled) .label, :host(.readonly) .label, :host(.readonly) .control, :host(.disabled) .control{cursor: ${"not-allowed"}}:host(.disabled){opacity: var(--disabled-opacity)}`.withBehaviors(Sl, _l, Vl, Pl, bd, hl, rd, od, Xo(pt` .root, :host(.filled) .root{forced-color-adjust: none;background: ${Rr.Field};border-color: ${Rr.FieldText}}:host(:hover:not(.disabled)) .root, :host(.filled:hover:not(.disabled)) .root, :host(.filled:hover) .root{background: ${Rr.Field};border-color: ${Rr.Highlight}}.start, .end{fill: ${Rr.ButtonText}}:host(.disabled){opacity: 1}:host(.disabled) .root, :host(.filled:hover.disabled) .root{border-color: ${Rr.GrayText};background: ${Rr.Field}}:host(:focus-within:enabled) .root{border-color: ${Rr.Highlight};box-shadow: 0 0 0 1px ${Rr.Highlight} inset}.control{color: ${Rr.ButtonText}}`)); let Qc = class extends Fr { appearanceChanged(t, e) { t !== e && (this.classList.add(e), this.classList.remove(t)); } connectedCallback() { super.connectedCallback(), this.appearance || (this.appearance = "outline"); } }; t([ft], Qc.prototype, "appearance", void 0), Qc = t([Pt({ name: "fluent-text-field", template: kr, styles: Xc, shadowOptions: { delegatesFocus: !0, mode: "closed" } })], Qc); const Yc = Xc, Zc = pt` ${Zo("block")} :host{contain: content;position: relative;outline: none;color: ${hl.var};background: ${Ol.var};cursor: pointer;font-family: var(--body-font);--expand-collapse-button-size: calc(${Cd} * 1px);--tree-item-nested-width: 0}:host(:focus) > .positioning-region{outline: none}:host(:focus) .content-region{outline: none}:host(:${Jo}) .positioning-region{border: ${bd.var} 1px solid;border-radius: calc(var(--corner-radius) * 1px);color: ${pl.var}}.positioning-region{display: flex;position: relative;box-sizing: border-box;border: transparent 1px solid;height: calc(${Cd} * 1px)}.positioning-region::before{content: "";display: block;width: var(--tree-item-nested-width);flex-shrink: 0}.positioning-region:hover{background: ${Bl.var}}.positioning-region:active{background: ${Ll.var}}.content-region{display: flex;align-items: center;white-space: nowrap;width: 100%;height: calc(${Cd} * 1px);margin-inline-start: calc(var(--design-unit) * 2px + 2px);font-size: var(--type-ramp-base-font-size);line-height: var(--type-ramp-base-line-height);font-weight: 400}.items{display: none;${""} font-size: calc(1em + (var(--design-unit) + 16) * 1px)}.expand-collapse-button{background: none;border: none;outline: none;${""} width: var(--expand-collapse-button-size);height: var(--expand-collapse-button-size);padding: 0;display: flex;justify-content: center;align-items: center;cursor: pointer}.expand-collapse-glyph{${""} width: 16px;height: 16px;transition: transform 0.1s linear;${""} transform: rotate(-45deg);pointer-events: none;fill: ${hl.var}}.start, .end{${""} width: 16px;height: 16px;fill: ${hl.var}}.start{${""} margin-inline-end: calc(var(--design-unit) * 2px + 2px)}.end{${""} margin-inline-start: calc(var(--design-unit) * 2px + 2px)}:host(.expanded) > .positioning-region .expand-collapse-glyph{${""} transform: rotate(0deg)}:host(.expanded) > .items{display: block}:host([disabled]) .content-region{opacity: var(--disabled-opacity);cursor: ${"not-allowed"}}:host([selected]) .positioning-region{background: ${Rl.var}}:host([selected])::after{content: "";display: block;position: absolute;top: calc((${Cd} / 4) * 1px);width: 3px;height: calc((${Cd} / 2) * 1px);${""} background: ${yl.var};${""} left: calc(var(--focus-outline-width) * 1px);border-radius: calc(var(--corner-radius) * 1px)}:host(.nested) .content-region{position: relative;margin-inline-start: var(--expand-collapse-button-size)}:host(.nested) .expand-collapse-button{position: absolute;${""} left: var(--expand-collapse-button-nested-width, calc(${Cd} * -1px))}::slotted(fluent-tree-item){--tree-item-nested-width: 1em;--expand-collapse-button-nested-width: calc(${Cd} * -1px)}`.withBehaviors(yl, Rl, Ll, Bl, Ol, bd, fd, pl, hl, Xo(pt` :host{forced-color-adjust: none;border-color: transparent;background: ${Rr.Field}}:host .content-region{color: ${Rr.FieldText}}:host .content-region .expand-collapse-glyph, :host .content-region .start, :host .content-region .end{fill: ${Rr.FieldText}}:host .positioning-region:hover, :host([selected]) .positioning-region{background: ${Rr.Highlight}}:host .positioning-region:hover .content-region, :host([selected]) .positioning-region .content-region{color: ${Rr.HighlightText}}:host .positioning-region:hover .content-region .expand-collapse-glyph, :host .positioning-region:hover .content-region .start, :host .positioning-region:hover .content-region .end, :host([selected]) .content-region .expand-collapse-glyph, :host([selected]) .content-region .start, :host([selected]) .content-region .end{fill: ${Rr.HighlightText}}:host([selected])::after{background: ${Rr.Field}}:host(:${Jo}) .positioning-region{border-color: ${Rr.FieldText};box-shadow: 0 0 0 2px inset ${Rr.Field}}:host([disabled]) .content-region, :host([disabled]) .positioning-region:hover .content-region{opacity: 1;color: ${Rr.GrayText}}:host([disabled]) .content-region .expand-collapse-glyph, :host([disabled]) .content-region .start, :host([disabled]) .content-region .end, :host([disabled]) .positioning-region:hover .content-region .expand-collapse-glyph, :host([disabled]) .positioning-region:hover .content-region .start, :host([disabled]) .positioning-region:hover .content-region .end{fill: ${Rr.GrayText}}:host([disabled]) .positioning-region:hover{background: ${Rr.Field}}`)); let Jc = class extends Ar { }; Jc = t([Pt({ name: "fluent-tree-item", template: Sr, styles: Zc, shadowOptions: { mode: "closed" } })], Jc); const th = Zc, eh = pt` :host([hidden]){display: none}${Zo("flex")} :host{flex-direction: column;align-items: stretch;min-width: fit-content;font-size: 0}:host:focus-visible{outline: none}`; let ih = class extends Or { }; ih = t([Pt({ name: "fluent-tree-view", template: Er, styles: eh, shadowOptions: { mode: "closed" } })], ih); const oh = eh, rh = new Map; function sh(t) { const e = rh.get(t); if (!e) { let e = Is(t); if (null === e && (e = As(t)), null === e) throw new Error(t + ' cannot be converted to a ColorRGBA64. Color strings must be one of the following formats: "#RGB", "#RRGGBB", or "rgb(r, g, b)"'); return rh.set(t, e), e; } return e; } export { e as $global, Gi as ARIAGlobalStatesAndProperties, Dd as AccentButtonStyles, Vi as Accordion, ji as AccordionExpandMode, zi as AccordionItem, Bd as AccordionItemStyles, Mi as AccordionItemTemplate, Hd as AccordionStyles, Jt as AccordionTemplate, qi as Anchor, Nd as AnchorStyles, _i as AnchorTemplate, B as AttachedBehaviorDirective, bt as AttributeDefinition, Ki as Badge, Vd as BadgeStyles, Ui as BadgeTemplate, Fd as BaseButtonStyles, zo as BaseProgress, W as BindingBehavior, q as BindingDirective, Zi as Button, qd as ButtonStyles, Xi as ButtonTemplate, ro as CSSCustomPropertyBehavior, eo as Card, Kd as CardStyles, to as CardTemplate, oo as Checkbox, Yd as CheckboxStyles, io as CheckboxTemplate, Yt as ChildrenBehavior, Ft as Controller, d as DOM, Ji as DelegatesARIAButton, Wi as DelegatesARIALink, Dr as DelegatesARIATextbox, ho as DesignSystemProvider, go as DesignSystemProviderTemplate, Po as Dialog, tc as DialogStyles, bo as DialogTemplate, tr as DirectionalStyleSheetBehavior, O as Directive, Eo as Divider, Io as DividerRole, oc as DividerStyles, So as DividerTemplate, at as ElementStyles, I as ExecutionContext, Tt as FASTElement, $t as FASTElementDefinition, Oo as Flipper, Ao as FlipperDirection, nc as FlipperStyles, Bo as FlipperTemplate, Ld as FluentAccordion, Od as FluentAccordionItem, Md as FluentAnchor, jd as FluentBadge, Gd as FluentButton, Ud as FluentCard, Qd as FluentCheckbox, cl as FluentDesignSystemProvider, Jd as FluentDialog, ic as FluentDivider, sc as FluentFlipper, lc as FluentMenu, hc as FluentMenuItem, vc as FluentProgress, fc as FluentProgressRing, xc as FluentRadio, wc as FluentRadioGroup, Dc as FluentSkeleton, Sc as FluentSlider, Ec as FluentSliderLabel, Lc as FluentSwitch, Nc as FluentTab, Vc as FluentTabPanel, Gc as FluentTabs, Uc as FluentTextArea, Qc as FluentTextField, Jc as FluentTreeItem, ih as FluentTreeView, Yi as FormAssociated, it as HTMLView, Td as HypertextStyles, Pd as LightweightButtonStyles, Wo as MatchMediaBehavior, Uo as MatchMediaStyleSheetBehavior, No as Menu, Ro as MenuItem, Ho as MenuItemRole, uc as MenuItemStyles, Mo as MenuItemTemplate, dc as MenuStyles, Lo as MenuTemplate, k as Observable, Sd as OutlineButtonStyles, mc as ProgressRingStyles, Vo as ProgressRingTemplate, gc as ProgressStyles, jo as ProgressTemplate, g as PropertyChangeNotifier, Go as Radio, or as RadioGroup, Cc as RadioGroupStyles, qo as RadioGroupTemplate, $c as RadioStyles, _o as RadioTemplate, It as RefBehavior, Gt as RepeatBehavior, qt as RepeatDirective, sr as Skeleton, Tc as SkeletonStyles, rr as SkeletonTemplate, dr as Slider, ur as SliderLabel, Oc as SliderLabelStyles, cr as SliderLabelTemplate, lr as SliderMode, Ic as SliderStyles, nr as SliderTemplate, Xt as SlottedBehavior, Li as StartEnd, Id as StealthButtonStyles, v as SubscriberSet, vr as Switch, Hc as SwitchStyles, pr as SwitchTemplate, br as Tab, mr as TabPanel, _c as TabPanelStyles, fr as TabPanelTemplate, zc as TabStyles, gr as TabTemplate, $r as Tabs, xr as TabsOrientation, qc as TabsStyles, yr as TabsTemplate, Tr as TextArea, Cr as TextAreaResize, Kc as TextAreaStyles, Pr as TextAreaTemplate, Fr as TextField, Yc as TextFieldStyles, kr as TextFieldTemplate, wr as TextFieldType, Mr as Tooltip, Lr as TooltipPosition, Br as TooltipTemplate, Ar as TreeItem, th as TreeItemStyles, Sr as TreeItemTemplate, Or as TreeView, oh as TreeViewStyles, Er as TreeViewTemplate, ot as ViewTemplate, Kl as accentFillActiveBehavior, Xl as accentFillFocusBehavior, Ul as accentFillHoverBehavior, Jl as accentFillLargeActiveBehavior, td as accentFillLargeFocusBehavior, Zl as accentFillLargeHoverBehavior, Yl as accentFillLargeRestBehavior, ed as accentFillLargeSelectedBehavior, Wl as accentFillRestBehavior, Ql as accentFillSelectedBehavior, $l as accentForegroundActiveBehavior, wl as accentForegroundCutRestBehavior, kl as accentForegroundFocusBehavior, xl as accentForegroundHoverBehavior, Dl as accentForegroundLargeActiveBehavior, Tl as accentForegroundLargeFocusBehavior, Fl as accentForegroundLargeHoverBehavior, Cl as accentForegroundLargeRestBehavior, yl as accentForegroundRestBehavior, $d as ambientShadow, Ni as applyMixins, ft as attr, vt as booleanConverter, Zt as children, tt as compileTemplate, no as composedParent, nl as createColorPalette, pt as css, so as cssCustomPropertyBehaviorFactory, Pt as customElement, A as defaultExecutionContext, uo as defineDesignSystemProvider, co as designSystemConsumerBehavior, vo as designSystemProperty, po as designSystemProvider, kd as directionalShadow, Qo as disabledCursor, Zo as display, Ut as elements, wd as elevation, St as emptyArray, Hi as endTemplate, Jo as focusVisible, Xo as forcedColorsStylesheetBehavior, ir as getDirection, Cd as heightNumber, Yo as hidden, st as html, xd as inlineEndBehavior, yd as inlineStartBehavior, lo as isDesignSystemConsumer, Ir as isTreeItemElement, Ko as matchMediaStylesheetBehaviorFactory, ad as neutralDividerRestBehavior, Il as neutralFillActiveBehavior, id as neutralFillCardRestBehavior, Al as neutralFillFocusBehavior, Sl as neutralFillHoverBehavior, Gl as neutralFillInputActiveBehavior, ql as neutralFillInputFocusBehavior, _l as neutralFillInputHoverBehavior, Vl as neutralFillInputRestBehavior, Pl as neutralFillRestBehavior, El as neutralFillSelectedBehavior, Ll as neutralFillStealthActiveBehavior, Hl as neutralFillStealthFocusBehavior, Bl as neutralFillStealthHoverBehavior, Ol as neutralFillStealthRestBehavior, Rl as neutralFillStealthSelectedBehavior, zl as neutralFillToggleActiveBehavior, jl as neutralFillToggleFocusBehavior, Nl as neutralFillToggleHoverBehavior, Ml as neutralFillToggleRestBehavior, bd as neutralFocusBehavior, fd as neutralFocusInnerAccentBehavior, pl as neutralForegroundActiveBehavior, vl as neutralForegroundFocusBehavior, fl as neutralForegroundHintBehavior, ml as neutralForegroundHintLargeBehavior, ul as neutralForegroundHoverBehavior, hl as neutralForegroundRestBehavior, gl as neutralForegroundToggleBehavior, bl as neutralForegroundToggleLargeBehavior, dd as neutralLayerCardBehavior, cd as neutralLayerCardContainerBehavior, ld as neutralLayerFloatingBehavior, ud as neutralLayerL1AltBehavior, hd as neutralLayerL1Behavior, pd as neutralLayerL2Behavior, vd as neutralLayerL3Behavior, gd as neutralLayerL4Behavior, sd as neutralOutlineActiveBehavior, nd as neutralOutlineFocusBehavior, rd as neutralOutlineHoverBehavior, od as neutralOutlineRestBehavior, gt as nullableNumberConverter, D as observable, sh as parseColorString, At as ref, Wt as repeat, S as setCurrentEvent, Qt as slotted, Ri as startTemplate, Qi as supportsElementInternals, T as volatile, Et as when };