# Xamarin.Android
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
  batch: true
  branches:
    include:
    - master
    - hotfix/*
    - release/*
    - feature/*
    - development

schedules:
- cron: "0 3 * * *"
  displayName: Nightly Build
  branches:
    include:
    - feature/*
    - development
    exclude:
    - master
    - hotfix/*
    - release/*

pool:
  vmImage: windows-latest

variables:
  packages: './NuGet.Config'
  solution: '**/Xamarin.sln'
  project: '**/CRM.Android.csproj'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

jobs:
- job: CI_Debug
  condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual'), not(in(variables['Build.SourceBranchName'], 'master', 'release/*', 'hotfix/*')))
  steps:
  - task: NuGetToolInstaller@1
    displayName: 'Install Latest NuGet'
    inputs:
      versionSpec: 
      checkLatest: true
  - task: NuGetCommand@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'
      feedsToUse: 'config'
      nugetConfigPath: '$(packages)'
  - task: XamarinAndroid@1
    displayName: 'Build'
    inputs:
      clean: true
      projectFile: '$(project)'
      outputDirectory: '$(outputDirectory)'
      configuration: 'debug'
      msbuildVersionOption: 'latest'
      msbuildArchitectureOption: 'x64'
      jdkOption: 'JDKVersion'
      
- job: CI_Release
  condition: and(always(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), not(in(variables['Build.SourceBranchName'], 'development', 'feature/*')))
  steps:
  - task: NuGetToolInstaller@1
    displayName: 'Install Latest NuGet'
    inputs:
      versionSpec: 
      checkLatest: true
  - task: NuGetCommand@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'
      feedsToUse: 'config'
      nugetConfigPath: '$(packages)'
  - task: XamarinAndroid@1
    displayName: 'Build'
    inputs:
      clean: true
      projectFile: '$(project)'
      outputDirectory: '$(outputDirectory)'
      configuration: 'release'
      msbuildVersionOption: 'latest'
      msbuildArchitectureOption: 'x64'
      jdkOption: 'JDKVersion'
      
- job: Scheduled_Release
  condition: and(always(), eq(variables['Build.Reason'], 'Schedule'))
  steps:
  - task: NuGetToolInstaller@1
    displayName: 'Install Latest NuGet'
    inputs:
      versionSpec: 
      checkLatest: true
  - task: NuGetCommand@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'
      feedsToUse: 'config'
      nugetConfigPath: '$(packages)'
  - task: XamarinAndroid@1
    displayName: 'Build'
    inputs:
      clean: true
      projectFile: '$(project)'
      outputDirectory: '$(outputDirectory)'
      configuration: 'release'
      msbuildVersionOption: 'latest'
      msbuildArchitectureOption: 'x64'
      jdkOption: 'JDKVersion'