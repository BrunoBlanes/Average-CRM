# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pr: none
trigger: none
schedules:
- cron: "0 15 * * *"
  displayName: Daily Debug Build
  branches:
    include:
    - master
  always: true

variables:
  solution: '**/CRM.sln'
  packages: './NuGet.Config'
  net: '6.0.100-preview.4.21255.9'
  project: '**/CRM.Server.csproj'

jobs:
- job: CI_Linux_Debug
  pool:
    vmImage: ubuntu-latest

  strategy:
    matrix:
      Linux x64:
        runtime: linux-x64
      Linux ARM:
        runtime: linux-arm
    maxParallel: 0

  steps:
  - task: UseDotNet@2
    displayName: 'Download .NET 6.x SDK'
    inputs:
      packageType: 'sdk'
      version: '$(net)'
      includePreviewVersions: true
      performMultiLevelLookup: true
  - task: Npm@1
    displayName: 'NPM Install'
    inputs:
      command: 'install'
      workingDir: './Core'
      verbose: true
  - task: DotNetCoreCLI@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      projects: '$(solution)'
      publishPackageMetadata: true
      nugetConfigPath: '$(packages)'
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '$(project)'
      arguments: '--no-restore --configuration release --runtime $(runtime)'
  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      projects: '$(project)'
      zipAfterPublish: false
      publishWebProjects: false
      arguments: '--no-restore --configuration release --output $(build.artifactstagingdirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'

- job: CI_Windows_Debug
  pool:
    vmImage: windows-latest

  strategy:
    matrix:
      Windows x86:
        runtime: win-x86
      Windows x64:
        runtime: win-x64
      Windows ARM:
        runtime: win-arm
    maxParallel: 0

  steps:
  - task: UseDotNet@2
    displayName: 'Download .NET 6.x SDK'
    inputs:
      packageType: 'sdk'
      version: '$(net)'
      includePreviewVersions: true
      performMultiLevelLookup: true
  - task: Npm@1
    displayName: 'NPM Install'
    inputs:
      command: 'install'
      workingDir: './Core'
      verbose: true
  - task: DotNetCoreCLI@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      projects: '$(solution)'
      publishPackageMetadata: true
      nugetConfigPath: '$(packages)'
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '$(project)'
      arguments: '--no-restore --configuration release --runtime $(runtime)'
  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      projects: '$(project)'
      zipAfterPublish: false
      publishWebProjects: false
      arguments: '--no-restore --configuration release --output $(build.artifactstagingdirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'